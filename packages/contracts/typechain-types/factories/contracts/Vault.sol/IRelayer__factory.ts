/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRelayer,
  IRelayerInterface,
} from "../../../contracts/Vault.sol/IRelayer";

const _abi = [
  {
    inputs: [],
    name: "TOKEN_A",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_B",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_cNode",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_balanceA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balanceB",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "genericExecutor",
    outputs: [
      {
        internalType: "contract IAggregationExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "genericRouter",
    outputs: [
      {
        internalType: "contract IGenericRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifier",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_balanceA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balanceB",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRelayer__factory {
  static readonly abi = _abi;
  static createInterface(): IRelayerInterface {
    return new Interface(_abi) as IRelayerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IRelayer {
    return new Contract(address, _abi, runner) as unknown as IRelayer;
  }
}
