/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Vault, VaultInterface } from "../../../contracts/Vault.sol/Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRelayer",
        name: "_relayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_cModel",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "afterBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cModel",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_cNode",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
    ],
    name: "depositToRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "contract IRelayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum VaultState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWeights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "userDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userWeights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "userWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifier",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_balanceA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balanceB",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
    ],
    name: "withdrawFromRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001daa38038062001daa833981810160405281019062000037919062000438565b81806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060018190555060805173ffffffffffffffffffffffffffffffffffffffff1663ff709ee86040518163ffffffff1660e01b81526004016020604051808303816000875af11580156200015f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001859190620004d9565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b36080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401620001e392919062000537565b6020604051808303816000875af115801562000203573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002299190620005a1565b5060805173ffffffffffffffffffffffffffffffffffffffff1663499f712e6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156200027a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002a09190620004d9565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b36080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401620002fe92919062000537565b6020604051808303816000875af11580156200031e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003449190620005a1565b50505050620005d3565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003808262000353565b9050919050565b6000620003948262000373565b9050919050565b620003a68162000387565b8114620003b257600080fd5b50565b600081519050620003c6816200039b565b92915050565b620003d78162000373565b8114620003e357600080fd5b50565b600081519050620003f781620003cc565b92915050565b6000819050919050565b6200041281620003fd565b81146200041e57600080fd5b50565b600081519050620004328162000407565b92915050565b6000806000606084860312156200045457620004536200034e565b5b60006200046486828701620003b5565b93505060206200047786828701620003e6565b92505060406200048a8682870162000421565b9150509250925092565b6000620004a18262000373565b9050919050565b620004b38162000494565b8114620004bf57600080fd5b50565b600081519050620004d381620004a8565b92915050565b600060208284031215620004f257620004f16200034e565b5b60006200050284828501620004c2565b91505092915050565b620005168162000373565b82525050565b6000819050919050565b62000531816200051c565b82525050565b60006040820190506200054e60008301856200050b565b6200055d602083018462000526565b9392505050565b60008115159050919050565b6200057b8162000564565b81146200058757600080fd5b50565b6000815190506200059b8162000570565b92915050565b600060208284031215620005ba57620005b96200034e565b5b6000620005ca848285016200058a565b91505092915050565b60805161178a620006206000396000818161030001528181610535015281816106430152818161074f0152818161082b01528181610ac801528181610b5d0152610d17015261178a6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063926323d511610071578063926323d51461017b578063b2b4e62f14610199578063c19d93fb146101b7578063f2fde38b146101d5578063f4725af4146101f1578063f868e7661461020d576100b4565b80630542631b146100b9578063556a6d8a146100d557806372a7fa5b146101055780638406c079146101215780638da5cb5b1461013f57806391daa9021461015d575b600080fd5b6100d360048036038101906100ce9190610f01565b610229565b005b6100ef60048036038101906100ea9190610f01565b610414565b6040516100fc9190610f47565b60405180910390f35b61011f600480360381019061011a9190610ffd565b61042c565b005b610129610829565b60405161013691906110bc565b60405180910390f35b61014761084d565b60405161015491906110e6565b60405180910390f35b610165610871565b6040516101729190610f47565b60405180910390f35b610183610877565b6040516101909190610f47565b60405180910390f35b6101a161087d565b6040516101ae9190611110565b60405180910390f35b6101bf610883565b6040516101cc91906111a2565b60405180910390f35b6101ef60048036038101906101ea9190610f01565b610896565b005b61020b600480360381019061020691906111e9565b6109c1565b005b61022760048036038101906102229190611271565b610c9e565b005b600280600281111561023e5761023d61112b565b5b600560009054906101000a900460ff1660028111156102605761025f61112b565b5b146102a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610297906112fb565b60405180910390fd5b6000600354600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546004546102f2919061134a565b6102fc91906113bb565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ff709ee86040518163ffffffff1660e01b81526004016020604051808303816000875af115801561036b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038f919061142a565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3085846040518463ffffffff1660e01b81526004016103cb93929190611457565b6020604051808303816000875af11580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e91906114c6565b50505050565b60026020528060005260406000206000915090505481565b60008060028111156104415761044061112b565b5b600560009054906101000a900460ff1660028111156104635761046261112b565b5b146104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a906112fb565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610531576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105289061153f565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ff709ee86040518163ffffffff1660e01b81526004016020604051808303816000875af11580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c4919061142a565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105fc91906110e6565b602060405180830381865afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d9190611574565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663499f712e6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d2919061142a565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161070a91906110e6565b602060405180830381865afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b9190611574565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166361f6c0338760015485858a8a6040518763ffffffff1660e01b81526004016107b2969594939291906115ff565b6020604051808303816000875af11580156107d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f59190611697565b506001600560006101000a81548160ff0219169083600281111561081c5761081b61112b565b5b0217905550505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60035481565b60015481565b600560009054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091b9061153f565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60018060028111156109d6576109d561112b565b5b600560009054906101000a900460ff1660028111156109f8576109f761112b565b5b14610a38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2f906112fb565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd9061153f565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c4b5239f8787873088886040518763ffffffff1660e01b8152600401610b29969594939291906116c4565b600060405180830381600087803b158015610b4357600080fd5b505af1158015610b57573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ff709ee86040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec919061142a565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c2491906110e6565b602060405180830381865afa158015610c41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c659190611574565b6004819055506002600560006101000a81548160ff02191690836002811115610c9157610c9061112b565b5b0217905550505050505050565b6000806002811115610cb357610cb261112b565b5b600560009054906101000a900460ff166002811115610cd557610cd461112b565b5b14610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c906112fb565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ff709ee86040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da6919061142a565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610de293929190611457565b6020604051808303816000875af1158015610e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2591906114c6565b5081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e759190611720565b925050819055508160036000828254610e8e9190611720565b925050819055505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ece82610ea3565b9050919050565b610ede81610ec3565b8114610ee957600080fd5b50565b600081359050610efb81610ed5565b92915050565b600060208284031215610f1757610f16610e99565b5b6000610f2584828501610eec565b91505092915050565b6000819050919050565b610f4181610f2e565b82525050565b6000602082019050610f5c6000830184610f38565b92915050565b6000819050919050565b610f7581610f62565b8114610f8057600080fd5b50565b600081359050610f9281610f6c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610fbd57610fbc610f98565b5b8235905067ffffffffffffffff811115610fda57610fd9610f9d565b5b602083019150836001820283011115610ff657610ff5610fa2565b5b9250929050565b60008060006040848603121561101657611015610e99565b5b600061102486828701610f83565b935050602084013567ffffffffffffffff81111561104557611044610e9e565b5b61105186828701610fa7565b92509250509250925092565b6000819050919050565b600061108261107d61107884610ea3565b61105d565b610ea3565b9050919050565b600061109482611067565b9050919050565b60006110a682611089565b9050919050565b6110b68161109b565b82525050565b60006020820190506110d160008301846110ad565b92915050565b6110e081610ec3565b82525050565b60006020820190506110fb60008301846110d7565b92915050565b61110a81610f62565b82525050565b60006020820190506111256000830184611101565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061116b5761116a61112b565b5b50565b600081905061117c8261115a565b919050565b600061118c8261116e565b9050919050565b61119c81611181565b82525050565b60006020820190506111b76000830184611193565b92915050565b6111c681610f2e565b81146111d157600080fd5b50565b6000813590506111e3816111bd565b92915050565b60008060008060006080868803121561120557611204610e99565b5b600061121388828901610f83565b9550506020611224888289016111d4565b9450506040611235888289016111d4565b935050606086013567ffffffffffffffff81111561125657611255610e9e565b5b61126288828901610fa7565b92509250509295509295909350565b60006020828403121561128757611286610e99565b5b6000611295848285016111d4565b91505092915050565b600082825260208201905092915050565b7f496e76616c6964205661756c7420737461746500000000000000000000000000600082015250565b60006112e560138361129e565b91506112f0826112af565b602082019050919050565b60006020820190508181036000830152611314816112d8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061135582610f2e565b915061136083610f2e565b925082820261136e81610f2e565b915082820484148315176113855761138461131b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006113c682610f2e565b91506113d183610f2e565b9250826113e1576113e061138c565b5b828204905092915050565b60006113f782610ec3565b9050919050565b611407816113ec565b811461141257600080fd5b50565b600081519050611424816113fe565b92915050565b6000602082840312156114405761143f610e99565b5b600061144e84828501611415565b91505092915050565b600060608201905061146c60008301866110d7565b61147960208301856110d7565b6114866040830184610f38565b949350505050565b60008115159050919050565b6114a38161148e565b81146114ae57600080fd5b50565b6000815190506114c08161149a565b92915050565b6000602082840312156114dc576114db610e99565b5b60006114ea848285016114b1565b91505092915050565b7f554e415554484f52495a45440000000000000000000000000000000000000000600082015250565b6000611529600c8361129e565b9150611534826114f3565b602082019050919050565b600060208201905081810360008301526115588161151c565b9050919050565b60008151905061156e816111bd565b92915050565b60006020828403121561158a57611589610e99565b5b60006115988482850161155f565b91505092915050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006115de83856115a1565b93506115eb8385846115b2565b6115f4836115c1565b840190509392505050565b600060a0820190506116146000830189611101565b6116216020830188611101565b61162e6040830187610f38565b61163b6060830186610f38565b818103608083015261164e8184866115d2565b9050979650505050505050565b600063ffffffff82169050919050565b6116748161165b565b811461167f57600080fd5b50565b6000815190506116918161166b565b92915050565b6000602082840312156116ad576116ac610e99565b5b60006116bb84828501611682565b91505092915050565b600060a0820190506116d96000830189611101565b6116e66020830188610f38565b6116f36040830187610f38565b61170060608301866110d7565b81810360808301526117138184866115d2565b9050979650505050505050565b600061172b82610f2e565b915061173683610f2e565b925082820190508082111561174e5761174d61131b565b5b9291505056fea264697066735822122059eda6a447b38547b4cba23edc63d1a613c85e885c15a52abde7af9efed1047164736f6c63430008110033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _relayer: AddressLike,
    _trader: AddressLike,
    _cModel: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _relayer,
      _trader,
      _cModel,
      overrides || {}
    );
  }
  override deploy(
    _relayer: AddressLike,
    _trader: AddressLike,
    _cModel: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_relayer, _trader, _cModel, overrides || {}) as Promise<
      Vault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Vault__factory {
    return super.connect(runner) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new Interface(_abi) as VaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Vault {
    return new Contract(address, _abi, runner) as unknown as Vault;
  }
}
