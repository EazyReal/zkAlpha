/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IHasher,
  IHasherInterface,
} from "../../../contracts/MerkleTree.sol/IHasher";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "in_xL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "in_xR",
        type: "uint256",
      },
    ],
    name: "MiMCSponge",
    outputs: [
      {
        internalType: "uint256",
        name: "xL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "xR",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IHasher__factory {
  static readonly abi = _abi;
  static createInterface(): IHasherInterface {
    return new Interface(_abi) as IHasherInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IHasher {
    return new Contract(address, _abi, runner) as unknown as IHasher;
  }
}
