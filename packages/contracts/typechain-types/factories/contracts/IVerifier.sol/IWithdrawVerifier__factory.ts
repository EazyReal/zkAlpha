/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IWithdrawVerifier,
  IWithdrawVerifierInterface,
} from "../../../contracts/IVerifier.sol/IWithdrawVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "_publicInputs",
        type: "uint256[5]",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IWithdrawVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IWithdrawVerifierInterface {
    return new Interface(_abi) as IWithdrawVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IWithdrawVerifier {
    return new Contract(address, _abi, runner) as unknown as IWithdrawVerifier;
  }
}
