{"id":"3af451c673a09a9b708d7af2e7821f75","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/interfaces/I1nchRouter.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport {SafeERC20} from \"../libraries/SafeERC20.sol\";\nimport {UniERC20, IERC20} from \"../libraries/UniERC20.sol\";\n\n\ninterface IAggregationExecutor { \n    /// @notice propagates information about original msg.sender and executes arbitrary data \n    function execute(address msgSender) external payable;  // 0x4b64e492 \n}\n\ninterface IGenericRouter {\n\n    struct SwapDescription {\n        IERC20 srcToken;\n        IERC20 dstToken;\n        address payable srcReceiver;\n        address payable dstReceiver;\n        uint256 amount;\n        uint256 minReturnAmount;\n        uint256 flags;\n    }\n    \n    function swap(\n        IAggregationExecutor executor,\n        SwapDescription calldata desc,\n        bytes calldata permit,\n        bytes calldata data\n    ) external payable returns (uint256 returnAmountm, uint256 spentAmount);\n}"},"contracts/interfaces/ICreate3Deployer.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface ICreate3Deployer {\n    function deploy(bytes32 salt, bytes calldata code) external returns (address);\n    function addressOf(bytes32 salt) external view returns (address);\n}\n"},"contracts/interfaces/IDaiLikePermit.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IDaiLikePermit {\n    function permit(\n        address holder,\n        address spender,\n        uint256 nonce,\n        uint256 expiry,\n        bool allowed,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"contracts/interfaces/IERC20MetadataUppercase.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IERC20MetadataUppercase {\n    function NAME() external view returns (string memory); // solhint-disable-line func-name-mixedcase\n\n    function SYMBOL() external view returns (string memory); // solhint-disable-line func-name-mixedcase\n}\n"},"contracts/interfaces/IPermit2.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IPermit2 {\n    struct PermitDetails {\n        // ERC20 token address\n        address token;\n        // the maximum amount allowed to spend\n        uint160 amount;\n        // timestamp at which a spender's token allowances become invalid\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n    /// @notice The permit message signed for a single token allownce\n    struct PermitSingle {\n        // the permit data for a single token alownce\n        PermitDetails details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n    /// @notice Packed allowance\n    struct PackedAllowance {\n        // amount allowed\n        uint160 amount;\n        // permission expiry\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    function transferFrom(address user, address spender, uint160 amount, address token) external;\n\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\n\n    function allowance(address user, address token, address spender) external view returns (PackedAllowance memory);\n}\n"},"contracts/interfaces/IWETH.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IWETH is IERC20 {\n    event Deposit(address indexed dst, uint wad);\n\n    event Withdrawal(address indexed src, uint wad);\n\n    function deposit() external payable;\n\n    function withdraw(uint256 amount) external;\n}\n"},"contracts/IVerifier.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface IDepositVerifier {\n    function verify(\n        uint256[5] calldata _publicInputs,\n        bytes calldata _proof\n    ) external view returns (bool);\n}\n\ninterface IWithdrawVerifier {\n    function verify(\n        uint256[5] calldata _publicInputs,\n        bytes calldata _proof\n    ) external view returns (bool);\n}\n\ninterface ISwapVerifier {\n    function verify(\n        uint256[4] calldata _publicInputs,\n        bytes calldata _proof\n    ) external view returns (bool);\n}\n\ninterface IFinalizeVerifier {\n    function verify(\n        uint256[3] calldata _publicInputs,\n        bytes calldata _proof\n    ) external view returns (bool);\n}\n"},"contracts/libraries/AddressArray.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title Library that implements address array on mapping, stores array length at 0 index.\nlibrary AddressArray {\n    error IndexOutOfBounds();\n    error PopFromEmptyArray();\n    error OutputArrayTooSmall();\n\n    /// @dev Data struct containing raw mapping.\n    struct Data {\n        mapping(uint256 => uint256) _raw;\n    }\n\n    /// @dev Length of array.\n    function length(Data storage self) internal view returns (uint256) {\n        return self._raw[0] >> 160;\n    }\n\n    /// @dev Returns data item from `self` storage at `i`.\n    function at(Data storage self, uint256 i) internal view returns (address) {\n        return address(uint160(self._raw[i]));\n    }\n\n    /// @dev Returns list of addresses from storage `self`.\n    function get(Data storage self) internal view returns (address[] memory arr) {\n        uint256 lengthAndFirst = self._raw[0];\n        arr = new address[](lengthAndFirst >> 160);\n        _get(self, arr, lengthAndFirst);\n    }\n\n    /// @dev Puts list of addresses from `self` storage into `output` array.\n    function get(Data storage self, address[] memory output) internal view returns (address[] memory) {\n        return _get(self, output, self._raw[0]);\n    }\n\n    function _get(\n        Data storage self,\n        address[] memory output,\n        uint256 lengthAndFirst\n    ) private view returns (address[] memory) {\n        uint256 len = lengthAndFirst >> 160;\n        if (len > output.length) revert OutputArrayTooSmall();\n        if (len > 0) {\n            output[0] = address(uint160(lengthAndFirst));\n            unchecked {\n                for (uint256 i = 1; i < len; i++) {\n                    output[i] = address(uint160(self._raw[i]));\n                }\n            }\n        }\n        return output;\n    }\n\n    /// @dev Array push back `account` operation on storage `self`.\n    function push(Data storage self, address account) internal returns (uint256) {\n        unchecked {\n            uint256 lengthAndFirst = self._raw[0];\n            uint256 len = lengthAndFirst >> 160;\n            if (len == 0) {\n                self._raw[0] = (1 << 160) + uint160(account);\n            } else {\n                self._raw[0] = lengthAndFirst + (1 << 160);\n                self._raw[len] = uint160(account);\n            }\n            return len + 1;\n        }\n    }\n\n    /// @dev Array pop back operation for storage `self`.\n    function pop(Data storage self) internal {\n        unchecked {\n            uint256 lengthAndFirst = self._raw[0];\n            uint256 len = lengthAndFirst >> 160;\n            if (len == 0) revert PopFromEmptyArray();\n            self._raw[len - 1] = 0;\n            if (len > 1) {\n                self._raw[0] = lengthAndFirst - (1 << 160);\n            }\n        }\n    }\n\n    /// @dev Set element for storage `self` at `index` to `account`.\n    function set(\n        Data storage self,\n        uint256 index,\n        address account\n    ) internal {\n        uint256 len = length(self);\n        if (index >= len) revert IndexOutOfBounds();\n\n        if (index == 0) {\n            self._raw[0] = (len << 160) | uint160(account);\n        } else {\n            self._raw[index] = uint160(account);\n        }\n    }\n}\n"},"contracts/libraries/AddressLib.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ntype Address is uint256;\n\n/**\n* @dev Library for working with addresses encoded as uint256 values, which can include flags in the highest bits.\n*/\nlibrary AddressLib {\n    uint256 private constant _LOW_160_BIT_MASK = (1 << 160) - 1;\n\n    /**\n    * @notice Returns the address representation of a uint256.\n    * @param a The uint256 value to convert to an address.\n    * @return The address representation of the provided uint256 value.\n    */\n    function get(Address a) internal pure returns (address) {\n        return address(uint160(Address.unwrap(a) & _LOW_160_BIT_MASK));\n    }\n\n    /**\n    * @notice Checks if a given flag is set for the provided address.\n    * @param a The address to check for the flag.\n    * @param flag The flag to check for in the provided address.\n    * @return True if the provided flag is set in the address, false otherwise.\n    */\n    function getFlag(Address a, uint256 flag) internal pure returns (bool) {\n        return (Address.unwrap(a) & flag) != 0;\n    }\n\n    /**\n    * @notice Returns a uint32 value stored at a specific bit offset in the provided address.\n    * @param a The address containing the uint32 value.\n    * @param offset The bit offset at which the uint32 value is stored.\n    * @return The uint32 value stored in the address at the specified bit offset.\n    */\n    function getUint32(Address a, uint256 offset) internal pure returns (uint32) {\n        return uint32(Address.unwrap(a) >> offset);\n    }\n\n    /**\n    * @notice Returns a uint64 value stored at a specific bit offset in the provided address.\n    * @param a The address containing the uint64 value.\n    * @param offset The bit offset at which the uint64 value is stored.\n    * @return The uint64 value stored in the address at the specified bit offset.\n    */\n    function getUint64(Address a, uint256 offset) internal pure returns (uint64) {\n        return uint64(Address.unwrap(a) >> offset);\n    }\n}\n"},"contracts/libraries/AddressSet.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./AddressArray.sol\";\n\n/** @title Library that is using AddressArray library for AddressArray.Data\n * and allows Set operations on address storage data:\n * 1. add\n * 2. remove\n * 3. contains\n */\nlibrary AddressSet {\n    using AddressArray for AddressArray.Data;\n\n    /** @dev Data struct from AddressArray.Data items\n     * and lookup mapping address => index in data array.\n     */\n    struct Data {\n        AddressArray.Data items;\n        mapping(address => uint256) lookup;\n    }\n\n    /// @dev Length of data storage.\n    function length(Data storage s) internal view returns (uint256) {\n        return s.items.length();\n    }\n\n    /// @dev Returns data item from `s` storage at `index`.\n    function at(Data storage s, uint256 index) internal view returns (address) {\n        return s.items.at(index);\n    }\n\n    /// @dev Returns true if storage `s` has `item`.\n    function contains(Data storage s, address item) internal view returns (bool) {\n        return s.lookup[item] != 0;\n    }\n\n    /// @dev Adds `item` into storage `s` and returns true if successful.\n    function add(Data storage s, address item) internal returns (bool) {\n        if (s.lookup[item] > 0) {\n            return false;\n        }\n        s.lookup[item] = s.items.push(item);\n        return true;\n    }\n\n    /// @dev Removes `item` from storage `s` and returns true if successful.\n    function remove(Data storage s, address item) internal returns (bool) {\n        uint256 index = s.lookup[item];\n        if (index == 0) {\n            return false;\n        }\n        if (index < s.items.length()) {\n            unchecked {\n                address lastItem = s.items.at(s.items.length() - 1);\n                s.items.set(index - 1, lastItem);\n                s.lookup[lastItem] = index;\n            }\n        }\n        s.items.pop();\n        delete s.lookup[item];\n        return true;\n    }\n}\n"},"contracts/libraries/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/interfaces/IERC1271.sol\";\n\nlibrary ECDSA {\n    // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n    // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n    // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n    // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n    //\n    // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n    // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n    // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n    // these malleable signatures as well.\n    uint256 private constant _S_BOUNDARY = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 + 1;\n    uint256 private constant _COMPACT_S_MASK = 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n    uint256 private constant _COMPACT_V_SHIFT = 255;\n\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal view returns (address signer) {\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            if lt(s, _S_BOUNDARY) {\n                let ptr := mload(0x40)\n\n                mstore(ptr, hash)\n                mstore(add(ptr, 0x20), v)\n                mstore(add(ptr, 0x40), r)\n                mstore(add(ptr, 0x60), s)\n                mstore(0, 0)\n                pop(staticcall(gas(), 0x1, ptr, 0x80, 0, 0x20))\n                signer := mload(0)\n            }\n        }\n    }\n\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal view returns (address signer) {\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let s := and(vs, _COMPACT_S_MASK)\n            if lt(s, _S_BOUNDARY) {\n                let ptr := mload(0x40)\n\n                mstore(ptr, hash)\n                mstore(add(ptr, 0x20), add(27, shr(_COMPACT_V_SHIFT, vs)))\n                mstore(add(ptr, 0x40), r)\n                mstore(add(ptr, 0x60), s)\n                mstore(0, 0)\n                pop(staticcall(gas(), 0x1, ptr, 0x80, 0, 0x20))\n                signer := mload(0)\n            }\n        }\n    }\n\n    /// @dev WARNING!!!\n    /// There is a known signature malleability issue with two representations of signatures!\n    /// Even though this function is able to verify both standard 65-byte and compact 64-byte EIP-2098 signatures\n    /// one should never use raw signatures for any kind of invalidation logic in their code.\n    /// As the standard and compact representations are interchangeable any invalidation logic that relies on\n    /// signature uniqueness will get rekt.\n    /// More info: https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-4h98-2769-gh6h\n    function recover(bytes32 hash, bytes calldata signature) internal view returns (address signer) {\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n\n            // memory[ptr:ptr+0x80] = (hash, v, r, s)\n            switch signature.length\n            case 65 {\n                // memory[ptr+0x20:ptr+0x80] = (v, r, s)\n                mstore(add(ptr, 0x20), byte(0, calldataload(add(signature.offset, 0x40))))\n                calldatacopy(add(ptr, 0x40), signature.offset, 0x40)\n            }\n            case 64 {\n                // memory[ptr+0x20:ptr+0x80] = (v, r, s)\n                let vs := calldataload(add(signature.offset, 0x20))\n                mstore(add(ptr, 0x20), add(27, shr(_COMPACT_V_SHIFT, vs)))\n                calldatacopy(add(ptr, 0x40), signature.offset, 0x20)\n                mstore(add(ptr, 0x60), and(vs, _COMPACT_S_MASK))\n            }\n            default {\n                ptr := 0\n            }\n\n            if ptr {\n                if lt(mload(add(ptr, 0x60)), _S_BOUNDARY) {\n                    // memory[ptr:ptr+0x20] = (hash)\n                    mstore(ptr, hash)\n\n                    mstore(0, 0)\n                    pop(staticcall(gas(), 0x1, ptr, 0x80, 0, 0x20))\n                    signer := mload(0)\n                }\n            }\n        }\n    }\n\n    function recoverOrIsValidSignature(\n        address signer,\n        bytes32 hash,\n        bytes calldata signature\n    ) internal view returns (bool success) {\n        if (signer == address(0)) return false;\n        if ((signature.length == 64 || signature.length == 65) && recover(hash, signature) == signer) {\n            return true;\n        }\n        return isValidSignature(signer, hash, signature);\n    }\n\n    function recoverOrIsValidSignature(\n        address signer,\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal view returns (bool success) {\n        if (signer == address(0)) return false;\n        if (recover(hash, v, r, s) == signer) {\n            return true;\n        }\n        return isValidSignature(signer, hash, v, r, s);\n    }\n\n    function recoverOrIsValidSignature(\n        address signer,\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal view returns (bool success) {\n        if (signer == address(0)) return false;\n        if (recover(hash, r, vs) == signer) {\n            return true;\n        }\n        return isValidSignature(signer, hash, r, vs);\n    }\n\n    function recoverOrIsValidSignature65(\n        address signer,\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal view returns (bool success) {\n        if (signer == address(0)) return false;\n        if (recover(hash, r, vs) == signer) {\n            return true;\n        }\n        return isValidSignature65(signer, hash, r, vs);\n    }\n\n    function isValidSignature(\n        address signer,\n        bytes32 hash,\n        bytes calldata signature\n    ) internal view returns (bool success) {\n        // (bool success, bytes memory data) = signer.staticcall(abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, signature));\n        // return success && data.length >= 4 && abi.decode(data, (bytes4)) == IERC1271.isValidSignature.selector;\n        bytes4 selector = IERC1271.isValidSignature.selector;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n\n            mstore(ptr, selector)\n            mstore(add(ptr, 0x04), hash)\n            mstore(add(ptr, 0x24), 0x40)\n            mstore(add(ptr, 0x44), signature.length)\n            calldatacopy(add(ptr, 0x64), signature.offset, signature.length)\n            if staticcall(gas(), signer, ptr, add(0x64, signature.length), 0, 0x20) {\n                success := and(eq(selector, mload(0)), eq(returndatasize(), 0x20))\n            }\n        }\n    }\n\n    function isValidSignature(\n        address signer,\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal view returns (bool success) {\n        bytes4 selector = IERC1271.isValidSignature.selector;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n\n            mstore(ptr, selector)\n            mstore(add(ptr, 0x04), hash)\n            mstore(add(ptr, 0x24), 0x40)\n            mstore(add(ptr, 0x44), 65)\n            mstore(add(ptr, 0x64), r)\n            mstore(add(ptr, 0x84), s)\n            mstore8(add(ptr, 0xa4), v)\n            if staticcall(gas(), signer, ptr, 0xa5, 0, 0x20) {\n                success := and(eq(selector, mload(0)), eq(returndatasize(), 0x20))\n            }\n        }\n    }\n\n    function isValidSignature(\n        address signer,\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal view returns (bool success) {\n        // (bool success, bytes memory data) = signer.staticcall(abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, abi.encodePacked(r, vs)));\n        // return success && data.length >= 4 && abi.decode(data, (bytes4)) == IERC1271.isValidSignature.selector;\n        bytes4 selector = IERC1271.isValidSignature.selector;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n\n            mstore(ptr, selector)\n            mstore(add(ptr, 0x04), hash)\n            mstore(add(ptr, 0x24), 0x40)\n            mstore(add(ptr, 0x44), 64)\n            mstore(add(ptr, 0x64), r)\n            mstore(add(ptr, 0x84), vs)\n            if staticcall(gas(), signer, ptr, 0xa4, 0, 0x20) {\n                success := and(eq(selector, mload(0)), eq(returndatasize(), 0x20))\n            }\n        }\n    }\n\n    function isValidSignature65(\n        address signer,\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal view returns (bool success) {\n        // (bool success, bytes memory data) = signer.staticcall(abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, abi.encodePacked(r, vs & ~uint256(1 << 255), uint8(vs >> 255))));\n        // return success && data.length >= 4 && abi.decode(data, (bytes4)) == IERC1271.isValidSignature.selector;\n        bytes4 selector = IERC1271.isValidSignature.selector;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n\n            mstore(ptr, selector)\n            mstore(add(ptr, 0x04), hash)\n            mstore(add(ptr, 0x24), 0x40)\n            mstore(add(ptr, 0x44), 65)\n            mstore(add(ptr, 0x64), r)\n            mstore(add(ptr, 0x84), and(vs, _COMPACT_S_MASK))\n            mstore8(add(ptr, 0xa4), add(27, shr(_COMPACT_V_SHIFT, vs)))\n            if staticcall(gas(), signer, ptr, 0xa5, 0, 0x20) {\n                success := and(eq(selector, mload(0)), eq(returndatasize(), 0x20))\n            }\n        }\n    }\n\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 res) {\n        // 32 is the length in bytes of hash, enforced by the type signature above\n        // return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            mstore(0, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000) // \"\\x19Ethereum Signed Message:\\n32\"\n            mstore(28, hash)\n            res := keccak256(0, 60)\n        }\n    }\n\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 res) {\n        // return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n            mstore(ptr, 0x1901000000000000000000000000000000000000000000000000000000000000) // \"\\x19\\x01\"\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            res := keccak256(ptr, 66)\n        }\n    }\n}\n"},"contracts/libraries/RevertReasonForwarder.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title Revert reason forwarder.\nlibrary RevertReasonForwarder {\n    /// @dev Forwards latest externall call revert.\n    function reRevert() internal pure {\n        // bubble up revert reason from latest external call\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n            returndatacopy(ptr, 0, returndatasize())\n            revert(ptr, returndatasize())\n        }\n    }\n}\n"},"contracts/libraries/RevertReasonParser.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./StringUtil.sol\";\n\n/** @title Library that allows to parse unsuccessful arbitrary calls revert reasons.\n * See https://solidity.readthedocs.io/en/latest/control-structures.html#revert for details.\n * Note that we assume revert reason being abi-encoded as Error(string) so it may fail to parse reason\n * if structured reverts appear in the future.\n *\n * All unsuccessful parsings get encoded as Unknown(data) string\n */\nlibrary RevertReasonParser {\n    using StringUtil for uint256;\n    using StringUtil for bytes;\n\n    error InvalidRevertReason();\n\n    bytes4 private constant _ERROR_SELECTOR = bytes4(keccak256(\"Error(string)\"));\n    bytes4 private constant _PANIC_SELECTOR = bytes4(keccak256(\"Panic(uint256)\"));\n\n    /// @dev Parses error `data` and returns actual with `prefix`.\n    function parse(bytes memory data, string memory prefix) internal pure returns (string memory) {\n        // https://solidity.readthedocs.io/en/latest/control-structures.html#revert\n        // We assume that revert reason is abi-encoded as Error(string)\n        bytes4 selector;\n        if (data.length >= 4) {\n            assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n                selector := mload(add(data, 0x20))\n            }\n        }\n\n        // 68 = 4-byte selector + 32 bytes offset + 32 bytes length\n        if (selector == _ERROR_SELECTOR && data.length >= 68) {\n            string memory reason;\n            assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n                // 68 = 32 bytes data length + 4-byte selector + 32 bytes offset\n                reason := add(data, 68)\n            }\n            /*\n                revert reason is padded up to 32 bytes with ABI encoder: Error(string)\n                also sometimes there is extra 32 bytes of zeros padded in the end:\n                https://github.com/ethereum/solidity/issues/10170\n                because of that we can't check for equality and instead check\n                that string length + extra 68 bytes is equal or greater than overall data length\n            */\n            if (data.length >= 68 + bytes(reason).length) {\n                return string.concat(prefix, \"Error(\", reason, \")\");\n            }\n        }\n        // 36 = 4-byte selector + 32 bytes integer\n        else if (selector == _PANIC_SELECTOR && data.length == 36) {\n            uint256 code;\n            assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n                // 36 = 32 bytes data length + 4-byte selector\n                code := mload(add(data, 36))\n            }\n            return string.concat(prefix, \"Panic(\", code.toHex(), \")\");\n        }\n        return string.concat(prefix, \"Unknown(\", data.toHex(), \")\");\n    }\n}\n"},"contracts/libraries/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\";\nimport \"../interfaces/IDaiLikePermit.sol\";\nimport \"../interfaces/IPermit2.sol\";\nimport \"../interfaces/IWETH.sol\";\nimport \"../libraries/RevertReasonForwarder.sol\";\n\n/**\n * @title Implements efficient safe methods for ERC20 interface.\n * @notice Compared to the standard ERC20, this implementation offers several enhancements:\n * 1. more gas-efficient, providing significant savings in transaction costs.\n * 2. support for different permit implementations\n * 3. forceApprove functionality\n * 4. support for WETH deposit and withdraw\n */\nlibrary SafeERC20 {\n    error SafeTransferFailed();\n    error SafeTransferFromFailed();\n    error ForceApproveFailed();\n    error SafeIncreaseAllowanceFailed();\n    error SafeDecreaseAllowanceFailed();\n    error SafePermitBadLength();\n    error Permit2TransferAmountTooHigh();\n\n    // Uniswap Permit2 address\n    address private constant _PERMIT2 = 0x000000000022D473030F116dDEE9F6B43aC78BA3;\n    bytes4 private constant _PERMIT_LENGTH_ERROR = 0x68275857;  // SafePermitBadLength.selector\n    uint256 private constant _RAW_CALL_GAS_LIMIT = 5000;\n\n    /**\n     * @notice Fetches the balance of a specific ERC20 token held by an account.\n     * Consumes less gas then regular `ERC20.balanceOf`.\n     * @param token The IERC20 token contract for which the balance will be fetched.\n     * @param account The address of the account whose token balance will be fetched.\n     * @return tokenBalance The balance of the specified ERC20 token held by the account.\n     */\n    function safeBalanceOf(\n        IERC20 token,\n        address account\n    ) internal view returns(uint256 tokenBalance) {\n        bytes4 selector = IERC20.balanceOf.selector;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            mstore(0x00, selector)\n            mstore(0x04, account)\n            let success := staticcall(gas(), token, 0x00, 0x24, 0x00, 0x20)\n            tokenBalance := mload(0)\n\n            if or(iszero(success), lt(returndatasize(), 0x20)) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @notice Attempts to safely transfer tokens from one address to another.\n     * @dev If permit2 is true, uses the Permit2 standard; otherwise uses the standard ERC20 transferFrom. \n     * Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n     * @param token The IERC20 token contract from which the tokens will be transferred.\n     * @param from The address from which the tokens will be transferred.\n     * @param to The address to which the tokens will be transferred.\n     * @param amount The amount of tokens to transfer.\n     * @param permit2 If true, uses the Permit2 standard for the transfer; otherwise uses the standard ERC20 transferFrom.\n     */\n    function safeTransferFromUniversal(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount,\n        bool permit2\n    ) internal {\n        if (permit2) {\n            safeTransferFromPermit2(token, from, to, amount);\n        } else {\n            safeTransferFrom(token, from, to, amount);\n        }\n    }\n\n    /**\n     * @notice Attempts to safely transfer tokens from one address to another using the ERC20 standard.\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n     * @param token The IERC20 token contract from which the tokens will be transferred.\n     * @param from The address from which the tokens will be transferred.\n     * @param to The address to which the tokens will be transferred.\n     * @param amount The amount of tokens to transfer.\n     */\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        bytes4 selector = token.transferFrom.selector;\n        bool success;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let data := mload(0x40)\n\n            mstore(data, selector)\n            mstore(add(data, 0x04), from)\n            mstore(add(data, 0x24), to)\n            mstore(add(data, 0x44), amount)\n            success := call(gas(), token, 0, data, 100, 0x0, 0x20)\n            if success {\n                switch returndatasize()\n                case 0 {\n                    success := gt(extcodesize(token), 0)\n                }\n                default {\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\n                }\n            }\n        }\n        if (!success) revert SafeTransferFromFailed();\n    }\n\n    /**\n     * @notice Attempts to safely transfer tokens from one address to another using the Permit2 standard.\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n     * @param token The IERC20 token contract from which the tokens will be transferred.\n     * @param from The address from which the tokens will be transferred.\n     * @param to The address to which the tokens will be transferred.\n     * @param amount The amount of tokens to transfer.\n     */\n    function safeTransferFromPermit2(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        if (amount > type(uint160).max) revert Permit2TransferAmountTooHigh();\n        bytes4 selector = IPermit2.transferFrom.selector;\n        bool success;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let data := mload(0x40)\n\n            mstore(data, selector)\n            mstore(add(data, 0x04), from)\n            mstore(add(data, 0x24), to)\n            mstore(add(data, 0x44), amount)\n            mstore(add(data, 0x64), token)\n            success := call(gas(), _PERMIT2, 0, data, 0x84, 0x0, 0x0)\n            if success {\n                success := gt(extcodesize(_PERMIT2), 0)\n            }\n        }\n        if (!success) revert SafeTransferFromFailed();\n    }\n\n    /**\n     * @notice Attempts to safely transfer tokens to another address.\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n     * @param token The IERC20 token contract from which the tokens will be transferred.\n     * @param to The address to which the tokens will be transferred.\n     * @param value The amount of tokens to transfer.\n     */\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        if (!_makeCall(token, token.transfer.selector, to, value)) {\n            revert SafeTransferFailed();\n        }\n    }\n\n    /**\n     * @notice Attempts to approve a spender to spend a certain amount of tokens.\n     * @dev If `approve(from, to, amount)` fails, it tries to set the allowance to zero, and retries the `approve` call.\n     * @param token The IERC20 token contract on which the call will be made.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     */\n    function forceApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        if (!_makeCall(token, token.approve.selector, spender, value)) {\n            if (\n                !_makeCall(token, token.approve.selector, spender, 0) ||\n                !_makeCall(token, token.approve.selector, spender, value)\n            ) {\n                revert ForceApproveFailed();\n            }\n        }\n    }\n\n    /**\n     * @notice Safely increases the allowance of a spender.\n     * @dev Increases with safe math check. Checks if the increased allowance will overflow, if yes, then it reverts the transaction.\n     * Then uses `forceApprove` to increase the allowance.\n     * @param token The IERC20 token contract on which the call will be made.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to increase the allowance by.\n     */\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 allowance = token.allowance(address(this), spender);\n        if (value > type(uint256).max - allowance) revert SafeIncreaseAllowanceFailed();\n        forceApprove(token, spender, allowance + value);\n    }\n\n    /**\n     * @notice Safely decreases the allowance of a spender.\n     * @dev Decreases with safe math check. Checks if the decreased allowance will underflow, if yes, then it reverts the transaction.\n     * Then uses `forceApprove` to increase the allowance.\n     * @param token The IERC20 token contract on which the call will be made.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to decrease the allowance by.\n     */\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 allowance = token.allowance(address(this), spender);\n        if (value > allowance) revert SafeDecreaseAllowanceFailed();\n        forceApprove(token, spender, allowance - value);\n    }\n\n    /**\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\n     * @param token The IERC20 token to execute the permit function on.\n     * @param permit The permit data to be used in the function call.\n     */\n    function safePermit(IERC20 token, bytes calldata permit) internal {\n        if (!tryPermit(token, msg.sender, address(this), permit)) RevertReasonForwarder.reRevert();\n    }\n\n    /**\n     * @notice Attempts to execute the `permit` function on the provided token with custom owner and spender parameters. \n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\n     * @param token The IERC20 token to execute the permit function on.\n     * @param owner The owner of the tokens for which the permit is made.\n     * @param spender The spender allowed to spend the tokens by the permit.\n     * @param permit The permit data to be used in the function call.\n     */\n    function safePermit(IERC20 token, address owner, address spender, bytes calldata permit) internal {\n        if (!tryPermit(token, owner, spender, permit)) RevertReasonForwarder.reRevert();\n    }\n\n    /**\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\n     * @dev Invokes `tryPermit` with sender as owner and contract as spender.\n     * @param token The IERC20 token to execute the permit function on.\n     * @param permit The permit data to be used in the function call.\n     * @return success Returns true if the permit function was successfully executed, false otherwise.\n     */\n    function tryPermit(IERC20 token, bytes calldata permit) internal returns(bool success) {\n        return tryPermit(token, msg.sender, address(this), permit);\n    }\n\n    /**\n     * @notice The function attempts to call the permit function on a given ERC20 token.\n     * @dev The function is designed to support a variety of permit functions, namely: IERC20Permit, IDaiLikePermit, and IPermit2.\n     * It accommodates both Compact and Full formats of these permit types.\n     * Please note, it is expected that the `expiration` parameter for the compact Permit2 and the `deadline` parameter \n     * for the compact Permit are to be incremented by one before invoking this function. This approach is motivated by\n     * gas efficiency considerations; as the unlimited expiration period is likely to be the most common scenario, and \n     * zeros are cheaper to pass in terms of gas cost. Thus, callers should increment the expiration or deadline by one\n     * before invocation for optimized performance.\n     * @param token The address of the ERC20 token on which to call the permit function.\n     * @param owner The owner of the tokens. This address should have signed the off-chain permit.\n     * @param spender The address which will be approved for transfer of tokens.\n     * @param permit The off-chain permit data, containing different fields depending on the type of permit function.\n     * @return success A boolean indicating whether the permit call was successful.\n     */\n    function tryPermit(IERC20 token, address owner, address spender, bytes calldata permit) internal returns(bool success) {\n        // load function selectors for different permit standards\n        bytes4 permitSelector = IERC20Permit.permit.selector;\n        bytes4 daiPermitSelector = IDaiLikePermit.permit.selector;\n        bytes4 permit2Selector = IPermit2.permit.selector;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n\n            // Switch case for different permit lengths, indicating different permit standards\n            switch permit.length\n            // Compact IERC20Permit\n            case 100 {\n                mstore(ptr, permitSelector)     // store selector\n                mstore(add(ptr, 0x04), owner)   // store owner\n                mstore(add(ptr, 0x24), spender) // store spender\n\n                // Compact IERC20Permit.permit(uint256 value, uint32 deadline, uint256 r, uint256 vs)\n                {  // stack too deep\n                    let deadline := shr(224, calldataload(add(permit.offset, 0x20))) // loads permit.offset 0x20..0x23\n                    let vs := calldataload(add(permit.offset, 0x44))                 // loads permit.offset 0x44..0x63\n\n                    calldatacopy(add(ptr, 0x44), permit.offset, 0x20)            // store value     = copy permit.offset 0x00..0x19\n                    mstore(add(ptr, 0x64), sub(deadline, 1))                     // store deadline  = deadline - 1\n                    mstore(add(ptr, 0x84), add(27, shr(255, vs)))                // store v         = most significant bit of vs + 27 (27 or 28)\n                    calldatacopy(add(ptr, 0xa4), add(permit.offset, 0x24), 0x20) // store r         = copy permit.offset 0x24..0x43\n                    mstore(add(ptr, 0xc4), shr(1, shl(1, vs)))                   // store s         = vs without most significant bit\n                }\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\n            }\n            // Compact IDaiLikePermit\n            case 72 {\n                mstore(ptr, daiPermitSelector)  // store selector\n                mstore(add(ptr, 0x04), owner)   // store owner\n                mstore(add(ptr, 0x24), spender) // store spender\n\n                // Compact IDaiLikePermit.permit(uint32 nonce, uint32 expiry, uint256 r, uint256 vs)\n                {  // stack too deep\n                    let expiry := shr(224, calldataload(add(permit.offset, 0x04))) // loads permit.offset 0x04..0x07\n                    let vs := calldataload(add(permit.offset, 0x28))               // loads permit.offset 0x28..0x47\n\n                    mstore(add(ptr, 0x44), shr(224, calldataload(permit.offset))) // store nonce   = copy permit.offset 0x00..0x03\n                    mstore(add(ptr, 0x64), sub(expiry, 1))                        // store expiry  = expiry - 1\n                    mstore(add(ptr, 0x84), true)                                  // store allowed = true\n                    mstore(add(ptr, 0xa4), add(27, shr(255, vs)))                 // store v       = most significant bit of vs + 27 (27 or 28)\n                    calldatacopy(add(ptr, 0xc4), add(permit.offset, 0x08), 0x20)  // store r       = copy permit.offset 0x08..0x27\n                    mstore(add(ptr, 0xe4), shr(1, shl(1, vs)))                    // store s       = vs without most significant bit\n                }\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\n            }\n            // IERC20Permit\n            case 224 {\n                mstore(ptr, permitSelector)\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\n            }\n            // IDaiLikePermit\n            case 256 {\n                mstore(ptr, daiPermitSelector)\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\n            }\n            // Compact IPermit2\n            case 96 {\n                // Compact IPermit2.permit(uint160 amount, uint32 expiration, uint32 nonce, uint32 sigDeadline, uint256 r, uint256 vs)\n                mstore(ptr, permit2Selector)  // store selector\n                mstore(add(ptr, 0x04), owner) // store owner\n                mstore(add(ptr, 0x24), token) // store token\n\n                calldatacopy(add(ptr, 0x50), permit.offset, 0x14)             // store amount = copy permit.offset 0x00..0x13\n                // and(0xffffffffffff, ...) - conversion to uint48 \n                mstore(add(ptr, 0x64), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x14))), 1))) // store expiration = ((permit.offset 0x14..0x17 - 1) & 0xffffffffffff)\n                mstore(add(ptr, 0x84), shr(224, calldataload(add(permit.offset, 0x18)))) // store nonce = copy permit.offset 0x18..0x1b\n                mstore(add(ptr, 0xa4), spender)                               // store spender\n                // and(0xffffffffffff, ...) - conversion to uint48\n                mstore(add(ptr, 0xc4), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x1c))), 1))) // store sigDeadline = ((permit.offset 0x1c..0x1f - 1) & 0xffffffffffff)\n                mstore(add(ptr, 0xe4), 0x100)                                 // store offset = 256\n                mstore(add(ptr, 0x104), 0x40)                                 // store length = 64\n                calldatacopy(add(ptr, 0x124), add(permit.offset, 0x20), 0x20) // store r      = copy permit.offset 0x20..0x3f\n                calldatacopy(add(ptr, 0x144), add(permit.offset, 0x40), 0x20) // store vs     = copy permit.offset 0x40..0x5f\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\n            }\n            // IPermit2\n            case 352 {\n                mstore(ptr, permit2Selector)\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\n            }\n            // Unknown\n            default {\n                mstore(ptr, _PERMIT_LENGTH_ERROR)\n                revert(ptr, 4)\n            }\n        }\n    }\n\n    /**\n     * @dev Executes a low level call to a token contract, making it resistant to reversion and erroneous boolean returns.\n     * @param token The IERC20 token contract on which the call will be made.\n     * @param selector The function signature that is to be called on the token contract.\n     * @param to The address to which the token amount will be transferred.\n     * @param amount The token amount to be transferred.\n     * @return success A boolean indicating if the call was successful. Returns 'true' on success and 'false' on failure. \n     * In case of success but no returned data, validates that the contract code exists.\n     * In case of returned data, ensures that it's a boolean `true`.\n     */\n    function _makeCall(\n        IERC20 token,\n        bytes4 selector,\n        address to,\n        uint256 amount\n    ) private returns (bool success) {\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let data := mload(0x40)\n\n            mstore(data, selector)\n            mstore(add(data, 0x04), to)\n            mstore(add(data, 0x24), amount)\n            success := call(gas(), token, 0, data, 0x44, 0x0, 0x20)\n            if success {\n                switch returndatasize()\n                case 0 {\n                    success := gt(extcodesize(token), 0)\n                }\n                default {\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\n                }\n            }\n        }\n    }\n\n    /**\n     * @notice Safely deposits a specified amount of Ether into the IWETH contract. Consumes less gas then regular `IWETH.deposit`.\n     * @param weth The IWETH token contract.\n     * @param amount The amount of Ether to deposit into the IWETH contract.\n     */\n    function safeDeposit(IWETH weth, uint256 amount) internal {\n        if (amount > 0) {\n            bytes4 selector = IWETH.deposit.selector;\n            assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n                mstore(0, selector)\n                if iszero(call(gas(), weth, amount, 0, 4, 0, 0)) {\n                    returndatacopy(0, 0, returndatasize())\n                    revert(0, returndatasize())\n                }\n            }\n        }\n    }\n\n    /**\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract. Consumes less gas then regular `IWETH.withdraw`.\n     * @dev Uses inline assembly to interact with the IWETH contract.\n     * @param weth The IWETH token contract.\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\n     */\n    function safeWithdraw(IWETH weth, uint256 amount) internal {\n        bytes4 selector = IWETH.withdraw.selector;\n        assembly (\"memory-safe\") {  // solhint-disable-line no-inline-assembly\n            mstore(0, selector)\n            mstore(4, amount)\n            if iszero(call(gas(), weth, 0, 0, 0x24, 0, 0)) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract to a specified recipient.\n     * Consumes less gas then regular `IWETH.withdraw`.\n     * @param weth The IWETH token contract.\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\n     * @param to The recipient of the withdrawn Ether.\n     */\n    function safeWithdrawTo(IWETH weth, uint256 amount, address to) internal {\n        safeWithdraw(weth, amount);\n        if (to != address(this)) {\n            assembly (\"memory-safe\") {  // solhint-disable-line no-inline-assembly\n                if iszero(call(_RAW_CALL_GAS_LIMIT, to, amount, 0, 0, 0, 0)) {\n                    let ptr := mload(0x40)\n                    returndatacopy(ptr, 0, returndatasize())\n                    revert(ptr, returndatasize())\n                }\n            }\n        }\n    }\n}\n"},"contracts/libraries/StringUtil.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title Library with gas-efficient string operations\nlibrary StringUtil {\n    function toHex(uint256 value) internal pure returns (string memory) {\n        return toHex(abi.encodePacked(value));\n    }\n\n    function toHex(address value) internal pure returns (string memory) {\n        return toHex(abi.encodePacked(value));\n    }\n\n    /// @dev this is the assembly adaptation of highly optimized toHex16 code from Mikhail Vladimirov\n    /// https://stackoverflow.com/a/69266989\n    function toHex(bytes memory data) internal pure returns (string memory result) {\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            function _toHex16(input) -> output {\n                output := or(\n                    and(input, 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000),\n                    shr(64, and(input, 0x0000000000000000FFFFFFFFFFFFFFFF00000000000000000000000000000000))\n                )\n                output := or(\n                    and(output, 0xFFFFFFFF000000000000000000000000FFFFFFFF000000000000000000000000),\n                    shr(32, and(output, 0x00000000FFFFFFFF000000000000000000000000FFFFFFFF0000000000000000))\n                )\n                output := or(\n                    and(output, 0xFFFF000000000000FFFF000000000000FFFF000000000000FFFF000000000000),\n                    shr(16, and(output, 0x0000FFFF000000000000FFFF000000000000FFFF000000000000FFFF00000000))\n                )\n                output := or(\n                    and(output, 0xFF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000),\n                    shr(8, and(output, 0x00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000))\n                )\n                output := or(\n                    shr(4, and(output, 0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000)),\n                    shr(8, and(output, 0x0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00))\n                )\n                output := add(\n                    add(0x3030303030303030303030303030303030303030303030303030303030303030, output),\n                    mul(\n                        and(\n                            shr(4, add(output, 0x0606060606060606060606060606060606060606060606060606060606060606)),\n                            0x0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F\n                        ),\n                        7 // Change 7 to 39 for lower case output\n                    )\n                )\n            }\n\n            result := mload(0x40)\n            let length := mload(data)\n            let resultLength := shl(1, length)\n            let toPtr := add(result, 0x22) // 32 bytes for length + 2 bytes for '0x'\n            mstore(0x40, add(toPtr, resultLength)) // move free memory pointer\n            mstore(add(result, 2), 0x3078) // 0x3078 is right aligned so we write to `result + 2`\n            // to store the last 2 bytes in the beginning of the string\n            mstore(result, add(resultLength, 2)) // extra 2 bytes for '0x'\n\n            for {\n                let fromPtr := add(data, 0x20)\n                let endPtr := add(fromPtr, length)\n            } lt(fromPtr, endPtr) {\n                fromPtr := add(fromPtr, 0x20)\n            } {\n                let rawData := mload(fromPtr)\n                let hexData := _toHex16(rawData)\n                mstore(toPtr, hexData)\n                toPtr := add(toPtr, 0x20)\n                hexData := _toHex16(shl(128, rawData))\n                mstore(toPtr, hexData)\n                toPtr := add(toPtr, 0x20)\n            }\n        }\n    }\n}\n"},"contracts/libraries/UniERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"../interfaces/IERC20MetadataUppercase.sol\";\nimport \"./SafeERC20.sol\";\nimport \"./StringUtil.sol\";\n\n/// @title Library, which allows usage of ETH as ERC20 and ERC20 itself. Uses SafeERC20 library for ERC20 interface.\nlibrary UniERC20 {\n    using SafeERC20 for IERC20;\n\n    error InsufficientBalance();\n    error ApproveCalledOnETH();\n    error NotEnoughValue();\n    error FromIsNotSender();\n    error ToIsNotThis();\n    error ETHTransferFailed();\n\n    uint256 private constant _RAW_CALL_GAS_LIMIT = 5000;\n    IERC20 private constant _ETH_ADDRESS = IERC20(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\n    IERC20 private constant _ZERO_ADDRESS = IERC20(address(0));\n\n    /// @dev Returns true if `token` is ETH.\n    function isETH(IERC20 token) internal pure returns (bool) {\n        return (token == _ZERO_ADDRESS || token == _ETH_ADDRESS);\n    }\n\n    /// @dev Returns `account` ERC20 `token` balance.\n    function uniBalanceOf(IERC20 token, address account) internal view returns (uint256) {\n        if (isETH(token)) {\n            return account.balance;\n        } else {\n            return token.balanceOf(account);\n        }\n    }\n\n    /// @dev `token` transfer `to` `amount`.\n    /// Note that this function does nothing in case of zero amount.\n    function uniTransfer(\n        IERC20 token,\n        address payable to,\n        uint256 amount\n    ) internal {\n        if (amount > 0) {\n            if (isETH(token)) {\n                if (address(this).balance < amount) revert InsufficientBalance();\n                // solhint-disable-next-line avoid-low-level-calls\n                (bool success, ) = to.call{value: amount, gas: _RAW_CALL_GAS_LIMIT}(\"\");\n                if (!success) revert ETHTransferFailed();\n            } else {\n                token.safeTransfer(to, amount);\n            }\n        }\n    }\n\n    /// @dev `token` transfer `from` `to` `amount`.\n    /// Note that this function does nothing in case of zero amount.\n    function uniTransferFrom(\n        IERC20 token,\n        address payable from,\n        address to,\n        uint256 amount\n    ) internal {\n        if (amount > 0) {\n            if (isETH(token)) {\n                if (msg.value < amount) revert NotEnoughValue();\n                if (from != msg.sender) revert FromIsNotSender();\n                if (to != address(this)) revert ToIsNotThis();\n                if (msg.value > amount) {\n                    // Return remainder if exist\n                    unchecked {\n                        // solhint-disable-next-line avoid-low-level-calls\n                        (bool success, ) = from.call{value: msg.value - amount, gas: _RAW_CALL_GAS_LIMIT}(\"\");\n                        if (!success) revert ETHTransferFailed();\n                    }\n                }\n            } else {\n                token.safeTransferFrom(from, to, amount);\n            }\n        }\n    }\n\n    /// @dev Returns `token` symbol from ERC20 metadata.\n    function uniSymbol(IERC20 token) internal view returns (string memory) {\n        return _uniDecode(token, IERC20Metadata.symbol.selector, IERC20MetadataUppercase.SYMBOL.selector);\n    }\n\n    /// @dev Returns `token` name from ERC20 metadata.\n    function uniName(IERC20 token) internal view returns (string memory) {\n        return _uniDecode(token, IERC20Metadata.name.selector, IERC20MetadataUppercase.NAME.selector);\n    }\n\n    /// @dev Reverts if `token` is ETH, otherwise performs ERC20 forceApprove.\n    function uniApprove(\n        IERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        if (isETH(token)) revert ApproveCalledOnETH();\n\n        token.forceApprove(to, amount);\n    }\n\n    /// @dev 20K gas is provided to account for possible implementations of name/symbol\n    /// (token implementation might be behind proxy or store the value in storage)\n    function _uniDecode(\n        IERC20 token,\n        bytes4 lowerCaseSelector,\n        bytes4 upperCaseSelector\n    ) private view returns (string memory result) {\n        if (isETH(token)) {\n            return \"ETH\";\n        }\n\n        (bool success, bytes memory data) = address(token).staticcall{gas: 20000}(\n            abi.encodeWithSelector(lowerCaseSelector)\n        );\n        if (!success) {\n            (success, data) = address(token).staticcall{gas: 20000}(abi.encodeWithSelector(upperCaseSelector));\n        }\n\n        if (success && data.length >= 0x40) {\n            (uint256 offset, uint256 len) = abi.decode(data, (uint256, uint256));\n            /*\n                return data is padded up to 32 bytes with ABI encoder also sometimes\n                there is extra 32 bytes of zeros padded in the end:\n                https://github.com/ethereum/solidity/issues/10170\n                because of that we can't check for equality and instead check\n                that overall data length is greater or equal than string length + extra 64 bytes\n            */\n            if (offset == 0x20 && data.length >= 0x40 + len) {\n                assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n                    result := add(data, 0x40)\n                }\n                return result;\n            }\n        }\n        if (success && data.length == 32) {\n            uint256 len = 0;\n            while (len < data.length && data[len] >= 0x20 && data[len] <= 0x7E) {\n                unchecked {\n                    len++;\n                }\n            }\n\n            if (len > 0) {\n                assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n                    mstore(data, len)\n                }\n                return string(data);\n            }\n        }\n\n        return StringUtil.toHex(address(token));\n    }\n}\n"},"contracts/MerkleTree.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface IHasher {\n    function MiMCSponge(\n        uint256 in_xL,\n        uint256 in_xR\n    ) external pure returns (uint256 xL, uint256 xR);\n}\n\ncontract MerkleTree {\n    uint256 public constant FIELD_SIZE =\n        21888242871839275222246405745257275088548364400416034343698204186575808495617;\n    uint256 public constant ZERO_VALUE =\n        21663839004416932945382355908790599225266501822907911457504978515578255421292; // = keccak256(\"tornado\") % FIELD_SIZE\n    IHasher public immutable hasher;\n\n    uint32 public levels;\n\n    // the following variables are made public for easier testing and debugging and\n    // are not supposed to be accessed in regular code\n\n    // filledSubtrees and roots could be bytes32[size], but using mappings makes it cheaper because\n    // it removes index range check on every interaction\n    mapping(uint256 => bytes32) public filledSubtrees;\n    bytes32 public root;\n    uint32 public nextIndex = 0;\n\n    constructor(uint32 _levels, IHasher _hasher) {\n        require(_levels > 0, \"_levels should be greater than zero\");\n        require(_levels < 32, \"_levels should be less than 32\");\n        levels = _levels;\n        hasher = _hasher;\n\n        for (uint32 i = 0; i < _levels; i++) {\n            filledSubtrees[i] = zeros(i);\n        }\n\n        root = zeros(_levels - 1);\n    }\n\n    /**\n    @dev Hash 2 tree leaves, returns MiMC(_left, _right)\n  */\n    function hashLeftRight(\n        IHasher _hasher,\n        bytes32 _left,\n        bytes32 _right\n    ) public pure returns (bytes32) {\n        require(\n            uint256(_left) < FIELD_SIZE,\n            \"_left should be inside the field\"\n        );\n        require(\n            uint256(_right) < FIELD_SIZE,\n            \"_right should be inside the field\"\n        );\n        uint256 R = uint256(_left);\n        uint256 C = 0;\n        (R, C) = _hasher.MiMCSponge(R, C);\n        R = addmod(R, uint256(_right), FIELD_SIZE);\n        (R, C) = _hasher.MiMCSponge(R, C);\n        return bytes32(R);\n    }\n\n    function _insert(bytes32 _leaf) internal returns (uint32 index) {\n        uint32 _nextIndex = nextIndex;\n        require(\n            _nextIndex != uint32(2) ** levels,\n            \"Merkle tree is full. No more leaves can be added\"\n        );\n        uint32 currentIndex = _nextIndex;\n        bytes32 currentLevelHash = _leaf;\n        bytes32 left;\n        bytes32 right;\n\n        for (uint32 i = 0; i < levels; i++) {\n            if (currentIndex % 2 == 0) {\n                left = currentLevelHash;\n                right = zeros(i);\n                filledSubtrees[i] = currentLevelHash;\n            } else {\n                left = filledSubtrees[i];\n                right = currentLevelHash;\n            }\n            currentLevelHash = hashLeftRight(hasher, left, right);\n            currentIndex /= 2;\n        }\n\n        nextIndex = _nextIndex + 1;\n        return _nextIndex;\n    }\n\n    /// @dev provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\n    function zeros(uint256 i) public pure returns (bytes32) {\n        if (i == 0)\n            return\n                bytes32(\n                    0x2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c\n                );\n        else if (i == 1)\n            return\n                bytes32(\n                    0x256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d\n                );\n        else if (i == 2)\n            return\n                bytes32(\n                    0x1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200\n                );\n        else if (i == 3)\n            return\n                bytes32(\n                    0x20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb\n                );\n        else if (i == 4)\n            return\n                bytes32(\n                    0x0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9\n                );\n        else if (i == 5)\n            return\n                bytes32(\n                    0x24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959\n                );\n        else if (i == 6)\n            return\n                bytes32(\n                    0x1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c\n                );\n        else if (i == 7)\n            return\n                bytes32(\n                    0x19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4\n                );\n        else if (i == 8)\n            return\n                bytes32(\n                    0x261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80\n                );\n        else if (i == 9)\n            return\n                bytes32(\n                    0x0058459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007\n                );\n        else if (i == 10)\n            return\n                bytes32(\n                    0x1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30\n                );\n        else if (i == 11)\n            return\n                bytes32(\n                    0x1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5\n                );\n        else if (i == 12)\n            return\n                bytes32(\n                    0x0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f\n                );\n        else if (i == 13)\n            return\n                bytes32(\n                    0x1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd\n                );\n        else if (i == 14)\n            return\n                bytes32(\n                    0x133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108\n                );\n        else if (i == 15)\n            return\n                bytes32(\n                    0x13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6\n                );\n        else if (i == 16)\n            return\n                bytes32(\n                    0x1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854\n                );\n        else if (i == 17)\n            return\n                bytes32(\n                    0x0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea\n                );\n        else if (i == 18)\n            return\n                bytes32(\n                    0x24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d\n                );\n        else if (i == 19)\n            return\n                bytes32(\n                    0x198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05\n                );\n        else if (i == 20)\n            return\n                bytes32(\n                    0x29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4\n                );\n        else if (i == 21)\n            return\n                bytes32(\n                    0x19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967\n                );\n        else if (i == 22)\n            return\n                bytes32(\n                    0x1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453\n                );\n        else if (i == 23)\n            return\n                bytes32(\n                    0x10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48\n                );\n        else if (i == 24)\n            return\n                bytes32(\n                    0x0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1\n                );\n        else if (i == 25)\n            return\n                bytes32(\n                    0x019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c\n                );\n        else if (i == 26)\n            return\n                bytes32(\n                    0x2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99\n                );\n        else if (i == 27)\n            return\n                bytes32(\n                    0x2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354\n                );\n        else if (i == 28)\n            return\n                bytes32(\n                    0x002df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d\n                );\n        else if (i == 29)\n            return\n                bytes32(\n                    0x104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427\n                );\n        else if (i == 30)\n            return\n                bytes32(\n                    0x1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb\n                );\n        else if (i == 31)\n            return\n                bytes32(\n                    0x2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc\n                );\n        else revert(\"Index out of bounds\");\n    }\n}\n"},"contracts/Relayer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport {MerkleTree, IHasher} from \"./MerkleTree.sol\";\nimport {ERC20} from \"solmate/tokens/ERC20.sol\";\nimport {Vault} from \"./Vault.sol\";\nimport {IDepositVerifier, IWithdrawVerifier, ISwapVerifier, IFinalizeVerifier} from \"./IVerifier.sol\";\n\nstruct ModelOutput {\n    uint8 direction;\n    uint248 amount;\n}\n\nstruct ModelInput {\n    uint256 chainlinkPrice;\n}\n\nenum NodeStatus {\n    EMPTY,\n    TRANSACTED,\n    NULLIFIED\n}\n\nstruct TxResult {\n    uint8 direction;\n    uint120 amountA;\n    uint120 amountB;\n}\n\ncontract Relayer is MerkleTree {\n    \n    ERC20 immutable public TOKEN_A;\n    ERC20 immutable public TOKEN_B;\n    IDepositVerifier public depositVerifier;\n    IWithdrawVerifier public withdrawVerifier;\n    ISwapVerifier public swapVerifier;\n    IFinalizeVerifier public finalizeVerifier;\n    ModelInput public modelInput;\n    mapping(bytes32 => NodeStatus) public nodeStatusPool;\n    mapping(bytes32 => TxResult) public transactionResults;\n\n    constructor(\n        ERC20 _tokenA,\n        ERC20 _tokenB,\n        IDepositVerifier _depositVerifier,\n        IWithdrawVerifier _withdrawVerifier,\n        ISwapVerifier _swapVerifier,\n        IFinalizeVerifier _finalizeVerifier,\n        IHasher _hasher\n    ) MerkleTree(32, _hasher) {\n        TOKEN_A = _tokenA;\n        TOKEN_B = _tokenB;\n        depositVerifier = _depositVerifier;\n        withdrawVerifier = _withdrawVerifier;\n        swapVerifier = _swapVerifier;\n        finalizeVerifier = _finalizeVerifier;\n    }\n\n    function deposit(\n        bytes32 _cNode,\n        uint256 _balanceA,\n        uint256 _balanceB,\n        address _vault,\n        bytes calldata _proof\n    ) public returns (uint32) {\n        uint256[5] memory _publicInputs;\n        _publicInputs[0] = uint256(_cNode);\n        _publicInputs[1] = uint256(Vault(_vault).cModel());\n        _publicInputs[2] = uint256(_balanceA);\n        _publicInputs[3] = uint256(_balanceB);\n        _publicInputs[4] = uint256(uint160(_vault));\n        require(\n            msg.sender == _vault,\n            \"Deposit not trader\"\n        );\n        require(\n            depositVerifier.verify(_publicInputs, _proof),\n            \"Deposit Verifier failed\"\n        );\n\n        TOKEN_A.transferFrom(_vault, address(this), _balanceA);\n        TOKEN_B.transferFrom(_vault, address(this), _balanceB);\n\n        return MerkleTree._insert(_cNode);\n    }\n\n    function withdraw(\n        bytes32 _nullifier,\n        uint256 _balanceA,\n        uint256 _balanceB,\n        address _vault,\n        bytes calldata _proof\n    ) public {\n        uint256[5] memory _publicInputs;\n        _publicInputs[0] = uint256(root);\n        _publicInputs[1] = uint256(_nullifier);\n        _publicInputs[2] = uint256(_balanceA);\n        _publicInputs[3] = uint256(_balanceB);\n        _publicInputs[4] = uint256(uint160(_vault));\n        require(\n            msg.sender == _vault,\n            \"Withdraw not trader\"\n        );\n        require(\n            withdrawVerifier.verify(_publicInputs, _proof),\n            \"Withdraw Verifier failed\"\n        );\n\n        TOKEN_A.transferFrom(address(this), _vault, _balanceA);\n        TOKEN_B.transferFrom(address(this), _vault, _balanceB);\n\n        nodeStatusPool[_nullifier] = NodeStatus.NULLIFIED;\n    }\n\n    function transact(\n        bytes32 _nullifier,\n        ModelOutput calldata modelOutput,\n        bytes calldata _proof\n    ) public {\n        uint256[4] memory _publicInputs;\n        _publicInputs[0] = uint256(MerkleTree.root);\n        _publicInputs[1] = uint256(_nullifier);\n        _publicInputs[2] = modelInput.chainlinkPrice;\n        _publicInputs[3] = uint256(bytes32(abi.encodePacked(modelOutput.direction, modelOutput.amount)));\n        require(\n            swapVerifier.verify(_publicInputs, _proof),\n            \"Swap Verifier failed\"\n        );\n\n        transactionResults[_nullifier] = _transact(modelOutput);\n        nodeStatusPool[_nullifier] = NodeStatus.TRANSACTED;\n    }\n\n    function finalize(\n        bytes32 _nullifier,\n        bytes32 _cNode2,\n        bytes calldata _proof\n    ) public {\n        uint256[3] memory _publicInputs;\n        _publicInputs[0] = uint256(MerkleTree.root);\n        _publicInputs[1] = uint256(_nullifier);\n        _publicInputs[2] = uint256(_cNode2);\n        require(\n            finalizeVerifier.verify(_publicInputs, _proof),\n            \"finalize: verify failed\"\n        );\n        \n        MerkleTree._insert(_cNode2);\n        delete transactionResults[_nullifier];\n        nodeStatusPool[_nullifier] = NodeStatus.NULLIFIED;\n    }\n\n    function _transact(ModelOutput calldata _modelOutput) private pure returns (TxResult memory) {\n        // TODO swap with 1inch aggregator\n        return TxResult(0, 0, 0);\n    }\n}\n"},"contracts/Vault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\nimport {ERC20} from \"solmate/tokens/ERC20.sol\";\nimport {Owned} from \"solmate/auth/Owned.sol\";\n\ninterface IRelayer {\n    function deposit(\n        bytes32 _cNode,\n        bytes32 _cModel,\n        uint256 _balanceA,\n        uint256 _balanceB,\n        bytes calldata _proof\n    ) external returns (uint32);\n\n    function withdraw(\n        bytes32 _nullifier,\n        uint256 _balanceA,\n        uint256 _balanceB,\n        address _vault,\n        bytes calldata _proof\n    ) external;\n\n    function TOKEN_A() external returns (ERC20);\n    function TOKEN_B() external returns (ERC20);\n}\n\nenum VaultState {\n    DEPOSIT,\n    WAITING,\n    WITHDRAW\n}\n\ncontract Vault is Owned {\n    \n    IRelayer immutable public relayer;\n    bytes32 public cModel;\n    mapping(address => uint256) public userWeights;\n    uint256 public totalWeights;\n    uint256 public afterBalance;\n    VaultState public state;\n\n    constructor(\n        IRelayer _relayer,\n        address _trader,\n        bytes32 _cModel\n    ) Owned(_trader) {\n        relayer = _relayer;\n        cModel = _cModel;\n        relayer.TOKEN_A().approve(address(relayer), type(uint256).max);\n        relayer.TOKEN_B().approve(address(relayer), type(uint256).max);\n    }\n\n    modifier requireState(VaultState _state) {\n        require(state == _state, \"Invalid Vault state\");\n        _;\n    }\n\n    function userDeposit(uint256 amount) public requireState(VaultState.DEPOSIT) {\n        relayer.TOKEN_A().transferFrom(msg.sender, address(this), amount);\n        userWeights[msg.sender] += amount;\n        totalWeights += amount;\n    }\n\n    function depositToRelayer(\n        bytes32 _cNode,\n        bytes calldata _proof\n    ) public requireState(VaultState.DEPOSIT) onlyOwner {\n        // TODO swap A to B and make 50 50\n        uint256 balanceA = relayer.TOKEN_A().balanceOf(address(this));\n        uint256 balanceB = relayer.TOKEN_B().balanceOf(address(this));\n        relayer.deposit(_cNode, cModel, balanceA, balanceB, _proof);\n        state = VaultState.WAITING;\n    }\n\n    function withdrawFromRelayer(\n        bytes32 _nullifier,\n        uint256 _balanceA,\n        uint256 _balanceB,\n        bytes calldata _proof\n    ) public requireState(VaultState.WAITING) onlyOwner {\n        relayer.withdraw(_nullifier, _balanceA, _balanceB, address(this), _proof);\n        // TODO swap B to A\n        afterBalance = relayer.TOKEN_A().balanceOf(address(this));\n        state = VaultState.WITHDRAW;\n    }\n\n    function userWithdraw(address to) public requireState(VaultState.WITHDRAW) {       \n        uint256 amount = afterBalance * userWeights[to] / totalWeights;\n        relayer.TOKEN_A().transferFrom(address(this), to, amount);\n    }\n}"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n// EIP-2612 is Final as of 2022-11-01. This file is deprecated.\n\nimport \"./IERC20Permit.sol\";\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"lib/solmate/src/auth/Owned.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Simple single owner authorization mixin.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)\nabstract contract Owned {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\n\n    /*//////////////////////////////////////////////////////////////\n                            OWNERSHIP STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    address public owner;\n\n    modifier onlyOwner() virtual {\n        require(msg.sender == owner, \"UNAUTHORIZED\");\n\n        _;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(address _owner) {\n        owner = _owner;\n\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             OWNERSHIP LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        owner = newOwner;\n\n        emit OwnershipTransferred(msg.sender, newOwner);\n    }\n}\n"},"lib/solmate/src/tokens/ERC20.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\nabstract contract ERC20 {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                            METADATA STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public immutable decimals;\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC20 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /*//////////////////////////////////////////////////////////////\n                            EIP-2612 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal immutable INITIAL_CHAIN_ID;\n\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\n\n    mapping(address => uint256) public nonces;\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n\n        INITIAL_CHAIN_ID = block.chainid;\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                               ERC20 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        allowance[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n\n        return true;\n    }\n\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        balanceOf[msg.sender] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(msg.sender, to, amount);\n\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\n\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\n\n        balanceOf[from] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        return true;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             EIP-2612 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\");\n\n        // Unchecked because the only math done is incrementing\n        // the owner's nonce which cannot realistically overflow.\n        unchecked {\n            address recoveredAddress = ecrecover(\n                keccak256(\n                    abi.encodePacked(\n                        \"\\x19\\x01\",\n                        DOMAIN_SEPARATOR(),\n                        keccak256(\n                            abi.encode(\n                                keccak256(\n                                    \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n                                ),\n                                owner,\n                                spender,\n                                value,\n                                nonces[owner]++,\n                                deadline\n                            )\n                        )\n                    )\n                ),\n                v,\n                r,\n                s\n            );\n\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\");\n\n            allowance[recoveredAddress][spender] = value;\n        }\n\n        emit Approval(owner, spender, value);\n    }\n\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\n    }\n\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                    keccak256(bytes(name)),\n                    keccak256(\"1\"),\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(address to, uint256 amount) internal virtual {\n        totalSupply += amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(address(0), to, amount);\n    }\n\n    function _burn(address from, uint256 amount) internal virtual {\n        balanceOf[from] -= amount;\n\n        // Cannot underflow because a user's balance\n        // will never be larger than the total supply.\n        unchecked {\n            totalSupply -= amount;\n        }\n\n        emit Transfer(from, address(0), amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true},"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solmate/=lib/solmate/src/","weird-erc20/=lib/weird-erc20/src/"]}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Relayer.sol:153:24:\n    |\n153 |     function _transact(ModelOutput calldata _modelOutput) private pure returns (TxResult memory) {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4616,"file":"contracts/Relayer.sol","start":4583},"type":"Warning"}],"sources":{"contracts/IVerifier.sol":{"ast":{"absolutePath":"contracts/IVerifier.sol","exportedSymbols":{"IDepositVerifier":[13],"IFinalizeVerifier":[49],"ISwapVerifier":[37],"IWithdrawVerifier":[25]},"id":50,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IDepositVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":13,"linearizedBaseContracts":[13],"name":"IDepositVerifier","nameLocation":"68:16:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"839ded65","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"verify","nameLocation":"100:6:0","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"_publicInputs","nameLocation":"136:13:0","nodeType":"VariableDeclaration","scope":12,"src":"116:33:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_calldata_ptr","typeString":"uint256[5]"},"typeName":{"baseType":{"id":2,"name":"uint256","nodeType":"ElementaryTypeName","src":"116:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4,"length":{"hexValue":"35","id":3,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"124:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"116:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_storage_ptr","typeString":"uint256[5]"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"_proof","nameLocation":"174:6:0","nodeType":"VariableDeclaration","scope":12,"src":"159:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6,"name":"bytes","nodeType":"ElementaryTypeName","src":"159:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"106:80:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12,"src":"210:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9,"name":"bool","nodeType":"ElementaryTypeName","src":"210:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"209:6:0"},"scope":13,"src":"91:125:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":50,"src":"58:160:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IWithdrawVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":25,"linearizedBaseContracts":[25],"name":"IWithdrawVerifier","nameLocation":"230:17:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"839ded65","id":24,"implemented":false,"kind":"function","modifiers":[],"name":"verify","nameLocation":"263:6:0","nodeType":"FunctionDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"mutability":"mutable","name":"_publicInputs","nameLocation":"299:13:0","nodeType":"VariableDeclaration","scope":24,"src":"279:33:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_calldata_ptr","typeString":"uint256[5]"},"typeName":{"baseType":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"279:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"length":{"hexValue":"35","id":15,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"287:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"279:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_storage_ptr","typeString":"uint256[5]"}},"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"_proof","nameLocation":"337:6:0","nodeType":"VariableDeclaration","scope":24,"src":"322:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18,"name":"bytes","nodeType":"ElementaryTypeName","src":"322:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"269:80:0"},"returnParameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24,"src":"373:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":21,"name":"bool","nodeType":"ElementaryTypeName","src":"373:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"372:6:0"},"scope":25,"src":"254:125:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":50,"src":"220:161:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"ISwapVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":37,"linearizedBaseContracts":[37],"name":"ISwapVerifier","nameLocation":"393:13:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"404568b5","id":36,"implemented":false,"kind":"function","modifiers":[],"name":"verify","nameLocation":"422:6:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"_publicInputs","nameLocation":"458:13:0","nodeType":"VariableDeclaration","scope":36,"src":"438:33:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_calldata_ptr","typeString":"uint256[4]"},"typeName":{"baseType":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":28,"length":{"hexValue":"34","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"446:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"438:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_storage_ptr","typeString":"uint256[4]"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"_proof","nameLocation":"496:6:0","nodeType":"VariableDeclaration","scope":36,"src":"481:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":30,"name":"bytes","nodeType":"ElementaryTypeName","src":"481:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"428:80:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":36,"src":"532:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33,"name":"bool","nodeType":"ElementaryTypeName","src":"532:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"531:6:0"},"scope":37,"src":"413:125:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":50,"src":"383:157:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IFinalizeVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":49,"linearizedBaseContracts":[49],"name":"IFinalizeVerifier","nameLocation":"552:17:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"7509e379","id":48,"implemented":false,"kind":"function","modifiers":[],"name":"verify","nameLocation":"585:6:0","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"_publicInputs","nameLocation":"621:13:0","nodeType":"VariableDeclaration","scope":48,"src":"601:33:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_calldata_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40,"length":{"hexValue":"33","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"609:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"601:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"},{"constant":false,"id":43,"mutability":"mutable","name":"_proof","nameLocation":"659:6:0","nodeType":"VariableDeclaration","scope":48,"src":"644:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":42,"name":"bytes","nodeType":"ElementaryTypeName","src":"644:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"591:80:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48,"src":"695:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45,"name":"bool","nodeType":"ElementaryTypeName","src":"695:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"694:6:0"},"scope":49,"src":"576:125:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":50,"src":"542:161:0","usedErrors":[]}],"src":"32:672:0"},"id":0},"contracts/MerkleTree.sol":{"ast":{"absolutePath":"contracts/MerkleTree.sol","exportedSymbols":{"IHasher":[63],"MerkleTree":[629]},"id":630,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":51,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IHasher","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":63,"linearizedBaseContracts":[63],"name":"IHasher","nameLocation":"68:7:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f47d33b5","id":62,"implemented":false,"kind":"function","modifiers":[],"name":"MiMCSponge","nameLocation":"91:10:1","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"in_xL","nameLocation":"119:5:1","nodeType":"VariableDeclaration","scope":62,"src":"111:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"111:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":55,"mutability":"mutable","name":"in_xR","nameLocation":"142:5:1","nodeType":"VariableDeclaration","scope":62,"src":"134:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"134:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101:52:1"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"xL","nameLocation":"185:2:1","nodeType":"VariableDeclaration","scope":62,"src":"177:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"177:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"xR","nameLocation":"197:2:1","nodeType":"VariableDeclaration","scope":62,"src":"189:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"189:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"176:24:1"},"scope":63,"src":"82:119:1","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":630,"src":"58:145:1","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleTree","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":629,"linearizedBaseContracts":[629],"name":"MerkleTree","nameLocation":"214:10:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"414a37ba","id":66,"mutability":"constant","name":"FIELD_SIZE","nameLocation":"255:10:1","nodeType":"VariableDeclaration","scope":629,"src":"231:122:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"231:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3231383838323432383731383339323735323232323436343035373435323537323735303838353438333634343030343136303334333433363938323034313836353735383038343935363137","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"276:77:1","typeDescriptions":{"typeIdentifier":"t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495617_by_1","typeString":"int_const 2188...(69 digits omitted)...5617"},"value":"21888242871839275222246405745257275088548364400416034343698204186575808495617"},"visibility":"public"},{"constant":true,"functionSelector":"ec732959","id":69,"mutability":"constant","name":"ZERO_VALUE","nameLocation":"383:10:1","nodeType":"VariableDeclaration","scope":629,"src":"359:122:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":67,"name":"uint256","nodeType":"ElementaryTypeName","src":"359:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3231363633383339303034343136393332393435333832333535393038373930353939323235323636353031383232393037393131343537353034393738353135353738323535343231323932","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"404:77:1","typeDescriptions":{"typeIdentifier":"t_rational_21663839004416932945382355908790599225266501822907911457504978515578255421292_by_1","typeString":"int_const 2166...(69 digits omitted)...1292"},"value":"21663839004416932945382355908790599225266501822907911457504978515578255421292"},"visibility":"public"},{"constant":false,"functionSelector":"ed33639f","id":72,"mutability":"immutable","name":"hasher","nameLocation":"551:6:1","nodeType":"VariableDeclaration","scope":629,"src":"526:31:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"},"typeName":{"id":71,"nodeType":"UserDefinedTypeName","pathNode":{"id":70,"name":"IHasher","nameLocations":["526:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":63,"src":"526:7:1"},"referencedDeclaration":63,"src":"526:7:1","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"}},"visibility":"public"},{"constant":false,"functionSelector":"4ecf518b","id":74,"mutability":"mutable","name":"levels","nameLocation":"578:6:1","nodeType":"VariableDeclaration","scope":629,"src":"564:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":73,"name":"uint32","nodeType":"ElementaryTypeName","src":"564:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"functionSelector":"f178e47c","id":78,"mutability":"mutable","name":"filledSubtrees","nameLocation":"923:14:1","nodeType":"VariableDeclaration","scope":629,"src":"888:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":77,"keyType":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueType":{"id":76,"name":"bytes32","nodeType":"ElementaryTypeName","src":"907:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"constant":false,"functionSelector":"ebf0c717","id":80,"mutability":"mutable","name":"root","nameLocation":"958:4:1","nodeType":"VariableDeclaration","scope":629,"src":"943:19:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":79,"name":"bytes32","nodeType":"ElementaryTypeName","src":"943:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"fc7e9c6f","id":83,"mutability":"mutable","name":"nextIndex","nameLocation":"982:9:1","nodeType":"VariableDeclaration","scope":629,"src":"968:27:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":81,"name":"uint32","nodeType":"ElementaryTypeName","src":"968:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"30","id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"994:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"body":{"id":141,"nodeType":"Block","src":"1047:329:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":92,"name":"_levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"1065:7:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1075:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1065:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5f6c6576656c732073686f756c642062652067726561746572207468616e207a65726f","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1078:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d","typeString":"literal_string \"_levels should be greater than zero\""},"value":"_levels should be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d","typeString":"literal_string \"_levels should be greater than zero\""}],"id":91,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1057:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1057:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":97,"nodeType":"ExpressionStatement","src":"1057:59:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":99,"name":"_levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"1134:7:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1144:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1134:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5f6c6576656c732073686f756c64206265206c657373207468616e203332","id":102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1148:32:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254","typeString":"literal_string \"_levels should be less than 32\""},"value":"_levels should be less than 32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254","typeString":"literal_string \"_levels should be less than 32\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1126:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1126:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":104,"nodeType":"ExpressionStatement","src":"1126:55:1"},{"expression":{"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":105,"name":"levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"1191:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":106,"name":"_levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"1200:7:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1191:16:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":108,"nodeType":"ExpressionStatement","src":"1191:16:1"},{"expression":{"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":109,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"1217:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":110,"name":"_hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1226:7:1","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"}},"src":"1217:16:1","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"}},"id":112,"nodeType":"ExpressionStatement","src":"1217:16:1"},{"body":{"id":131,"nodeType":"Block","src":"1281:53:1","statements":[{"expression":{"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":123,"name":"filledSubtrees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"1295:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":125,"indexExpression":{"id":124,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"1310:1:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1295:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":127,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"1321:1:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":126,"name":"zeros","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"1315:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) pure returns (bytes32)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1315:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1295:28:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":130,"nodeType":"ExpressionStatement","src":"1295:28:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":117,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"1263:1:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":118,"name":"_levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"1267:7:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1263:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":132,"initializationExpression":{"assignments":[114],"declarations":[{"constant":false,"id":114,"mutability":"mutable","name":"i","nameLocation":"1256:1:1","nodeType":"VariableDeclaration","scope":132,"src":"1249:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":113,"name":"uint32","nodeType":"ElementaryTypeName","src":"1249:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":116,"initialValue":{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1260:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1249:12:1"},"loopExpression":{"expression":{"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1276:3:1","subExpression":{"id":120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"1276:1:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":122,"nodeType":"ExpressionStatement","src":"1276:3:1"},"nodeType":"ForStatement","src":"1244:90:1"},{"expression":{"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":133,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1344:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":135,"name":"_levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"1357:7:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1367:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1357:11:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":134,"name":"zeros","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"1351:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) pure returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1351:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1344:25:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":140,"nodeType":"ExpressionStatement","src":"1344:25:1"}]},"id":142,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"_levels","nameLocation":"1021:7:1","nodeType":"VariableDeclaration","scope":142,"src":"1014:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":84,"name":"uint32","nodeType":"ElementaryTypeName","src":"1014:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"_hasher","nameLocation":"1038:7:1","nodeType":"VariableDeclaration","scope":142,"src":"1030:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"},"typeName":{"id":87,"nodeType":"UserDefinedTypeName","pathNode":{"id":86,"name":"IHasher","nameLocations":["1030:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":63,"src":"1030:7:1"},"referencedDeclaration":63,"src":"1030:7:1","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"}},"visibility":"internal"}],"src":"1013:33:1"},"returnParameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"1047:0:1"},"scope":629,"src":"1002:374:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"1583:465:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":158,"name":"_left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1622:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1614:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:1","typeDescriptions":{}}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1614:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":160,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"1631:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1614:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5f6c6566742073686f756c6420626520696e7369646520746865206669656c64","id":162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1655:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e","typeString":"literal_string \"_left should be inside the field\""},"value":"_left should be inside the field"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e","typeString":"literal_string \"_left should be inside the field\""}],"id":155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1593:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1593:106:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"1593:106:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":168,"name":"_right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"1738:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1730:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:1","typeDescriptions":{}}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1730:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":170,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"1748:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1730:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5f72696768742073686f756c6420626520696e7369646520746865206669656c64","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1772:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e","typeString":"literal_string \"_right should be inside the field\""},"value":"_right should be inside the field"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e","typeString":"literal_string \"_right should be inside the field\""}],"id":165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1709:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1709:108:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":174,"nodeType":"ExpressionStatement","src":"1709:108:1"},{"assignments":[176],"declarations":[{"constant":false,"id":176,"mutability":"mutable","name":"R","nameLocation":"1835:1:1","nodeType":"VariableDeclaration","scope":222,"src":"1827:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":181,"initialValue":{"arguments":[{"id":179,"name":"_left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1847:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{}}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1839:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1827:26:1"},{"assignments":[183],"declarations":[{"constant":false,"id":183,"mutability":"mutable","name":"C","nameLocation":"1871:1:1","nodeType":"VariableDeclaration","scope":222,"src":"1863:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":185,"initialValue":{"hexValue":"30","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1875:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1863:13:1"},{"expression":{"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":186,"name":"R","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1887:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":187,"name":"C","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"1890:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":188,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1886:6:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":191,"name":"R","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1914:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":192,"name":"C","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"1917:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":189,"name":"_hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1895:7:1","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1903:10:1","memberName":"MiMCSponge","nodeType":"MemberAccess","referencedDeclaration":62,"src":"1895:18:1","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure external returns (uint256,uint256)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"1886:33:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"1886:33:1"},{"expression":{"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":196,"name":"R","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1929:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":198,"name":"R","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1940:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":201,"name":"_right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"1951:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1943:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1943:7:1","typeDescriptions":{}}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":203,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"1960:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":197,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"1933:6:1","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1929:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":206,"nodeType":"ExpressionStatement","src":"1929:42:1"},{"expression":{"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":207,"name":"R","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1982:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":208,"name":"C","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"1985:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":209,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1981:6:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":212,"name":"R","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2009:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":213,"name":"C","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2012:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":210,"name":"_hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1990:7:1","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1998:10:1","memberName":"MiMCSponge","nodeType":"MemberAccess","referencedDeclaration":62,"src":"1990:18:1","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure external returns (uint256,uint256)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1990:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"1981:33:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"1981:33:1"},{"expression":{"arguments":[{"id":219,"name":"R","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2039:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2031:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2031:7:1","typeDescriptions":{}}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2031:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":154,"id":221,"nodeType":"Return","src":"2024:17:1"}]},"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"1382:65:1","text":"@dev Hash 2 tree leaves, returns MiMC(_left, _right)"},"functionSelector":"8ea3099e","id":223,"implemented":true,"kind":"function","modifiers":[],"name":"hashLeftRight","nameLocation":"1461:13:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"_hasher","nameLocation":"1492:7:1","nodeType":"VariableDeclaration","scope":223,"src":"1484:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"},"typeName":{"id":145,"nodeType":"UserDefinedTypeName","pathNode":{"id":144,"name":"IHasher","nameLocations":["1484:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":63,"src":"1484:7:1"},"referencedDeclaration":63,"src":"1484:7:1","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"_left","nameLocation":"1517:5:1","nodeType":"VariableDeclaration","scope":223,"src":"1509:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1509:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"_right","nameLocation":"1540:6:1","nodeType":"VariableDeclaration","scope":223,"src":"1532:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1532:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1474:78:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":223,"src":"1574:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1574:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1573:9:1"},"scope":629,"src":"1452:596:1","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":326,"nodeType":"Block","src":"2118:821:1","statements":[{"assignments":[231],"declarations":[{"constant":false,"id":231,"mutability":"mutable","name":"_nextIndex","nameLocation":"2135:10:1","nodeType":"VariableDeclaration","scope":326,"src":"2128:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":230,"name":"uint32","nodeType":"ElementaryTypeName","src":"2128:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"name":"nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2148:9:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"2128:29:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":235,"name":"_nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2188:10:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"32","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2209:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2202:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":236,"name":"uint32","nodeType":"ElementaryTypeName","src":"2202:6:1","typeDescriptions":{}}},"id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2202:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":240,"name":"levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"2215:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2202:19:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2188:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e206265206164646564","id":243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:50:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f","typeString":"literal_string \"Merkle tree is full. No more leaves can be added\""},"value":"Merkle tree is full. No more leaves can be added"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f","typeString":"literal_string \"Merkle tree is full. No more leaves can be added\""}],"id":234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2167:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2167:128:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":245,"nodeType":"ExpressionStatement","src":"2167:128:1"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"currentIndex","nameLocation":"2312:12:1","nodeType":"VariableDeclaration","scope":326,"src":"2305:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":246,"name":"uint32","nodeType":"ElementaryTypeName","src":"2305:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":249,"initialValue":{"id":248,"name":"_nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2327:10:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"2305:32:1"},{"assignments":[251],"declarations":[{"constant":false,"id":251,"mutability":"mutable","name":"currentLevelHash","nameLocation":"2355:16:1","nodeType":"VariableDeclaration","scope":326,"src":"2347:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2347:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":253,"initialValue":{"id":252,"name":"_leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2374:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2347:32:1"},{"assignments":[255],"declarations":[{"constant":false,"id":255,"mutability":"mutable","name":"left","nameLocation":"2397:4:1","nodeType":"VariableDeclaration","scope":326,"src":"2389:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2389:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":256,"nodeType":"VariableDeclarationStatement","src":"2389:12:1"},{"assignments":[258],"declarations":[{"constant":false,"id":258,"mutability":"mutable","name":"right","nameLocation":"2419:5:1","nodeType":"VariableDeclaration","scope":326,"src":"2411:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":259,"nodeType":"VariableDeclarationStatement","src":"2411:13:1"},{"body":{"id":316,"nodeType":"Block","src":"2471:398:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":270,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2489:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2504:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2489:16:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2509:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2489:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":302,"nodeType":"Block","src":"2662:99:1","statements":[{"expression":{"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":292,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2680:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":293,"name":"filledSubtrees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"2687:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":295,"indexExpression":{"id":294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2702:1:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2687:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2680:24:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":297,"nodeType":"ExpressionStatement","src":"2680:24:1"},{"expression":{"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":298,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2722:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":299,"name":"currentLevelHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2730:16:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2722:24:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":301,"nodeType":"ExpressionStatement","src":"2722:24:1"}]},"id":303,"nodeType":"IfStatement","src":"2485:276:1","trueBody":{"id":291,"nodeType":"Block","src":"2512:144:1","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":275,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2530:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":276,"name":"currentLevelHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2537:16:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2530:23:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":278,"nodeType":"ExpressionStatement","src":"2530:23:1"},{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":279,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2571:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":281,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2585:1:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":280,"name":"zeros","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"2579:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) pure returns (bytes32)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2579:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2571:16:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":284,"nodeType":"ExpressionStatement","src":"2571:16:1"},{"expression":{"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":285,"name":"filledSubtrees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"2605:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":287,"indexExpression":{"id":286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2620:1:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2605:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":288,"name":"currentLevelHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2625:16:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2605:36:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":290,"nodeType":"ExpressionStatement","src":"2605:36:1"}]}},{"expression":{"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":304,"name":"currentLevelHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2774:16:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":306,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"2807:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"}},{"id":307,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2815:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":308,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2821:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":305,"name":"hashLeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2793:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IHasher_$63_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (contract IHasher,bytes32,bytes32) pure returns (bytes32)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2774:53:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":311,"nodeType":"ExpressionStatement","src":"2774:53:1"},{"expression":{"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":312,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2841:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2857:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2841:17:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":315,"nodeType":"ExpressionStatement","src":"2841:17:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2454:1:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":265,"name":"levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"2458:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2454:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":317,"initializationExpression":{"assignments":[261],"declarations":[{"constant":false,"id":261,"mutability":"mutable","name":"i","nameLocation":"2447:1:1","nodeType":"VariableDeclaration","scope":317,"src":"2440:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":260,"name":"uint32","nodeType":"ElementaryTypeName","src":"2440:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":263,"initialValue":{"hexValue":"30","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2451:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2440:12:1"},"loopExpression":{"expression":{"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2466:3:1","subExpression":{"id":267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2466:1:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":269,"nodeType":"ExpressionStatement","src":"2466:3:1"},"nodeType":"ForStatement","src":"2435:434:1"},{"expression":{"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":318,"name":"nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2879:9:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":319,"name":"_nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2891:10:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2904:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2891:14:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2879:26:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":323,"nodeType":"ExpressionStatement","src":"2879:26:1"},{"expression":{"id":324,"name":"_nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2922:10:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":229,"id":325,"nodeType":"Return","src":"2915:17:1"}]},"id":327,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"2063:7:1","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"_leaf","nameLocation":"2079:5:1","nodeType":"VariableDeclaration","scope":327,"src":"2071:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2071:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2070:15:1"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"index","nameLocation":"2111:5:1","nodeType":"VariableDeclaration","scope":327,"src":"2104:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":227,"name":"uint32","nodeType":"ElementaryTypeName","src":"2104:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2103:14:1"},"scope":629,"src":"2054:885:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":627,"nodeType":"Block","src":"3084:5668:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3098:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3103:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3098:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3273:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3278:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3273:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":351,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3448:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3448:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3623:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"33","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3628:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"3623:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":367,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3798:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"34","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3798:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":375,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3973:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"35","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3978:1:1","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"3973:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":383,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"4148:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"36","id":384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4153:1:1","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"4148:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"4323:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"37","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:1:1","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4323:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":399,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"4498:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"38","id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4503:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4498:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"4673:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"39","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4678:1:1","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"4673:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":415,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"4848:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4853:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4848:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":423,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5024:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3131","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5029:2:1","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"5024:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5200:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3132","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5205:2:1","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"5200:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5376:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3133","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5381:2:1","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"5376:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5552:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3134","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5557:2:1","typeDescriptions":{"typeIdentifier":"t_rational_14_by_1","typeString":"int_const 14"},"value":"14"},"src":"5552:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5728:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3135","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5733:2:1","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"5728:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5904:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3136","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5909:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"5904:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"6080:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3137","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6085:2:1","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"17"},"src":"6080:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"6256:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3138","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6261:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"6256:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"6432:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3139","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6437:2:1","typeDescriptions":{"typeIdentifier":"t_rational_19_by_1","typeString":"int_const 19"},"value":"19"},"src":"6432:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":495,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"6608:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3230","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6613:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"6608:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"6784:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6789:2:1","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"6784:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":511,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"6960:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3232","id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6965:2:1","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"src":"6960:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"7136:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3233","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7141:2:1","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"src":"7136:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":527,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"7312:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3234","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7317:2:1","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"7312:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"7488:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3235","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7493:2:1","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"7488:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":543,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"7664:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3236","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7669:2:1","typeDescriptions":{"typeIdentifier":"t_rational_26_by_1","typeString":"int_const 26"},"value":"26"},"src":"7664:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"7840:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3237","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7845:2:1","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"7840:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":559,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"8016:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3238","id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8021:2:1","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"8016:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":567,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"8192:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3239","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8197:2:1","typeDescriptions":{"typeIdentifier":"t_rational_29_by_1","typeString":"int_const 29"},"value":"29"},"src":"8192:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"8368:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3330","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8373:2:1","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"8368:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":583,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"8544:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3331","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8549:2:1","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"8544:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"hexValue":"496e646578206f7574206f6620626f756e6473","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8723:21:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""},"value":"Index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""}],"id":591,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8716:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8716:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":594,"nodeType":"ExpressionStatement","src":"8716:29:1"},"id":595,"nodeType":"IfStatement","src":"8540:205:1","trueBody":{"expression":{"arguments":[{"hexValue":"307832633761303764323064666637396430316665636564633131333432383461386430383433363630366339333639336236376533333366363731626636396363","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8617:66:1","typeDescriptions":{"typeIdentifier":"t_rational_20117374654854068065360091929240690644953205021847304657748312176352011708876_by_1","typeString":"int_const 2011...(69 digits omitted)...8876"},"value":"0x2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_20117374654854068065360091929240690644953205021847304657748312176352011708876_by_1","typeString":"int_const 2011...(69 digits omitted)...8876"}],"id":587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8588:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8588:7:1","typeDescriptions":{}}},"id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8588:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":590,"nodeType":"Return","src":"8565:136:1"}},"id":596,"nodeType":"IfStatement","src":"8364:381:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831663363366664383538653961376434623064316633386532353661303964383164356135653363393633393837653264346238313463666162376336656262","id":580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8441:66:1","typeDescriptions":{"typeIdentifier":"t_rational_14128481056524536957498216347562587505734220138697483515041882766627531681467_by_1","typeString":"int_const 1412...(69 digits omitted)...1467"},"value":"0x1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14128481056524536957498216347562587505734220138697483515041882766627531681467_by_1","typeString":"int_const 1412...(69 digits omitted)...1467"}],"id":579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8412:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8412:7:1","typeDescriptions":{}}},"id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8412:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":582,"nodeType":"Return","src":"8389:136:1"}},"id":597,"nodeType":"IfStatement","src":"8188:557:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831303461656234313433356462363663336536326665636363316436663564393864306130656437356431333734646234353763663436326533613166343237","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8265:66:1","typeDescriptions":{"typeIdentifier":"t_rational_7369375930008366466575793949976062119589129382075515225587339510228573090855_by_1","typeString":"int_const 7369...(68 digits omitted)...0855"},"value":"0x104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7369375930008366466575793949976062119589129382075515225587339510228573090855_by_1","typeString":"int_const 7369...(68 digits omitted)...0855"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8236:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8236:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8236:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":574,"nodeType":"Return","src":"8213:136:1"}},"id":598,"nodeType":"IfStatement","src":"8012:733:1","trueBody":{"expression":{"arguments":[{"hexValue":"307830303264663337613236343236323138303233383363663935326266346464316633326530353433336265656231666434313033316662376561636539373964","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8089:66:1","typeDescriptions":{"typeIdentifier":"t_rational_81188535419966333443828411879788371791911419113311601242851320922268145565_by_1","typeString":"int_const 8118...(66 digits omitted)...5565"},"value":"0x002df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_81188535419966333443828411879788371791911419113311601242851320922268145565_by_1","typeString":"int_const 8118...(66 digits omitted)...5565"}],"id":563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8060:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8060:7:1","typeDescriptions":{}}},"id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8060:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":566,"nodeType":"Return","src":"8037:136:1"}},"id":599,"nodeType":"IfStatement","src":"7836:909:1","trueBody":{"expression":{"arguments":[{"hexValue":"307832656162353566366165346536366533326335313839656564356334373038343038363334343537363066356564376537623639623261363236303066333534","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7913:66:1","typeDescriptions":{"typeIdentifier":"t_rational_21109115181850306325376985763042479104020288670074922684065722930361593295700_by_1","typeString":"int_const 2110...(69 digits omitted)...5700"},"value":"0x2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_21109115181850306325376985763042479104020288670074922684065722930361593295700_by_1","typeString":"int_const 2110...(69 digits omitted)...5700"}],"id":555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7884:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7884:7:1","typeDescriptions":{}}},"id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7884:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":558,"nodeType":"Return","src":"7861:136:1"}},"id":600,"nodeType":"IfStatement","src":"7660:1085:1","trueBody":{"expression":{"arguments":[{"hexValue":"307832643363383862323331373563356135353635646239323834313463363664313931326231316163663937346232653634346361616163303437333963653939","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7737:66:1","typeDescriptions":{"typeIdentifier":"t_rational_20461032451716111710758703191059719329157552073475405257510123004109059116697_by_1","typeString":"int_const 2046...(69 digits omitted)...6697"},"value":"0x2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_20461032451716111710758703191059719329157552073475405257510123004109059116697_by_1","typeString":"int_const 2046...(69 digits omitted)...6697"}],"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7708:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7708:7:1","typeDescriptions":{}}},"id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7708:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":550,"nodeType":"Return","src":"7685:136:1"}},"id":601,"nodeType":"IfStatement","src":"7484:1261:1","trueBody":{"expression":{"arguments":[{"hexValue":"307830313964646239646632626339386439383764306466656361396432623634336465616661623866373033363536326536323763333636373236366130343463","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7561:66:1","typeDescriptions":{"typeIdentifier":"t_rational_731223578478205522266734242762040379509084610212963055574289967577626707020_by_1","typeString":"int_const 7312...(67 digits omitted)...7020"},"value":"0x019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_731223578478205522266734242762040379509084610212963055574289967577626707020_by_1","typeString":"int_const 7312...(67 digits omitted)...7020"}],"id":539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7532:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7532:7:1","typeDescriptions":{}}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":542,"nodeType":"Return","src":"7509:136:1"}},"id":602,"nodeType":"IfStatement","src":"7308:1437:1","trueBody":{"expression":{"arguments":[{"hexValue":"307830626134333361363331373461393061633230393932653735653330393534393638313262363532363835623565316132656165306231626634653866636431","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7385:66:1","typeDescriptions":{"typeIdentifier":"t_rational_5265560722662711931897489036950489198497887581819190855722292641626977795281_by_1","typeString":"int_const 5265...(68 digits omitted)...5281"},"value":"0x0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5265560722662711931897489036950489198497887581819190855722292641626977795281_by_1","typeString":"int_const 5265...(68 digits omitted)...5281"}],"id":531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7356:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7356:7:1","typeDescriptions":{}}},"id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":534,"nodeType":"Return","src":"7333:136:1"}},"id":603,"nodeType":"IfStatement","src":"7132:1613:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831306331366165393935396366383335383938306439646439363136653438323238373337333130613130653262366237333163316135343866303336633438","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7209:66:1","typeDescriptions":{"typeIdentifier":"t_rational_7578744943370928628486790984031172450284789077258575411544517949960795417672_by_1","typeString":"int_const 7578...(68 digits omitted)...7672"},"value":"0x10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7578744943370928628486790984031172450284789077258575411544517949960795417672_by_1","typeString":"int_const 7578...(68 digits omitted)...7672"}],"id":523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7180:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7180:7:1","typeDescriptions":{}}},"id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7180:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":526,"nodeType":"Return","src":"7157:136:1"}},"id":604,"nodeType":"IfStatement","src":"6956:1789:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831666633663631373937653533386237306536313933313064333366326130363365376562353931303465313132653935373338646131323534646333343533","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7033:66:1","typeDescriptions":{"typeIdentifier":"t_rational_14452740608498941570269709581566908438169321105015301708099056566809891976275_by_1","typeString":"int_const 1445...(69 digits omitted)...6275"},"value":"0x1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14452740608498941570269709581566908438169321105015301708099056566809891976275_by_1","typeString":"int_const 1445...(69 digits omitted)...6275"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7004:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7004:7:1","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7004:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":518,"nodeType":"Return","src":"6981:136:1"}},"id":605,"nodeType":"IfStatement","src":"6780:1965:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831396265353966326630343133636537386330633337303361336135343531623164376633393632396661333361626431313534386137363036356232393637","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6857:66:1","typeDescriptions":{"typeIdentifier":"t_rational_11644142961923297861823153318467410719458235936926864848600378646368500787559_by_1","typeString":"int_const 1164...(69 digits omitted)...7559"},"value":"0x19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_11644142961923297861823153318467410719458235936926864848600378646368500787559_by_1","typeString":"int_const 1164...(69 digits omitted)...7559"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6828:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6828:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":510,"nodeType":"Return","src":"6805:136:1"}},"id":606,"nodeType":"IfStatement","src":"6604:2141:1","trueBody":{"expression":{"arguments":[{"hexValue":"307832396437656433393132353663636333656135393663383665393333623839666633333964323565613864646365643937356165326665333062353239366434","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:66:1","typeDescriptions":{"typeIdentifier":"t_rational_18926336163373752588529320804722226672465218465546337267825102089394393880276_by_1","typeString":"int_const 1892...(69 digits omitted)...0276"},"value":"0x29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_18926336163373752588529320804722226672465218465546337267825102089394393880276_by_1","typeString":"int_const 1892...(69 digits omitted)...0276"}],"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:1","typeDescriptions":{}}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":502,"nodeType":"Return","src":"6629:136:1"}},"id":607,"nodeType":"IfStatement","src":"6428:2317:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831393836323261636264373833643162306439303634313035623166633865346438383839646539356334633531396233663633353830396665366166633035","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6505:66:1","typeDescriptions":{"typeIdentifier":"t_rational_11544818037702067293688063426012553693851444915243122674915303779243865603077_by_1","typeString":"int_const 1154...(69 digits omitted)...3077"},"value":"0x198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_11544818037702067293688063426012553693851444915243122674915303779243865603077_by_1","typeString":"int_const 1154...(69 digits omitted)...3077"}],"id":491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6476:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6476:7:1","typeDescriptions":{}}},"id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":494,"nodeType":"Return","src":"6453:136:1"}},"id":608,"nodeType":"IfStatement","src":"6252:2493:1","trueBody":{"expression":{"arguments":[{"hexValue":"307832346133623364383232343230623134623564386362366332386135373466303165393865613965393430353531643265626437356365653132363439663964","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6329:66:1","typeDescriptions":{"typeIdentifier":"t_rational_16572499860108808790864031418434474032816278079272694833180094335573354127261_by_1","typeString":"int_const 1657...(69 digits omitted)...7261"},"value":"0x24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16572499860108808790864031418434474032816278079272694833180094335573354127261_by_1","typeString":"int_const 1657...(69 digits omitted)...7261"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6300:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6300:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6300:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":486,"nodeType":"Return","src":"6277:136:1"}},"id":609,"nodeType":"IfStatement","src":"6076:2669:1","trueBody":{"expression":{"arguments":[{"hexValue":"307830646132636231366131636561616266316331366238333866376139653366326133613330383864396530613664656261613734383131343632303639366561","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6153:66:1","typeDescriptions":{"typeIdentifier":"t_rational_6167697920744083294431071781953545901493956884412099107903554924846764168938_by_1","typeString":"int_const 6167...(68 digits omitted)...8938"},"value":"0x0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6167697920744083294431071781953545901493956884412099107903554924846764168938_by_1","typeString":"int_const 6167...(68 digits omitted)...8938"}],"id":475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6124:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6124:7:1","typeDescriptions":{}}},"id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6124:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":478,"nodeType":"Return","src":"6101:136:1"}},"id":610,"nodeType":"IfStatement","src":"5900:2845:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831656231366230353761343737663462633866353732656136626565333935363130393866373866313562666233363939646362623762643864623631383534","id":468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5977:66:1","typeDescriptions":{"typeIdentifier":"t_rational_13882856022500117449912597249521445907860641470008251408376408693167665584212_by_1","typeString":"int_const 1388...(69 digits omitted)...4212"},"value":"0x1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_13882856022500117449912597249521445907860641470008251408376408693167665584212_by_1","typeString":"int_const 1388...(69 digits omitted)...4212"}],"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5948:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5948:7:1","typeDescriptions":{}}},"id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5948:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":470,"nodeType":"Return","src":"5925:136:1"}},"id":611,"nodeType":"IfStatement","src":"5724:3021:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831336536643866633838383339656437366531383263326137373961663562326330646139646431386339303432376136343466376531343861363235336236","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5801:66:1","typeDescriptions":{"typeIdentifier":"t_rational_9001816533475173848300051969191408053495003693097546138634479732228054209462_by_1","typeString":"int_const 9001...(68 digits omitted)...9462"},"value":"0x13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_9001816533475173848300051969191408053495003693097546138634479732228054209462_by_1","typeString":"int_const 9001...(68 digits omitted)...9462"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5772:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5772:7:1","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5772:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":462,"nodeType":"Return","src":"5749:136:1"}},"id":612,"nodeType":"IfStatement","src":"5548:3197:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831333361383065333036393763643535643866376434623039363562376265323430353762613564633364613839386565323138373233323434366362313038","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5625:66:1","typeDescriptions":{"typeIdentifier":"t_rational_8697310796973811813791996651816817650608143394255750603240183429036696711432_by_1","typeString":"int_const 8697...(68 digits omitted)...1432"},"value":"0x133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8697310796973811813791996651816817650608143394255750603240183429036696711432_by_1","typeString":"int_const 8697...(68 digits omitted)...1432"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5596:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5596:7:1","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5596:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":454,"nodeType":"Return","src":"5573:136:1"}},"id":613,"nodeType":"IfStatement","src":"5372:3373:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831636139353033653839333538383435303162626166323062653134656234633436623839373732633937623936653362326562663361333661393438626264","id":444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5449:66:1","typeDescriptions":{"typeIdentifier":"t_rational_12963910739953248305308691828220784129233893953613908022664851984069510335421_by_1","typeString":"int_const 1296...(69 digits omitted)...5421"},"value":"0x1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_12963910739953248305308691828220784129233893953613908022664851984069510335421_by_1","typeString":"int_const 1296...(69 digits omitted)...5421"}],"id":443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5420:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5420:7:1","typeDescriptions":{}}},"id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":446,"nodeType":"Return","src":"5397:136:1"}},"id":614,"nodeType":"IfStatement","src":"5196:3549:1","trueBody":{"expression":{"arguments":[{"hexValue":"307830656530663934316532646134623965333163336361393761343064386661396365363864393763303834313737303731623363623436636433333732663066","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5273:66:1","typeDescriptions":{"typeIdentifier":"t_rational_6729873933803351171051407921027021443029157982378522227479748669930764447503_by_1","typeString":"int_const 6729...(68 digits omitted)...7503"},"value":"0x0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6729873933803351171051407921027021443029157982378522227479748669930764447503_by_1","typeString":"int_const 6729...(68 digits omitted)...7503"}],"id":435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5244:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5244:7:1","typeDescriptions":{}}},"id":437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5244:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":438,"nodeType":"Return","src":"5221:136:1"}},"id":615,"nodeType":"IfStatement","src":"5020:3725:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831626561336465633564616235313536376365376532303061333066376261366434323736616561613533653236383666393632613436633636643531316535","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5097:66:1","typeDescriptions":{"typeIdentifier":"t_rational_12626316503845421241020584259526236205728737442715389902276517188414400172517_by_1","typeString":"int_const 1262...(69 digits omitted)...2517"},"value":"0x1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_12626316503845421241020584259526236205728737442715389902276517188414400172517_by_1","typeString":"int_const 1262...(69 digits omitted)...2517"}],"id":427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5068:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5068:7:1","typeDescriptions":{}}},"id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5068:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":430,"nodeType":"Return","src":"5045:136:1"}},"id":616,"nodeType":"IfStatement","src":"4844:3901:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831663034656632306465653438643339393834643865616265373638613730656166613633313061643230383439643435373363336334306332616431653330","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4921:66:1","typeDescriptions":{"typeIdentifier":"t_rational_14030416097908897320437553787826300082392928432242046897689557706485311282736_by_1","typeString":"int_const 1403...(69 digits omitted)...2736"},"value":"0x1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14030416097908897320437553787826300082392928432242046897689557706485311282736_by_1","typeString":"int_const 1403...(69 digits omitted)...2736"}],"id":419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4892:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4892:7:1","typeDescriptions":{}}},"id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4892:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":422,"nodeType":"Return","src":"4869:136:1"}},"id":617,"nodeType":"IfStatement","src":"4669:4076:1","trueBody":{"expression":{"arguments":[{"hexValue":"307830303538343539373234666636636135613136353266636263336538326239333839356366303865393735623139626561623366353463323137643163303037","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4745:66:1","typeDescriptions":{"typeIdentifier":"t_rational_155962837046691114236524362966874066300454611955781275944230309195800494087_by_1","typeString":"int_const 1559...(67 digits omitted)...4087"},"value":"0x0058459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_155962837046691114236524362966874066300454611955781275944230309195800494087_by_1","typeString":"int_const 1559...(67 digits omitted)...4087"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4716:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4716:7:1","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4716:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":414,"nodeType":"Return","src":"4693:136:1"}},"id":618,"nodeType":"IfStatement","src":"4494:4251:1","trueBody":{"expression":{"arguments":[{"hexValue":"307832363161663863316630393132653436353734343634313430396636323264343636633339323061633665356666333765333636303463623131646666663830","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4570:66:1","typeDescriptions":{"typeIdentifier":"t_rational_17235543131546745471991808272245772046758360534180976603221801364506032471936_by_1","typeString":"int_const 1723...(69 digits omitted)...1936"},"value":"0x261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_17235543131546745471991808272245772046758360534180976603221801364506032471936_by_1","typeString":"int_const 1723...(69 digits omitted)...1936"}],"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4541:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4541:7:1","typeDescriptions":{}}},"id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4541:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":406,"nodeType":"Return","src":"4518:136:1"}},"id":619,"nodeType":"IfStatement","src":"4319:4426:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831393135366662643764316138626635636261383930393336376465316236323435333465626162346630663739653030336263636464316231383262646234","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4395:66:1","typeDescriptions":{"typeIdentifier":"t_rational_11345696205391376769769683860277269518617256738724086786512014734609753488820_by_1","typeString":"int_const 1134...(69 digits omitted)...8820"},"value":"0x19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_11345696205391376769769683860277269518617256738724086786512014734609753488820_by_1","typeString":"int_const 1134...(69 digits omitted)...8820"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4366:7:1","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":398,"nodeType":"Return","src":"4343:136:1"}},"id":620,"nodeType":"IfStatement","src":"4144:4601:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831636362393763393332353635613932633630313536626462613264303866336266313337373436346530323563656537363536373965363034613733313563","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4220:66:1","typeDescriptions":{"typeIdentifier":"t_rational_13024477302430254842915163302704885770955784224100349847438808884122720088412_by_1","typeString":"int_const 1302...(69 digits omitted)...8412"},"value":"0x1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_13024477302430254842915163302704885770955784224100349847438808884122720088412_by_1","typeString":"int_const 1302...(69 digits omitted)...8412"}],"id":387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4191:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4191:7:1","typeDescriptions":{}}},"id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":390,"nodeType":"Return","src":"4168:136:1"}},"id":621,"nodeType":"IfStatement","src":"3969:4776:1","trueBody":{"expression":{"arguments":[{"hexValue":"307832346361303563326235636434326538393064366265393463363864303638396634663231633963656339633066313366653431643536366466623534393539","id":380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4045:66:1","typeDescriptions":{"typeIdentifier":"t_rational_16640205414190175414380077665118269450294358858897019640557533278896634808665_by_1","typeString":"int_const 1664...(69 digits omitted)...8665"},"value":"0x24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16640205414190175414380077665118269450294358858897019640557533278896634808665_by_1","typeString":"int_const 1664...(69 digits omitted)...8665"}],"id":379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4016:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4016:7:1","typeDescriptions":{}}},"id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":382,"nodeType":"Return","src":"3993:136:1"}},"id":622,"nodeType":"IfStatement","src":"3794:4951:1","trueBody":{"expression":{"arguments":[{"hexValue":"307830613839636136666661313463633436326366656462383432633330656432323161353061336436626630323261366135376463383261623234633135376339","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3870:66:1","typeDescriptions":{"typeIdentifier":"t_rational_4766583705360062980279572762279781527342845808161105063909171241304075622345_by_1","typeString":"int_const 4766...(68 digits omitted)...2345"},"value":"0x0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4766583705360062980279572762279781527342845808161105063909171241304075622345_by_1","typeString":"int_const 4766...(68 digits omitted)...2345"}],"id":371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3841:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3841:7:1","typeDescriptions":{}}},"id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3841:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":374,"nodeType":"Return","src":"3818:136:1"}},"id":623,"nodeType":"IfStatement","src":"3619:5126:1","trueBody":{"expression":{"arguments":[{"hexValue":"307832303132316565383131343839666638643631663039666238396533313366313439353961306632386262343238613230646261366230623036386233626462","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3695:66:1","typeDescriptions":{"typeIdentifier":"t_rational_14506027710748750947258687001455876266559341618222612722926156490737302846427_by_1","typeString":"int_const 1450...(69 digits omitted)...6427"},"value":"0x20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14506027710748750947258687001455876266559341618222612722926156490737302846427_by_1","typeString":"int_const 1450...(69 digits omitted)...6427"}],"id":363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3666:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3666:7:1","typeDescriptions":{}}},"id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3666:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":366,"nodeType":"Return","src":"3643:136:1"}},"id":624,"nodeType":"IfStatement","src":"3444:5301:1","trueBody":{"expression":{"arguments":[{"hexValue":"307831313531393439383935653832616231393932346465393263343061336436663762636236306439326230303530346238313939363133363833663063323030","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3520:66:1","typeDescriptions":{"typeIdentifier":"t_rational_7833458610320835472520144237082236871909694928684820466656733259024982655488_by_1","typeString":"int_const 7833...(68 digits omitted)...5488"},"value":"0x1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7833458610320835472520144237082236871909694928684820466656733259024982655488_by_1","typeString":"int_const 7833...(68 digits omitted)...5488"}],"id":355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3491:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3491:7:1","typeDescriptions":{}}},"id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":358,"nodeType":"Return","src":"3468:136:1"}},"id":625,"nodeType":"IfStatement","src":"3269:5476:1","trueBody":{"expression":{"arguments":[{"hexValue":"307832353661363133353737376565653266643236663534623862373033376132353433396435323335636165653232343135343138366432623861353265333164","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3345:66:1","typeDescriptions":{"typeIdentifier":"t_rational_16923532097304556005972200564242292693309333953544141029519619077135960040221_by_1","typeString":"int_const 1692...(69 digits omitted)...0221"},"value":"0x256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16923532097304556005972200564242292693309333953544141029519619077135960040221_by_1","typeString":"int_const 1692...(69 digits omitted)...0221"}],"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3316:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3316:7:1","typeDescriptions":{}}},"id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3316:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":350,"nodeType":"Return","src":"3293:136:1"}},"id":626,"nodeType":"IfStatement","src":"3094:5651:1","trueBody":{"expression":{"arguments":[{"hexValue":"307832666535346336306433616361626633333433613335623665626131356462343832316233343066373665373431653232343936383565643438393961663663","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3170:66:1","typeDescriptions":{"typeIdentifier":"t_rational_21663839004416932945382355908790599225266501822907911457504978515578255421292_by_1","typeString":"int_const 2166...(69 digits omitted)...1292"},"value":"0x2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_21663839004416932945382355908790599225266501822907911457504978515578255421292_by_1","typeString":"int_const 2166...(69 digits omitted)...1292"}],"id":339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3141:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3141:7:1","typeDescriptions":{}}},"id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3141:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":342,"nodeType":"Return","src":"3118:136:1"}}]},"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"2945:78:1","text":"@dev provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"},"functionSelector":"e8295588","id":628,"implemented":true,"kind":"function","modifiers":[],"name":"zeros","nameLocation":"3037:5:1","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"i","nameLocation":"3051:1:1","nodeType":"VariableDeclaration","scope":628,"src":"3043:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"3043:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3042:11:1"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":628,"src":"3075:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3075:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3074:9:1"},"scope":629,"src":"3028:5724:1","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":630,"src":"205:8549:1","usedErrors":[]}],"src":"32:8723:1"},"id":1},"contracts/Relayer.sol":{"ast":{"absolutePath":"contracts/Relayer.sol","exportedSymbols":{"ERC20":[4386],"IDepositVerifier":[13],"IFinalizeVerifier":[49],"IHasher":[63],"ISwapVerifier":[37],"IWithdrawVerifier":[25],"MerkleTree":[629],"ModelInput":[651],"ModelOutput":[648],"NodeStatus":[655],"Relayer":[1157],"TxResult":[662],"Vault":[1464]},"id":1158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":631,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:2"},{"absolutePath":"contracts/MerkleTree.sol","file":"./MerkleTree.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":630,"src":"58:53:2","symbolAliases":[{"foreign":{"id":632,"name":"MerkleTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"66:10:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":633,"name":"IHasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"78:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/solmate/src/tokens/ERC20.sol","file":"solmate/tokens/ERC20.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":4387,"src":"112:47:2","symbolAliases":[{"foreign":{"id":635,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"120:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/Vault.sol","file":"./Vault.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":1465,"src":"160:34:2","symbolAliases":[{"foreign":{"id":637,"name":"Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"168:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVerifier.sol","file":"./IVerifier.sol","id":643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":50,"src":"195:102:2","symbolAliases":[{"foreign":{"id":639,"name":"IDepositVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"203:16:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":640,"name":"IWithdrawVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"221:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":641,"name":"ISwapVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"240:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":642,"name":"IFinalizeVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"255:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ModelOutput","id":648,"members":[{"constant":false,"id":645,"mutability":"mutable","name":"direction","nameLocation":"330:9:2","nodeType":"VariableDeclaration","scope":648,"src":"324:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":644,"name":"uint8","nodeType":"ElementaryTypeName","src":"324:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"amount","nameLocation":"353:6:2","nodeType":"VariableDeclaration","scope":648,"src":"345:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":646,"name":"uint248","nodeType":"ElementaryTypeName","src":"345:7:2","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"name":"ModelOutput","nameLocation":"306:11:2","nodeType":"StructDefinition","scope":1158,"src":"299:63:2","visibility":"public"},{"canonicalName":"ModelInput","id":651,"members":[{"constant":false,"id":650,"mutability":"mutable","name":"chainlinkPrice","nameLocation":"396:14:2","nodeType":"VariableDeclaration","scope":651,"src":"388:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"388:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ModelInput","nameLocation":"371:10:2","nodeType":"StructDefinition","scope":1158,"src":"364:49:2","visibility":"public"},{"canonicalName":"NodeStatus","id":655,"members":[{"id":652,"name":"EMPTY","nameLocation":"437:5:2","nodeType":"EnumValue","src":"437:5:2"},{"id":653,"name":"TRANSACTED","nameLocation":"448:10:2","nodeType":"EnumValue","src":"448:10:2"},{"id":654,"name":"NULLIFIED","nameLocation":"464:9:2","nodeType":"EnumValue","src":"464:9:2"}],"name":"NodeStatus","nameLocation":"420:10:2","nodeType":"EnumDefinition","src":"415:60:2"},{"canonicalName":"TxResult","id":662,"members":[{"constant":false,"id":657,"mutability":"mutable","name":"direction","nameLocation":"505:9:2","nodeType":"VariableDeclaration","scope":662,"src":"499:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":656,"name":"uint8","nodeType":"ElementaryTypeName","src":"499:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"amountA","nameLocation":"528:7:2","nodeType":"VariableDeclaration","scope":662,"src":"520:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":658,"name":"uint120","nodeType":"ElementaryTypeName","src":"520:7:2","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"amountB","nameLocation":"549:7:2","nodeType":"VariableDeclaration","scope":662,"src":"541:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":660,"name":"uint120","nodeType":"ElementaryTypeName","src":"541:7:2","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"name":"TxResult","nameLocation":"484:8:2","nodeType":"StructDefinition","scope":1158,"src":"477:82:2","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":663,"name":"MerkleTree","nameLocations":["581:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":629,"src":"581:10:2"},"id":664,"nodeType":"InheritanceSpecifier","src":"581:10:2"}],"canonicalName":"Relayer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1157,"linearizedBaseContracts":[1157,629],"name":"Relayer","nameLocation":"570:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"ff709ee8","id":667,"mutability":"immutable","name":"TOKEN_A","nameLocation":"626:7:2","nodeType":"VariableDeclaration","scope":1157,"src":"603:30:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"},"typeName":{"id":666,"nodeType":"UserDefinedTypeName","pathNode":{"id":665,"name":"ERC20","nameLocations":["603:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":4386,"src":"603:5:2"},"referencedDeclaration":4386,"src":"603:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"499f712e","id":670,"mutability":"immutable","name":"TOKEN_B","nameLocation":"662:7:2","nodeType":"VariableDeclaration","scope":1157,"src":"639:30:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"},"typeName":{"id":669,"nodeType":"UserDefinedTypeName","pathNode":{"id":668,"name":"ERC20","nameLocations":["639:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":4386,"src":"639:5:2"},"referencedDeclaration":4386,"src":"639:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"26120c88","id":673,"mutability":"mutable","name":"depositVerifier","nameLocation":"699:15:2","nodeType":"VariableDeclaration","scope":1157,"src":"675:39:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDepositVerifier_$13","typeString":"contract IDepositVerifier"},"typeName":{"id":672,"nodeType":"UserDefinedTypeName","pathNode":{"id":671,"name":"IDepositVerifier","nameLocations":["675:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"675:16:2"},"referencedDeclaration":13,"src":"675:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_IDepositVerifier_$13","typeString":"contract IDepositVerifier"}},"visibility":"public"},{"constant":false,"functionSelector":"864eb164","id":676,"mutability":"mutable","name":"withdrawVerifier","nameLocation":"745:16:2","nodeType":"VariableDeclaration","scope":1157,"src":"720:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$25","typeString":"contract IWithdrawVerifier"},"typeName":{"id":675,"nodeType":"UserDefinedTypeName","pathNode":{"id":674,"name":"IWithdrawVerifier","nameLocations":["720:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"720:17:2"},"referencedDeclaration":25,"src":"720:17:2","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$25","typeString":"contract IWithdrawVerifier"}},"visibility":"public"},{"constant":false,"functionSelector":"8de533a4","id":679,"mutability":"mutable","name":"swapVerifier","nameLocation":"788:12:2","nodeType":"VariableDeclaration","scope":1157,"src":"767:33:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapVerifier_$37","typeString":"contract ISwapVerifier"},"typeName":{"id":678,"nodeType":"UserDefinedTypeName","pathNode":{"id":677,"name":"ISwapVerifier","nameLocations":["767:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"767:13:2"},"referencedDeclaration":37,"src":"767:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapVerifier_$37","typeString":"contract ISwapVerifier"}},"visibility":"public"},{"constant":false,"functionSelector":"14fd7b35","id":682,"mutability":"mutable","name":"finalizeVerifier","nameLocation":"831:16:2","nodeType":"VariableDeclaration","scope":1157,"src":"806:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFinalizeVerifier_$49","typeString":"contract IFinalizeVerifier"},"typeName":{"id":681,"nodeType":"UserDefinedTypeName","pathNode":{"id":680,"name":"IFinalizeVerifier","nameLocations":["806:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":49,"src":"806:17:2"},"referencedDeclaration":49,"src":"806:17:2","typeDescriptions":{"typeIdentifier":"t_contract$_IFinalizeVerifier_$49","typeString":"contract IFinalizeVerifier"}},"visibility":"public"},{"constant":false,"functionSelector":"479015cd","id":685,"mutability":"mutable","name":"modelInput","nameLocation":"871:10:2","nodeType":"VariableDeclaration","scope":1157,"src":"853:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ModelInput_$651_storage","typeString":"struct ModelInput"},"typeName":{"id":684,"nodeType":"UserDefinedTypeName","pathNode":{"id":683,"name":"ModelInput","nameLocations":["853:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"853:10:2"},"referencedDeclaration":651,"src":"853:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_ModelInput_$651_storage_ptr","typeString":"struct ModelInput"}},"visibility":"public"},{"constant":false,"functionSelector":"61c3305c","id":690,"mutability":"mutable","name":"nodeStatusPool","nameLocation":"925:14:2","nodeType":"VariableDeclaration","scope":1157,"src":"887:52:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_enum$_NodeStatus_$655_$","typeString":"mapping(bytes32 => enum NodeStatus)"},"typeName":{"id":689,"keyType":{"id":686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"895:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"887:30:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_enum$_NodeStatus_$655_$","typeString":"mapping(bytes32 => enum NodeStatus)"},"valueType":{"id":688,"nodeType":"UserDefinedTypeName","pathNode":{"id":687,"name":"NodeStatus","nameLocations":["906:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":655,"src":"906:10:2"},"referencedDeclaration":655,"src":"906:10:2","typeDescriptions":{"typeIdentifier":"t_enum$_NodeStatus_$655","typeString":"enum NodeStatus"}}},"visibility":"public"},{"constant":false,"functionSelector":"513a4f07","id":695,"mutability":"mutable","name":"transactionResults","nameLocation":"981:18:2","nodeType":"VariableDeclaration","scope":1157,"src":"945:54:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TxResult_$662_storage_$","typeString":"mapping(bytes32 => struct TxResult)"},"typeName":{"id":694,"keyType":{"id":691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"953:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"945:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TxResult_$662_storage_$","typeString":"mapping(bytes32 => struct TxResult)"},"valueType":{"id":693,"nodeType":"UserDefinedTypeName","pathNode":{"id":692,"name":"TxResult","nameLocations":["964:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":662,"src":"964:8:2"},"referencedDeclaration":662,"src":"964:8:2","typeDescriptions":{"typeIdentifier":"t_struct$_TxResult_$662_storage_ptr","typeString":"struct TxResult"}}},"visibility":"public"},{"body":{"id":747,"nodeType":"Block","src":"1289:235:2","statements":[{"expression":{"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":723,"name":"TOKEN_A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"1299:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":724,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"1309:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"src":"1299:17:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":726,"nodeType":"ExpressionStatement","src":"1299:17:2"},{"expression":{"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":727,"name":"TOKEN_B","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"1326:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":728,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"1336:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"src":"1326:17:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":730,"nodeType":"ExpressionStatement","src":"1326:17:2"},{"expression":{"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":731,"name":"depositVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"1353:15:2","typeDescriptions":{"typeIdentifier":"t_contract$_IDepositVerifier_$13","typeString":"contract IDepositVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":732,"name":"_depositVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"1371:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_IDepositVerifier_$13","typeString":"contract IDepositVerifier"}},"src":"1353:34:2","typeDescriptions":{"typeIdentifier":"t_contract$_IDepositVerifier_$13","typeString":"contract IDepositVerifier"}},"id":734,"nodeType":"ExpressionStatement","src":"1353:34:2"},{"expression":{"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":735,"name":"withdrawVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"1397:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$25","typeString":"contract IWithdrawVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":736,"name":"_withdrawVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"1416:17:2","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$25","typeString":"contract IWithdrawVerifier"}},"src":"1397:36:2","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$25","typeString":"contract IWithdrawVerifier"}},"id":738,"nodeType":"ExpressionStatement","src":"1397:36:2"},{"expression":{"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":739,"name":"swapVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"1443:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapVerifier_$37","typeString":"contract ISwapVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":740,"name":"_swapVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"1458:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapVerifier_$37","typeString":"contract ISwapVerifier"}},"src":"1443:28:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapVerifier_$37","typeString":"contract ISwapVerifier"}},"id":742,"nodeType":"ExpressionStatement","src":"1443:28:2"},{"expression":{"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":743,"name":"finalizeVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"1481:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_IFinalizeVerifier_$49","typeString":"contract IFinalizeVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":744,"name":"_finalizeVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"1500:17:2","typeDescriptions":{"typeIdentifier":"t_contract$_IFinalizeVerifier_$49","typeString":"contract IFinalizeVerifier"}},"src":"1481:36:2","typeDescriptions":{"typeIdentifier":"t_contract$_IFinalizeVerifier_$49","typeString":"contract IFinalizeVerifier"}},"id":746,"nodeType":"ExpressionStatement","src":"1481:36:2"}]},"id":748,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"3332","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1276:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":720,"name":"_hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"1280:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"}}],"id":721,"kind":"baseConstructorSpecifier","modifierName":{"id":718,"name":"MerkleTree","nameLocations":["1265:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":629,"src":"1265:10:2"},"nodeType":"ModifierInvocation","src":"1265:23:2"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"_tokenA","nameLocation":"1033:7:2","nodeType":"VariableDeclaration","scope":748,"src":"1027:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"},"typeName":{"id":697,"nodeType":"UserDefinedTypeName","pathNode":{"id":696,"name":"ERC20","nameLocations":["1027:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":4386,"src":"1027:5:2"},"referencedDeclaration":4386,"src":"1027:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"_tokenB","nameLocation":"1056:7:2","nodeType":"VariableDeclaration","scope":748,"src":"1050:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"},"typeName":{"id":700,"nodeType":"UserDefinedTypeName","pathNode":{"id":699,"name":"ERC20","nameLocations":["1050:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":4386,"src":"1050:5:2"},"referencedDeclaration":4386,"src":"1050:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"_depositVerifier","nameLocation":"1090:16:2","nodeType":"VariableDeclaration","scope":748,"src":"1073:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDepositVerifier_$13","typeString":"contract IDepositVerifier"},"typeName":{"id":703,"nodeType":"UserDefinedTypeName","pathNode":{"id":702,"name":"IDepositVerifier","nameLocations":["1073:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"1073:16:2"},"referencedDeclaration":13,"src":"1073:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_IDepositVerifier_$13","typeString":"contract IDepositVerifier"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"_withdrawVerifier","nameLocation":"1134:17:2","nodeType":"VariableDeclaration","scope":748,"src":"1116:35:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$25","typeString":"contract IWithdrawVerifier"},"typeName":{"id":706,"nodeType":"UserDefinedTypeName","pathNode":{"id":705,"name":"IWithdrawVerifier","nameLocations":["1116:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1116:17:2"},"referencedDeclaration":25,"src":"1116:17:2","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$25","typeString":"contract IWithdrawVerifier"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"_swapVerifier","nameLocation":"1175:13:2","nodeType":"VariableDeclaration","scope":748,"src":"1161:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapVerifier_$37","typeString":"contract ISwapVerifier"},"typeName":{"id":709,"nodeType":"UserDefinedTypeName","pathNode":{"id":708,"name":"ISwapVerifier","nameLocations":["1161:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"1161:13:2"},"referencedDeclaration":37,"src":"1161:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapVerifier_$37","typeString":"contract ISwapVerifier"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"_finalizeVerifier","nameLocation":"1216:17:2","nodeType":"VariableDeclaration","scope":748,"src":"1198:35:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFinalizeVerifier_$49","typeString":"contract IFinalizeVerifier"},"typeName":{"id":712,"nodeType":"UserDefinedTypeName","pathNode":{"id":711,"name":"IFinalizeVerifier","nameLocations":["1198:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":49,"src":"1198:17:2"},"referencedDeclaration":49,"src":"1198:17:2","typeDescriptions":{"typeIdentifier":"t_contract$_IFinalizeVerifier_$49","typeString":"contract IFinalizeVerifier"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"_hasher","nameLocation":"1251:7:2","nodeType":"VariableDeclaration","scope":748,"src":"1243:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"},"typeName":{"id":715,"nodeType":"UserDefinedTypeName","pathNode":{"id":714,"name":"IHasher","nameLocations":["1243:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":63,"src":"1243:7:2"},"referencedDeclaration":63,"src":"1243:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_IHasher_$63","typeString":"contract IHasher"}},"visibility":"internal"}],"src":"1017:247:2"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"1289:0:2"},"scope":1157,"src":"1006:518:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":866,"nodeType":"Block","src":"1710:692:2","statements":[{"assignments":[768],"declarations":[{"constant":false,"id":768,"mutability":"mutable","name":"_publicInputs","nameLocation":"1738:13:2","nodeType":"VariableDeclaration","scope":866,"src":"1720:31:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5]"},"typeName":{"baseType":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":767,"length":{"hexValue":"35","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1728:1:2","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"1720:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_storage_ptr","typeString":"uint256[5]"}},"visibility":"internal"}],"id":769,"nodeType":"VariableDeclarationStatement","src":"1720:31:2"},{"expression":{"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":770,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"1761:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":772,"indexExpression":{"hexValue":"30","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1775:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1761:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":775,"name":"_cNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"1788:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1780:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1780:7:2","typeDescriptions":{}}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1761:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":778,"nodeType":"ExpressionStatement","src":"1761:34:2"},{"expression":{"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":779,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"1805:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":781,"indexExpression":{"hexValue":"31","id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1819:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1805:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":785,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"1838:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":784,"name":"Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1832:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Vault_$1464_$","typeString":"type(contract Vault)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1832:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1846:6:2","memberName":"cModel","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"1832:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1832:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1824:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:2","typeDescriptions":{}}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1824:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1805:50:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":791,"nodeType":"ExpressionStatement","src":"1805:50:2"},{"expression":{"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":792,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"1865:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":794,"indexExpression":{"hexValue":"32","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1879:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1865:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":797,"name":"_balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1892:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1884:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"1884:7:2","typeDescriptions":{}}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1884:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1865:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":800,"nodeType":"ExpressionStatement","src":"1865:37:2"},{"expression":{"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":801,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"1912:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":803,"indexExpression":{"hexValue":"33","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1926:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1912:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":806,"name":"_balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"1939:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1931:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1931:7:2","typeDescriptions":{}}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1931:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1912:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":809,"nodeType":"ExpressionStatement","src":"1912:37:2"},{"expression":{"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":810,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"1959:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":812,"indexExpression":{"hexValue":"34","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1973:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1959:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":817,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"1994:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1986:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":815,"name":"uint160","nodeType":"ElementaryTypeName","src":"1986:7:2","typeDescriptions":{}}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1986:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1978:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1978:7:2","typeDescriptions":{}}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1978:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1959:43:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":821,"nodeType":"ExpressionStatement","src":"1959:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":823,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2033:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:6:2","memberName":"sender","nodeType":"MemberAccess","src":"2033:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":825,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"2047:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2033:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f736974206e6f7420747261646572","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2067:20:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69","typeString":"literal_string \"Deposit not trader\""},"value":"Deposit not trader"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69","typeString":"literal_string \"Deposit not trader\""}],"id":822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2012:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2012:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":829,"nodeType":"ExpressionStatement","src":"2012:85:2"},{"expression":{"arguments":[{"arguments":[{"id":833,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"2151:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},{"id":834,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"2166:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":831,"name":"depositVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"2128:15:2","typeDescriptions":{"typeIdentifier":"t_contract$_IDepositVerifier_$13","typeString":"contract IDepositVerifier"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2144:6:2","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2128:22:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_uint256_$5_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[5] memory,bytes memory) view external returns (bool)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f736974205665726966696572206661696c6564","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2187:25:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282","typeString":"literal_string \"Deposit Verifier failed\""},"value":"Deposit Verifier failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282","typeString":"literal_string \"Deposit Verifier failed\""}],"id":830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2107:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:115:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":838,"nodeType":"ExpressionStatement","src":"2107:115:2"},{"expression":{"arguments":[{"id":842,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"2254:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":845,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2270:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Relayer_$1157","typeString":"contract Relayer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Relayer_$1157","typeString":"contract Relayer"}],"id":844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2262:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:2","typeDescriptions":{}}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2262:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":847,"name":"_balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"2277:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":839,"name":"TOKEN_A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2233:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2241:12:2","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":4197,"src":"2233:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":849,"nodeType":"ExpressionStatement","src":"2233:54:2"},{"expression":{"arguments":[{"id":853,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"2318:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":856,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2334:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Relayer_$1157","typeString":"contract Relayer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Relayer_$1157","typeString":"contract Relayer"}],"id":855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2326:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:2","typeDescriptions":{}}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"_balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2341:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":850,"name":"TOKEN_B","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"2297:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2305:12:2","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":4197,"src":"2297:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2297:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":860,"nodeType":"ExpressionStatement","src":"2297:54:2"},{"expression":{"arguments":[{"id":863,"name":"_cNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"2388:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":861,"name":"MerkleTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"2369:10:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleTree_$629_$","typeString":"type(contract MerkleTree)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2380:7:2","memberName":"_insert","nodeType":"MemberAccess","referencedDeclaration":327,"src":"2369:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint32_$","typeString":"function (bytes32) returns (uint32)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2369:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":762,"id":865,"nodeType":"Return","src":"2362:33:2"}]},"functionSelector":"823db3d2","id":867,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"1539:7:2","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"_cNode","nameLocation":"1564:6:2","nodeType":"VariableDeclaration","scope":867,"src":"1556:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1556:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":752,"mutability":"mutable","name":"_balanceA","nameLocation":"1588:9:2","nodeType":"VariableDeclaration","scope":867,"src":"1580:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"_balanceB","nameLocation":"1615:9:2","nodeType":"VariableDeclaration","scope":867,"src":"1607:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"_vault","nameLocation":"1642:6:2","nodeType":"VariableDeclaration","scope":867,"src":"1634:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"1634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"_proof","nameLocation":"1673:6:2","nodeType":"VariableDeclaration","scope":867,"src":"1658:21:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"1658:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1546:139:2"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":867,"src":"1702:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":760,"name":"uint32","nodeType":"ElementaryTypeName","src":"1702:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1701:8:2"},"scope":1157,"src":"1530:872:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":981,"nodeType":"Block","src":"2576:697:2","statements":[{"assignments":[885],"declarations":[{"constant":false,"id":885,"mutability":"mutable","name":"_publicInputs","nameLocation":"2604:13:2","nodeType":"VariableDeclaration","scope":981,"src":"2586:31:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5]"},"typeName":{"baseType":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2586:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":884,"length":{"hexValue":"35","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2594:1:2","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"2586:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_storage_ptr","typeString":"uint256[5]"}},"visibility":"internal"}],"id":886,"nodeType":"VariableDeclarationStatement","src":"2586:31:2"},{"expression":{"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":887,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"2627:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":889,"indexExpression":{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2641:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2627:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":892,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"2654:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2646:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:2","typeDescriptions":{}}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2646:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2627:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":895,"nodeType":"ExpressionStatement","src":"2627:32:2"},{"expression":{"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":896,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"2669:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":898,"indexExpression":{"hexValue":"31","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2683:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2669:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":901,"name":"_nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2696:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2688:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2688:7:2","typeDescriptions":{}}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2669:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":904,"nodeType":"ExpressionStatement","src":"2669:38:2"},{"expression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":905,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"2717:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":907,"indexExpression":{"hexValue":"32","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2731:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2717:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":910,"name":"_balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"2744:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2736:7:2","typeDescriptions":{}}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2717:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":913,"nodeType":"ExpressionStatement","src":"2717:37:2"},{"expression":{"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":914,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"2764:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":916,"indexExpression":{"hexValue":"33","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2764:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":919,"name":"_balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2791:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2783:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2783:7:2","typeDescriptions":{}}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2764:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":922,"nodeType":"ExpressionStatement","src":"2764:37:2"},{"expression":{"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":923,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"2811:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":925,"indexExpression":{"hexValue":"34","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2825:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2811:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":930,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"2846:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2838:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":928,"name":"uint160","nodeType":"ElementaryTypeName","src":"2838:7:2","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2838:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2830:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"2830:7:2","typeDescriptions":{}}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2830:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2811:43:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":934,"nodeType":"ExpressionStatement","src":"2811:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":936,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2885:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2889:6:2","memberName":"sender","nodeType":"MemberAccess","src":"2885:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":938,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"2899:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2885:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177206e6f7420747261646572","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2919:21:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367","typeString":"literal_string \"Withdraw not trader\""},"value":"Withdraw not trader"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367","typeString":"literal_string \"Withdraw not trader\""}],"id":935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2864:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":942,"nodeType":"ExpressionStatement","src":"2864:86:2"},{"expression":{"arguments":[{"arguments":[{"id":946,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"3005:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},{"id":947,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":944,"name":"withdrawVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"2981:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$25","typeString":"contract IWithdrawVerifier"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2998:6:2","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2981:23:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_uint256_$5_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[5] memory,bytes memory) view external returns (bool)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2981:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177205665726966696572206661696c6564","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3041:26:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983","typeString":"literal_string \"Withdraw Verifier failed\""},"value":"Withdraw Verifier failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983","typeString":"literal_string \"Withdraw Verifier failed\""}],"id":943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2960:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:117:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":951,"nodeType":"ExpressionStatement","src":"2960:117:2"},{"expression":{"arguments":[{"arguments":[{"id":957,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3117:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Relayer_$1157","typeString":"contract Relayer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Relayer_$1157","typeString":"contract Relayer"}],"id":956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3109:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"3109:7:2","typeDescriptions":{}}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3109:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":959,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"3124:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":960,"name":"_balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"3132:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":952,"name":"TOKEN_A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"3088:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3096:12:2","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":4197,"src":"3088:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3088:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":962,"nodeType":"ExpressionStatement","src":"3088:54:2"},{"expression":{"arguments":[{"arguments":[{"id":968,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3181:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Relayer_$1157","typeString":"contract Relayer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Relayer_$1157","typeString":"contract Relayer"}],"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3173:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"3173:7:2","typeDescriptions":{}}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3173:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":970,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"3188:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":971,"name":"_balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"3196:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":963,"name":"TOKEN_B","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"3152:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3160:12:2","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":4197,"src":"3152:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":973,"nodeType":"ExpressionStatement","src":"3152:54:2"},{"expression":{"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":974,"name":"nodeStatusPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"3217:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_enum$_NodeStatus_$655_$","typeString":"mapping(bytes32 => enum NodeStatus)"}},"id":976,"indexExpression":{"id":975,"name":"_nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"3232:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3217:26:2","typeDescriptions":{"typeIdentifier":"t_enum$_NodeStatus_$655","typeString":"enum NodeStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":977,"name":"NodeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"3246:10:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_NodeStatus_$655_$","typeString":"type(enum NodeStatus)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3257:9:2","memberName":"NULLIFIED","nodeType":"MemberAccess","referencedDeclaration":654,"src":"3246:20:2","typeDescriptions":{"typeIdentifier":"t_enum$_NodeStatus_$655","typeString":"enum NodeStatus"}},"src":"3217:49:2","typeDescriptions":{"typeIdentifier":"t_enum$_NodeStatus_$655","typeString":"enum NodeStatus"}},"id":980,"nodeType":"ExpressionStatement","src":"3217:49:2"}]},"functionSelector":"c4b5239f","id":982,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2417:8:2","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"_nullifier","nameLocation":"2443:10:2","nodeType":"VariableDeclaration","scope":982,"src":"2435:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2435:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"_balanceA","nameLocation":"2471:9:2","nodeType":"VariableDeclaration","scope":982,"src":"2463:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"_balanceB","nameLocation":"2498:9:2","nodeType":"VariableDeclaration","scope":982,"src":"2490:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2490:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"_vault","nameLocation":"2525:6:2","nodeType":"VariableDeclaration","scope":982,"src":"2517:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"2517:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"_proof","nameLocation":"2556:6:2","nodeType":"VariableDeclaration","scope":982,"src":"2541:21:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":876,"name":"bytes","nodeType":"ElementaryTypeName","src":"2541:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2425:143:2"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[],"src":"2576:0:2"},"scope":1157,"src":"2408:865:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1067,"nodeType":"Block","src":"3411:554:2","statements":[{"assignments":[997],"declarations":[{"constant":false,"id":997,"mutability":"mutable","name":"_publicInputs","nameLocation":"3439:13:2","nodeType":"VariableDeclaration","scope":1067,"src":"3421:31:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4]"},"typeName":{"baseType":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"3421:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":996,"length":{"hexValue":"34","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"3421:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_storage_ptr","typeString":"uint256[4]"}},"visibility":"internal"}],"id":998,"nodeType":"VariableDeclarationStatement","src":"3421:31:2"},{"expression":{"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":999,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"3462:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":1001,"indexExpression":{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3476:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3462:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1004,"name":"MerkleTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"3489:10:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleTree_$629_$","typeString":"type(contract MerkleTree)"}},"id":1005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3500:4:2","memberName":"root","nodeType":"MemberAccess","referencedDeclaration":80,"src":"3489:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3481:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3481:7:2","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3462:43:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1008,"nodeType":"ExpressionStatement","src":"3462:43:2"},{"expression":{"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1009,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"3515:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":1011,"indexExpression":{"hexValue":"31","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3529:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3515:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1014,"name":"_nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3542:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3534:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"3534:7:2","typeDescriptions":{}}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3515:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"nodeType":"ExpressionStatement","src":"3515:38:2"},{"expression":{"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1018,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"3563:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":1020,"indexExpression":{"hexValue":"32","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3577:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3563:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1021,"name":"modelInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"3582:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_ModelInput_$651_storage","typeString":"struct ModelInput storage ref"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3593:14:2","memberName":"chainlinkPrice","nodeType":"MemberAccess","referencedDeclaration":650,"src":"3582:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3563:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1024,"nodeType":"ExpressionStatement","src":"3563:44:2"},{"expression":{"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1025,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"3617:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":1027,"indexExpression":{"hexValue":"33","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3631:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3617:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1034,"name":"modelOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3669:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_ModelOutput_$648_calldata_ptr","typeString":"struct ModelOutput calldata"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3681:9:2","memberName":"direction","nodeType":"MemberAccess","referencedDeclaration":645,"src":"3669:21:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":1036,"name":"modelOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3692:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_ModelOutput_$648_calldata_ptr","typeString":"struct ModelOutput calldata"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3704:6:2","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":647,"src":"3692:18:2","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint248","typeString":"uint248"}],"expression":{"id":1032,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3652:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3656:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"3652:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3644:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3644:7:2","typeDescriptions":{}}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3644:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3636:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"3636:7:2","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3617:96:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1042,"nodeType":"ExpressionStatement","src":"3617:96:2"},{"expression":{"arguments":[{"arguments":[{"id":1046,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"3764:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},{"id":1047,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"3779:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1044,"name":"swapVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"3744:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapVerifier_$37","typeString":"contract ISwapVerifier"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3757:6:2","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":36,"src":"3744:19:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_uint256_$4_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[4] memory,bytes memory) view external returns (bool)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3744:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170205665726966696572206661696c6564","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3800:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6","typeString":"literal_string \"Swap Verifier failed\""},"value":"Swap Verifier failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6","typeString":"literal_string \"Swap Verifier failed\""}],"id":1043,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3723:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3723:109:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"ExpressionStatement","src":"3723:109:2"},{"expression":{"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1052,"name":"transactionResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"3843:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TxResult_$662_storage_$","typeString":"mapping(bytes32 => struct TxResult storage ref)"}},"id":1054,"indexExpression":{"id":1053,"name":"_nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3862:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3843:30:2","typeDescriptions":{"typeIdentifier":"t_struct$_TxResult_$662_storage","typeString":"struct TxResult storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1056,"name":"modelOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3886:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_ModelOutput_$648_calldata_ptr","typeString":"struct ModelOutput calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ModelOutput_$648_calldata_ptr","typeString":"struct ModelOutput calldata"}],"id":1055,"name":"_transact","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"3876:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ModelOutput_$648_calldata_ptr_$returns$_t_struct$_TxResult_$662_memory_ptr_$","typeString":"function (struct ModelOutput calldata) pure returns (struct TxResult memory)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3876:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TxResult_$662_memory_ptr","typeString":"struct TxResult memory"}},"src":"3843:55:2","typeDescriptions":{"typeIdentifier":"t_struct$_TxResult_$662_storage","typeString":"struct TxResult storage ref"}},"id":1059,"nodeType":"ExpressionStatement","src":"3843:55:2"},{"expression":{"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1060,"name":"nodeStatusPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"3908:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_enum$_NodeStatus_$655_$","typeString":"mapping(bytes32 => enum NodeStatus)"}},"id":1062,"indexExpression":{"id":1061,"name":"_nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3923:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3908:26:2","typeDescriptions":{"typeIdentifier":"t_enum$_NodeStatus_$655","typeString":"enum NodeStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1063,"name":"NodeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"3937:10:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_NodeStatus_$655_$","typeString":"type(enum NodeStatus)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3948:10:2","memberName":"TRANSACTED","nodeType":"MemberAccess","referencedDeclaration":653,"src":"3937:21:2","typeDescriptions":{"typeIdentifier":"t_enum$_NodeStatus_$655","typeString":"enum NodeStatus"}},"src":"3908:50:2","typeDescriptions":{"typeIdentifier":"t_enum$_NodeStatus_$655","typeString":"enum NodeStatus"}},"id":1066,"nodeType":"ExpressionStatement","src":"3908:50:2"}]},"functionSelector":"5c758f8e","id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"transact","nameLocation":"3288:8:2","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"_nullifier","nameLocation":"3314:10:2","nodeType":"VariableDeclaration","scope":1068,"src":"3306:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3306:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"modelOutput","nameLocation":"3355:11:2","nodeType":"VariableDeclaration","scope":1068,"src":"3334:32:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ModelOutput_$648_calldata_ptr","typeString":"struct ModelOutput"},"typeName":{"id":986,"nodeType":"UserDefinedTypeName","pathNode":{"id":985,"name":"ModelOutput","nameLocations":["3334:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":648,"src":"3334:11:2"},"referencedDeclaration":648,"src":"3334:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_ModelOutput_$648_storage_ptr","typeString":"struct ModelOutput"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"_proof","nameLocation":"3391:6:2","nodeType":"VariableDeclaration","scope":1068,"src":"3376:21:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":988,"name":"bytes","nodeType":"ElementaryTypeName","src":"3376:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3296:107:2"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[],"src":"3411:0:2"},"scope":1157,"src":"3279:686:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1139,"nodeType":"Block","src":"4086:472:2","statements":[{"assignments":[1082],"declarations":[{"constant":false,"id":1082,"mutability":"mutable","name":"_publicInputs","nameLocation":"4114:13:2","nodeType":"VariableDeclaration","scope":1139,"src":"4096:31:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1081,"length":{"hexValue":"33","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4104:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"4096:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":1083,"nodeType":"VariableDeclarationStatement","src":"4096:31:2"},{"expression":{"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1084,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"4137:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":1086,"indexExpression":{"hexValue":"30","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4151:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4137:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1089,"name":"MerkleTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4164:10:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleTree_$629_$","typeString":"type(contract MerkleTree)"}},"id":1090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4175:4:2","memberName":"root","nodeType":"MemberAccess","referencedDeclaration":80,"src":"4164:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4156:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"4156:7:2","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4156:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4137:43:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1093,"nodeType":"ExpressionStatement","src":"4137:43:2"},{"expression":{"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1094,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"4190:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":1096,"indexExpression":{"hexValue":"31","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4204:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4190:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1099,"name":"_nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4217:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4209:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4209:7:2","typeDescriptions":{}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4209:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4190:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1102,"nodeType":"ExpressionStatement","src":"4190:38:2"},{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1103,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"4238:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":1105,"indexExpression":{"hexValue":"32","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4252:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4238:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1108,"name":"_cNode2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4265:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4257:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"4257:7:2","typeDescriptions":{}}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4238:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"4238:35:2"},{"expression":{"arguments":[{"arguments":[{"id":1115,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"4328:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},{"id":1116,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"4343:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1113,"name":"finalizeVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4304:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_IFinalizeVerifier_$49","typeString":"contract IFinalizeVerifier"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4321:6:2","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":48,"src":"4304:23:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_uint256_$3_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[3] memory,bytes memory) view external returns (bool)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"66696e616c697a653a20766572696679206661696c6564","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4364:25:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9","typeString":"literal_string \"finalize: verify failed\""},"value":"finalize: verify failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9","typeString":"literal_string \"finalize: verify failed\""}],"id":1112,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4283:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:116:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"ExpressionStatement","src":"4283:116:2"},{"expression":{"arguments":[{"id":1124,"name":"_cNode2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4437:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1121,"name":"MerkleTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4418:10:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleTree_$629_$","typeString":"type(contract MerkleTree)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4429:7:2","memberName":"_insert","nodeType":"MemberAccess","referencedDeclaration":327,"src":"4418:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint32_$","typeString":"function (bytes32) returns (uint32)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4418:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1126,"nodeType":"ExpressionStatement","src":"4418:27:2"},{"expression":{"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4455:37:2","subExpression":{"baseExpression":{"id":1127,"name":"transactionResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"4462:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TxResult_$662_storage_$","typeString":"mapping(bytes32 => struct TxResult storage ref)"}},"id":1129,"indexExpression":{"id":1128,"name":"_nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4481:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4462:30:2","typeDescriptions":{"typeIdentifier":"t_struct$_TxResult_$662_storage","typeString":"struct TxResult storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1131,"nodeType":"ExpressionStatement","src":"4455:37:2"},{"expression":{"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1132,"name":"nodeStatusPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"4502:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_enum$_NodeStatus_$655_$","typeString":"mapping(bytes32 => enum NodeStatus)"}},"id":1134,"indexExpression":{"id":1133,"name":"_nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4517:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4502:26:2","typeDescriptions":{"typeIdentifier":"t_enum$_NodeStatus_$655","typeString":"enum NodeStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1135,"name":"NodeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"4531:10:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_NodeStatus_$655_$","typeString":"type(enum NodeStatus)"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4542:9:2","memberName":"NULLIFIED","nodeType":"MemberAccess","referencedDeclaration":654,"src":"4531:20:2","typeDescriptions":{"typeIdentifier":"t_enum$_NodeStatus_$655","typeString":"enum NodeStatus"}},"src":"4502:49:2","typeDescriptions":{"typeIdentifier":"t_enum$_NodeStatus_$655","typeString":"enum NodeStatus"}},"id":1138,"nodeType":"ExpressionStatement","src":"4502:49:2"}]},"functionSelector":"aefb78d0","id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"finalize","nameLocation":"3980:8:2","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"_nullifier","nameLocation":"4006:10:2","nodeType":"VariableDeclaration","scope":1140,"src":"3998:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"_cNode2","nameLocation":"4034:7:2","nodeType":"VariableDeclaration","scope":1140,"src":"4026:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4026:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"_proof","nameLocation":"4066:6:2","nodeType":"VariableDeclaration","scope":1140,"src":"4051:21:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1073,"name":"bytes","nodeType":"ElementaryTypeName","src":"4051:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3988:90:2"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[],"src":"4086:0:2"},"scope":1157,"src":"3971:587:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1155,"nodeType":"Block","src":"4657:84:2","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4726:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4729:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4732:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1149,"name":"TxResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"4717:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TxResult_$662_storage_ptr_$","typeString":"type(struct TxResult storage pointer)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TxResult_$662_memory_ptr","typeString":"struct TxResult memory"}},"functionReturnParameters":1148,"id":1154,"nodeType":"Return","src":"4710:24:2"}]},"id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"_transact","nameLocation":"4573:9:2","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"_modelOutput","nameLocation":"4604:12:2","nodeType":"VariableDeclaration","scope":1156,"src":"4583:33:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ModelOutput_$648_calldata_ptr","typeString":"struct ModelOutput"},"typeName":{"id":1142,"nodeType":"UserDefinedTypeName","pathNode":{"id":1141,"name":"ModelOutput","nameLocations":["4583:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":648,"src":"4583:11:2"},"referencedDeclaration":648,"src":"4583:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_ModelOutput_$648_storage_ptr","typeString":"struct ModelOutput"}},"visibility":"internal"}],"src":"4582:35:2"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1156,"src":"4640:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TxResult_$662_memory_ptr","typeString":"struct TxResult"},"typeName":{"id":1146,"nodeType":"UserDefinedTypeName","pathNode":{"id":1145,"name":"TxResult","nameLocations":["4640:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":662,"src":"4640:8:2"},"referencedDeclaration":662,"src":"4640:8:2","typeDescriptions":{"typeIdentifier":"t_struct$_TxResult_$662_storage_ptr","typeString":"struct TxResult"}},"visibility":"internal"}],"src":"4639:17:2"},"scope":1157,"src":"4564:177:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1158,"src":"561:4182:2","usedErrors":[]}],"src":"32:4712:2"},"id":2},"contracts/Vault.sol":{"ast":{"absolutePath":"contracts/Vault.sol","exportedSymbols":{"ERC20":[4386],"IRelayer":[1204],"Owned":[3998],"Vault":[1464],"VaultState":[1208]},"id":1465,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1159,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"lib/solmate/src/tokens/ERC20.sol","file":"solmate/tokens/ERC20.sol","id":1161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1465,"sourceUnit":4387,"src":"57:47:3","symbolAliases":[{"foreign":{"id":1160,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"65:5:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/solmate/src/auth/Owned.sol","file":"solmate/auth/Owned.sol","id":1163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1465,"sourceUnit":3999,"src":"105:45:3","symbolAliases":[{"foreign":{"id":1162,"name":"Owned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"113:5:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IRelayer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1204,"linearizedBaseContracts":[1204],"name":"IRelayer","nameLocation":"162:8:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"61f6c033","id":1178,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"186:7:3","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"_cNode","nameLocation":"211:6:3","nodeType":"VariableDeclaration","scope":1178,"src":"203:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"203:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"_cModel","nameLocation":"235:7:3","nodeType":"VariableDeclaration","scope":1178,"src":"227:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"227:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"_balanceA","nameLocation":"260:9:3","nodeType":"VariableDeclaration","scope":1178,"src":"252:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"252:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"_balanceB","nameLocation":"287:9:3","nodeType":"VariableDeclaration","scope":1178,"src":"279:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"279:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"_proof","nameLocation":"321:6:3","nodeType":"VariableDeclaration","scope":1178,"src":"306:21:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1172,"name":"bytes","nodeType":"ElementaryTypeName","src":"306:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"193:140:3"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1178,"src":"352:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1175,"name":"uint32","nodeType":"ElementaryTypeName","src":"352:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"351:8:3"},"scope":1204,"src":"177:183:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c4b5239f","id":1191,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"375:8:3","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"_nullifier","nameLocation":"401:10:3","nodeType":"VariableDeclaration","scope":1191,"src":"393:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"393:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"_balanceA","nameLocation":"429:9:3","nodeType":"VariableDeclaration","scope":1191,"src":"421:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"_balanceB","nameLocation":"456:9:3","nodeType":"VariableDeclaration","scope":1191,"src":"448:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"_vault","nameLocation":"483:6:3","nodeType":"VariableDeclaration","scope":1191,"src":"475:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"_proof","nameLocation":"514:6:3","nodeType":"VariableDeclaration","scope":1191,"src":"499:21:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1187,"name":"bytes","nodeType":"ElementaryTypeName","src":"499:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"383:143:3"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"535:0:3"},"scope":1204,"src":"366:170:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ff709ee8","id":1197,"implemented":false,"kind":"function","modifiers":[],"name":"TOKEN_A","nameLocation":"551:7:3","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"558:2:3"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"579:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"},"typeName":{"id":1194,"nodeType":"UserDefinedTypeName","pathNode":{"id":1193,"name":"ERC20","nameLocations":["579:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":4386,"src":"579:5:3"},"referencedDeclaration":4386,"src":"579:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"visibility":"internal"}],"src":"578:7:3"},"scope":1204,"src":"542:44:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"499f712e","id":1203,"implemented":false,"kind":"function","modifiers":[],"name":"TOKEN_B","nameLocation":"600:7:3","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[],"src":"607:2:3"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1203,"src":"628:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"},"typeName":{"id":1200,"nodeType":"UserDefinedTypeName","pathNode":{"id":1199,"name":"ERC20","nameLocations":["628:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":4386,"src":"628:5:3"},"referencedDeclaration":4386,"src":"628:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"visibility":"internal"}],"src":"627:7:3"},"scope":1204,"src":"591:44:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1465,"src":"152:485:3","usedErrors":[]},{"canonicalName":"VaultState","id":1208,"members":[{"id":1205,"name":"DEPOSIT","nameLocation":"661:7:3","nodeType":"EnumValue","src":"661:7:3"},{"id":1206,"name":"WAITING","nameLocation":"674:7:3","nodeType":"EnumValue","src":"674:7:3"},{"id":1207,"name":"WITHDRAW","nameLocation":"687:8:3","nodeType":"EnumValue","src":"687:8:3"}],"name":"VaultState","nameLocation":"644:10:3","nodeType":"EnumDefinition","src":"639:58:3"},{"abstract":false,"baseContracts":[{"baseName":{"id":1209,"name":"Owned","nameLocations":["717:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":3998,"src":"717:5:3"},"id":1210,"nodeType":"InheritanceSpecifier","src":"717:5:3"}],"canonicalName":"Vault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1464,"linearizedBaseContracts":[1464,3998],"name":"Vault","nameLocation":"708:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8406c079","id":1213,"mutability":"immutable","name":"relayer","nameLocation":"760:7:3","nodeType":"VariableDeclaration","scope":1464,"src":"734:33:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"},"typeName":{"id":1212,"nodeType":"UserDefinedTypeName","pathNode":{"id":1211,"name":"IRelayer","nameLocations":["734:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"734:8:3"},"referencedDeclaration":1204,"src":"734:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"visibility":"public"},{"constant":false,"functionSelector":"b2b4e62f","id":1215,"mutability":"mutable","name":"cModel","nameLocation":"788:6:3","nodeType":"VariableDeclaration","scope":1464,"src":"773:21:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"773:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"556a6d8a","id":1219,"mutability":"mutable","name":"userWeights","nameLocation":"835:11:3","nodeType":"VariableDeclaration","scope":1464,"src":"800:46:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1218,"keyType":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"808:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"800:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"926323d5","id":1221,"mutability":"mutable","name":"totalWeights","nameLocation":"867:12:3","nodeType":"VariableDeclaration","scope":1464,"src":"852:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"91daa902","id":1223,"mutability":"mutable","name":"afterBalance","nameLocation":"900:12:3","nodeType":"VariableDeclaration","scope":1464,"src":"885:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c19d93fb","id":1226,"mutability":"mutable","name":"state","nameLocation":"936:5:3","nodeType":"VariableDeclaration","scope":1464,"src":"918:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"},"typeName":{"id":1225,"nodeType":"UserDefinedTypeName","pathNode":{"id":1224,"name":"VaultState","nameLocations":["918:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1208,"src":"918:10:3"},"referencedDeclaration":1208,"src":"918:10:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}},"visibility":"public"},{"body":{"id":1279,"nodeType":"Block","src":"1058:205:3","statements":[{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1239,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1068:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1240,"name":"_relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"1078:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"src":"1068:18:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"id":1242,"nodeType":"ExpressionStatement","src":"1068:18:3"},{"expression":{"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1243,"name":"cModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"1096:6:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1244,"name":"_cModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"1105:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1096:16:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1246,"nodeType":"ExpressionStatement","src":"1096:16:3"},{"expression":{"arguments":[{"arguments":[{"id":1254,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1156:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}],"id":1253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1148:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:3","typeDescriptions":{}}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1148:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":1258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1171:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1171:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1166:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1166:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1180:3:3","memberName":"max","nodeType":"MemberAccess","src":"1166:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1247,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1122:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1130:7:3","memberName":"TOKEN_A","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"1122:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_contract$_ERC20_$4386_$","typeString":"function () external returns (contract ERC20)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1122:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1140:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":4103,"src":"1122:25:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1122:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1262,"nodeType":"ExpressionStatement","src":"1122:62:3"},{"expression":{"arguments":[{"arguments":[{"id":1270,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1228:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}],"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"1220:7:3","typeDescriptions":{}}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":1274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1243:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1243:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1272,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1238:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1238:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1252:3:3","memberName":"max","nodeType":"MemberAccess","src":"1238:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1263,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1194:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1202:7:3","memberName":"TOKEN_B","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"1194:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_contract$_ERC20_$4386_$","typeString":"function () external returns (contract ERC20)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1194:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1212:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":4103,"src":"1194:25:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1194:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1278,"nodeType":"ExpressionStatement","src":"1194:62:3"}]},"id":1280,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1236,"name":"_trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"1049:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1237,"kind":"baseConstructorSpecifier","modifierName":{"id":1235,"name":"Owned","nameLocations":["1043:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":3998,"src":"1043:5:3"},"nodeType":"ModifierInvocation","src":"1043:14:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"_relayer","nameLocation":"978:8:3","nodeType":"VariableDeclaration","scope":1280,"src":"969:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"},"typeName":{"id":1228,"nodeType":"UserDefinedTypeName","pathNode":{"id":1227,"name":"IRelayer","nameLocations":["969:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"969:8:3"},"referencedDeclaration":1204,"src":"969:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"_trader","nameLocation":"1004:7:3","nodeType":"VariableDeclaration","scope":1280,"src":"996:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"_cModel","nameLocation":"1029:7:3","nodeType":"VariableDeclaration","scope":1280,"src":"1021:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1021:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"959:83:3"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[],"src":"1058:0:3"},"scope":1464,"src":"948:315:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1293,"nodeType":"Block","src":"1310:75:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1286,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"1328:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1287,"name":"_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"1337:6:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}},"src":"1328:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964205661756c74207374617465","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1345:21:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d","typeString":"literal_string \"Invalid Vault state\""},"value":"Invalid Vault state"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d","typeString":"literal_string \"Invalid Vault state\""}],"id":1285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1320:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1320:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1291,"nodeType":"ExpressionStatement","src":"1320:47:3"},{"id":1292,"nodeType":"PlaceholderStatement","src":"1377:1:3"}]},"id":1294,"name":"requireState","nameLocation":"1278:12:3","nodeType":"ModifierDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"_state","nameLocation":"1302:6:3","nodeType":"VariableDeclaration","scope":1294,"src":"1291:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"},"typeName":{"id":1282,"nodeType":"UserDefinedTypeName","pathNode":{"id":1281,"name":"VaultState","nameLocations":["1291:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1208,"src":"1291:10:3"},"referencedDeclaration":1208,"src":"1291:10:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}},"visibility":"internal"}],"src":"1290:19:3"},"src":"1269:116:3","virtual":false,"visibility":"internal"},{"body":{"id":1328,"nodeType":"Block","src":"1468:157:3","statements":[{"expression":{"arguments":[{"expression":{"id":1308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1509:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1509:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1312,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1529:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}],"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1521:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:3","typeDescriptions":{}}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1521:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"1536:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1303,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1478:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1486:7:3","memberName":"TOKEN_A","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"1478:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_contract$_ERC20_$4386_$","typeString":"function () external returns (contract ERC20)"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1478:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1496:12:3","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":4197,"src":"1478:30:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1478:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1316,"nodeType":"ExpressionStatement","src":"1478:65:3"},{"expression":{"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1317,"name":"userWeights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1553:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1320,"indexExpression":{"expression":{"id":1318,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1565:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1569:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1565:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1553:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1321,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"1580:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1553:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1323,"nodeType":"ExpressionStatement","src":"1553:33:3"},{"expression":{"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1324,"name":"totalWeights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1596:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1325,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"1612:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1596:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1327,"nodeType":"ExpressionStatement","src":"1596:22:3"}]},"functionSelector":"f868e766","id":1329,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":1299,"name":"VaultState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"1448:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VaultState_$1208_$","typeString":"type(enum VaultState)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1459:7:3","memberName":"DEPOSIT","nodeType":"MemberAccess","referencedDeclaration":1205,"src":"1448:18:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}}],"id":1301,"kind":"modifierInvocation","modifierName":{"id":1298,"name":"requireState","nameLocations":["1435:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"1435:12:3"},"nodeType":"ModifierInvocation","src":"1435:32:3"}],"name":"userDeposit","nameLocation":"1400:11:3","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"amount","nameLocation":"1420:6:3","nodeType":"VariableDeclaration","scope":1329,"src":"1412:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1412:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1411:16:3"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"1468:0:3"},"scope":1464,"src":"1391:234:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1381,"nodeType":"Block","src":"1768:297:3","statements":[{"assignments":[1343],"declarations":[{"constant":false,"id":1343,"mutability":"mutable","name":"balanceA","nameLocation":"1829:8:3","nodeType":"VariableDeclaration","scope":1381,"src":"1821:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1353,"initialValue":{"arguments":[{"arguments":[{"id":1350,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1876:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}],"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1868:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"1868:7:3","typeDescriptions":{}}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1868:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1344,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1840:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1848:7:3","memberName":"TOKEN_A","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"1840:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_contract$_ERC20_$4386_$","typeString":"function () external returns (contract ERC20)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1840:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1858:9:3","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":4029,"src":"1840:27:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1840:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1821:61:3"},{"assignments":[1355],"declarations":[{"constant":false,"id":1355,"mutability":"mutable","name":"balanceB","nameLocation":"1900:8:3","nodeType":"VariableDeclaration","scope":1381,"src":"1892:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1892:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1365,"initialValue":{"arguments":[{"arguments":[{"id":1362,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1947:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1939:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:3","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1939:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1356,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1911:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1919:7:3","memberName":"TOKEN_B","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"1911:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_contract$_ERC20_$4386_$","typeString":"function () external returns (contract ERC20)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1911:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1929:9:3","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":4029,"src":"1911:27:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1911:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1892:61:3"},{"expression":{"arguments":[{"id":1369,"name":"_cNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"1979:6:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1370,"name":"cModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"1987:6:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1371,"name":"balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"1995:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1372,"name":"balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2005:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1373,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2015:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1366,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1963:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1971:7:3","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"1963:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint32_$","typeString":"function (bytes32,bytes32,uint256,uint256,bytes memory) external returns (uint32)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1375,"nodeType":"ExpressionStatement","src":"1963:59:3"},{"expression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1376,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"2032:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1377,"name":"VaultState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"2040:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VaultState_$1208_$","typeString":"type(enum VaultState)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2051:7:3","memberName":"WAITING","nodeType":"MemberAccess","referencedDeclaration":1206,"src":"2040:18:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}},"src":"2032:26:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}},"id":1380,"nodeType":"ExpressionStatement","src":"2032:26:3"}]},"functionSelector":"72a7fa5b","id":1382,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":1336,"name":"VaultState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"1738:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VaultState_$1208_$","typeString":"type(enum VaultState)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:7:3","memberName":"DEPOSIT","nodeType":"MemberAccess","referencedDeclaration":1205,"src":"1738:18:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}}],"id":1338,"kind":"modifierInvocation","modifierName":{"id":1335,"name":"requireState","nameLocations":["1725:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"1725:12:3"},"nodeType":"ModifierInvocation","src":"1725:32:3"},{"id":1340,"kind":"modifierInvocation","modifierName":{"id":1339,"name":"onlyOwner","nameLocations":["1758:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":3961,"src":"1758:9:3"},"nodeType":"ModifierInvocation","src":"1758:9:3"}],"name":"depositToRelayer","nameLocation":"1640:16:3","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"_cNode","nameLocation":"1674:6:3","nodeType":"VariableDeclaration","scope":1382,"src":"1666:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1666:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"_proof","nameLocation":"1705:6:3","nodeType":"VariableDeclaration","scope":1382,"src":"1690:21:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"1690:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1656:61:3"},"returnParameters":{"id":1341,"nodeType":"ParameterList","parameters":[],"src":"1768:0:3"},"scope":1464,"src":"1631:434:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1429,"nodeType":"Block","src":"2269:222:3","statements":[{"expression":{"arguments":[{"id":1402,"name":"_nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2296:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1403,"name":"_balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"2308:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1404,"name":"_balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"2319:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1407,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2338:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}],"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2330:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:3","typeDescriptions":{}}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1409,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"2345:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1399,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"2279:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2287:8:3","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"2279:16:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,uint256,uint256,address,bytes memory) external"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2279:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1411,"nodeType":"ExpressionStatement","src":"2279:73:3"},{"expression":{"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1412,"name":"afterBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"2390:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1419,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2441:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}],"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2433:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"2433:7:3","typeDescriptions":{}}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2433:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1413,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"2405:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2413:7:3","memberName":"TOKEN_A","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"2405:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_contract$_ERC20_$4386_$","typeString":"function () external returns (contract ERC20)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2405:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2423:9:3","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":4029,"src":"2405:27:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2405:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2390:57:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1423,"nodeType":"ExpressionStatement","src":"2390:57:3"},{"expression":{"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1424,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"2457:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1425,"name":"VaultState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"2465:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VaultState_$1208_$","typeString":"type(enum VaultState)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2476:8:3","memberName":"WITHDRAW","nodeType":"MemberAccess","referencedDeclaration":1207,"src":"2465:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}},"src":"2457:27:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}},"id":1428,"nodeType":"ExpressionStatement","src":"2457:27:3"}]},"functionSelector":"f4725af4","id":1430,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":1393,"name":"VaultState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"2239:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VaultState_$1208_$","typeString":"type(enum VaultState)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2250:7:3","memberName":"WAITING","nodeType":"MemberAccess","referencedDeclaration":1206,"src":"2239:18:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}}],"id":1395,"kind":"modifierInvocation","modifierName":{"id":1392,"name":"requireState","nameLocations":["2226:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"2226:12:3"},"nodeType":"ModifierInvocation","src":"2226:32:3"},{"id":1397,"kind":"modifierInvocation","modifierName":{"id":1396,"name":"onlyOwner","nameLocations":["2259:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":3961,"src":"2259:9:3"},"nodeType":"ModifierInvocation","src":"2259:9:3"}],"name":"withdrawFromRelayer","nameLocation":"2080:19:3","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"_nullifier","nameLocation":"2117:10:3","nodeType":"VariableDeclaration","scope":1430,"src":"2109:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2109:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"_balanceA","nameLocation":"2145:9:3","nodeType":"VariableDeclaration","scope":1430,"src":"2137:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"_balanceB","nameLocation":"2172:9:3","nodeType":"VariableDeclaration","scope":1430,"src":"2164:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"_proof","nameLocation":"2206:6:3","nodeType":"VariableDeclaration","scope":1430,"src":"2191:21:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1389,"name":"bytes","nodeType":"ElementaryTypeName","src":"2191:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2099:119:3"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[],"src":"2269:0:3"},"scope":1464,"src":"2071:420:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1462,"nodeType":"Block","src":"2572:153:3","statements":[{"assignments":[1440],"declarations":[{"constant":false,"id":1440,"mutability":"mutable","name":"amount","nameLocation":"2597:6:3","nodeType":"VariableDeclaration","scope":1462,"src":"2589:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1448,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"afterBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"2606:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"id":1442,"name":"userWeights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"2621:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1444,"indexExpression":{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"2633:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2621:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2606:30:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1446,"name":"totalWeights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"2639:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2606:45:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2589:62:3"},{"expression":{"arguments":[{"arguments":[{"id":1456,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2700:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$1464","typeString":"contract Vault"}],"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:3","typeDescriptions":{}}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1458,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"2707:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1459,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"2711:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1449,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"2661:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayer_$1204","typeString":"contract IRelayer"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2669:7:3","memberName":"TOKEN_A","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"2661:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_contract$_ERC20_$4386_$","typeString":"function () external returns (contract ERC20)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2661:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2679:12:3","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":4197,"src":"2661:30:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2661:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1461,"nodeType":"ExpressionStatement","src":"2661:57:3"}]},"functionSelector":"0542631b","id":1463,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":1435,"name":"VaultState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"2551:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VaultState_$1208_$","typeString":"type(enum VaultState)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2562:8:3","memberName":"WITHDRAW","nodeType":"MemberAccess","referencedDeclaration":1207,"src":"2551:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_VaultState_$1208","typeString":"enum VaultState"}}],"id":1437,"kind":"modifierInvocation","modifierName":{"id":1434,"name":"requireState","nameLocations":["2538:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"2538:12:3"},"nodeType":"ModifierInvocation","src":"2538:33:3"}],"name":"userWithdraw","nameLocation":"2506:12:3","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"to","nameLocation":"2527:2:3","nodeType":"VariableDeclaration","scope":1463,"src":"2519:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"2519:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2518:12:3"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[],"src":"2572:0:3"},"scope":1464,"src":"2497:228:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1465,"src":"699:2028:3","usedErrors":[]}],"src":"32:2695:3"},"id":3},"contracts/interfaces/I1nchRouter.sol":{"ast":{"absolutePath":"contracts/interfaces/I1nchRouter.sol","exportedSymbols":{"IAggregationExecutor":[1478],"IERC20":[3874],"IGenericRouter":[1513],"SafeERC20":[3293],"UniERC20":[3782]},"id":1514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1466,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:4"},{"absolutePath":"contracts/libraries/SafeERC20.sol","file":"../libraries/SafeERC20.sol","id":1468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1514,"sourceUnit":3294,"src":"58:53:4","symbolAliases":[{"foreign":{"id":1467,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"66:9:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/UniERC20.sol","file":"../libraries/UniERC20.sol","id":1471,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1514,"sourceUnit":3783,"src":"112:59:4","symbolAliases":[{"foreign":{"id":1469,"name":"UniERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"120:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1470,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"130:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregationExecutor","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1478,"linearizedBaseContracts":[1478],"name":"IAggregationExecutor","nameLocation":"184:20:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"212:89:4","text":"@notice propagates information about original msg.sender and executes arbitrary data "},"functionSelector":"4b64e492","id":1477,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"315:7:4","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"msgSender","nameLocation":"331:9:4","nodeType":"VariableDeclaration","scope":1477,"src":"323:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"323:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"322:19:4"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[],"src":"358:0:4"},"scope":1478,"src":"306:53:4","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1514,"src":"174:203:4","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IGenericRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1513,"linearizedBaseContracts":[1513],"name":"IGenericRouter","nameLocation":"389:14:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IGenericRouter.SwapDescription","id":1495,"members":[{"constant":false,"id":1481,"mutability":"mutable","name":"srcToken","nameLocation":"451:8:4","nodeType":"VariableDeclaration","scope":1495,"src":"444:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":1480,"nodeType":"UserDefinedTypeName","pathNode":{"id":1479,"name":"IERC20","nameLocations":["444:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"444:6:4"},"referencedDeclaration":3874,"src":"444:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"dstToken","nameLocation":"476:8:4","nodeType":"VariableDeclaration","scope":1495,"src":"469:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":1483,"nodeType":"UserDefinedTypeName","pathNode":{"id":1482,"name":"IERC20","nameLocations":["469:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"469:6:4"},"referencedDeclaration":3874,"src":"469:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"srcReceiver","nameLocation":"510:11:4","nodeType":"VariableDeclaration","scope":1495,"src":"494:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"494:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"dstReceiver","nameLocation":"547:11:4","nodeType":"VariableDeclaration","scope":1495,"src":"531:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"531:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"amount","nameLocation":"576:6:4","nodeType":"VariableDeclaration","scope":1495,"src":"568:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"568:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"minReturnAmount","nameLocation":"600:15:4","nodeType":"VariableDeclaration","scope":1495,"src":"592:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"flags","nameLocation":"633:5:4","nodeType":"VariableDeclaration","scope":1495,"src":"625:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SwapDescription","nameLocation":"418:15:4","nodeType":"StructDefinition","scope":1513,"src":"411:234:4","visibility":"public"},{"functionSelector":"12aa3caf","id":1512,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"664:4:4","nodeType":"FunctionDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"executor","nameLocation":"699:8:4","nodeType":"VariableDeclaration","scope":1512,"src":"678:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregationExecutor_$1478","typeString":"contract IAggregationExecutor"},"typeName":{"id":1497,"nodeType":"UserDefinedTypeName","pathNode":{"id":1496,"name":"IAggregationExecutor","nameLocations":["678:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":1478,"src":"678:20:4"},"referencedDeclaration":1478,"src":"678:20:4","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregationExecutor_$1478","typeString":"contract IAggregationExecutor"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"desc","nameLocation":"742:4:4","nodeType":"VariableDeclaration","scope":1512,"src":"717:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapDescription_$1495_calldata_ptr","typeString":"struct IGenericRouter.SwapDescription"},"typeName":{"id":1500,"nodeType":"UserDefinedTypeName","pathNode":{"id":1499,"name":"SwapDescription","nameLocations":["717:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":1495,"src":"717:15:4"},"referencedDeclaration":1495,"src":"717:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_SwapDescription_$1495_storage_ptr","typeString":"struct IGenericRouter.SwapDescription"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"permit","nameLocation":"771:6:4","nodeType":"VariableDeclaration","scope":1512,"src":"756:21:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1502,"name":"bytes","nodeType":"ElementaryTypeName","src":"756:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"data","nameLocation":"802:4:4","nodeType":"VariableDeclaration","scope":1512,"src":"787:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1504,"name":"bytes","nodeType":"ElementaryTypeName","src":"787:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"668:144:4"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"returnAmountm","nameLocation":"847:13:4","nodeType":"VariableDeclaration","scope":1512,"src":"839:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"spentAmount","nameLocation":"870:11:4","nodeType":"VariableDeclaration","scope":1512,"src":"862:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"838:44:4"},"scope":1513,"src":"655:228:4","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1514,"src":"379:506:4","usedErrors":[]}],"src":"33:852:4"},"id":4},"contracts/interfaces/ICreate3Deployer.sol":{"ast":{"absolutePath":"contracts/interfaces/ICreate3Deployer.sol","exportedSymbols":{"ICreate3Deployer":[1532]},"id":1533,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1515,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"ICreate3Deployer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1532,"linearizedBaseContracts":[1532],"name":"ICreate3Deployer","nameLocation":"68:16:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cdcb760a","id":1524,"implemented":false,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"100:6:5","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"salt","nameLocation":"115:4:5","nodeType":"VariableDeclaration","scope":1524,"src":"107:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"107:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"code","nameLocation":"136:4:5","nodeType":"VariableDeclaration","scope":1524,"src":"121:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1518,"name":"bytes","nodeType":"ElementaryTypeName","src":"121:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"106:35:5"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1524,"src":"160:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1521,"name":"address","nodeType":"ElementaryTypeName","src":"160:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"159:9:5"},"scope":1532,"src":"91:78:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bb34534c","id":1531,"implemented":false,"kind":"function","modifiers":[],"name":"addressOf","nameLocation":"183:9:5","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"salt","nameLocation":"201:4:5","nodeType":"VariableDeclaration","scope":1531,"src":"193:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"193:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"192:14:5"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"230:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"230:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"229:9:5"},"scope":1532,"src":"174:65:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1533,"src":"58:183:5","usedErrors":[]}],"src":"33:209:5"},"id":5},"contracts/interfaces/IDaiLikePermit.sol":{"ast":{"absolutePath":"contracts/interfaces/IDaiLikePermit.sol","exportedSymbols":{"IDaiLikePermit":[1554]},"id":1555,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1534,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IDaiLikePermit","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1554,"linearizedBaseContracts":[1554],"name":"IDaiLikePermit","nameLocation":"68:14:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8fcbaf0c","id":1553,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"98:6:6","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"holder","nameLocation":"122:6:6","nodeType":"VariableDeclaration","scope":1553,"src":"114:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"114:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1538,"mutability":"mutable","name":"spender","nameLocation":"146:7:6","nodeType":"VariableDeclaration","scope":1553,"src":"138:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"138:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"nonce","nameLocation":"171:5:6","nodeType":"VariableDeclaration","scope":1553,"src":"163:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"163:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1542,"mutability":"mutable","name":"expiry","nameLocation":"194:6:6","nodeType":"VariableDeclaration","scope":1553,"src":"186:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"186:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1544,"mutability":"mutable","name":"allowed","nameLocation":"215:7:6","nodeType":"VariableDeclaration","scope":1553,"src":"210:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1543,"name":"bool","nodeType":"ElementaryTypeName","src":"210:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"v","nameLocation":"238:1:6","nodeType":"VariableDeclaration","scope":1553,"src":"232:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1545,"name":"uint8","nodeType":"ElementaryTypeName","src":"232:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"r","nameLocation":"257:1:6","nodeType":"VariableDeclaration","scope":1553,"src":"249:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"249:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"s","nameLocation":"276:1:6","nodeType":"VariableDeclaration","scope":1553,"src":"268:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"268:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104:179:6"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[],"src":"292:0:6"},"scope":1554,"src":"89:204:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1555,"src":"58:237:6","usedErrors":[]}],"src":"33:263:6"},"id":6},"contracts/interfaces/IERC20MetadataUppercase.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC20MetadataUppercase.sol","exportedSymbols":{"IERC20MetadataUppercase":[1567]},"id":1568,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1556,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20MetadataUppercase","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1567,"linearizedBaseContracts":[1567],"name":"IERC20MetadataUppercase","nameLocation":"68:23:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a3f4df7e","id":1561,"implemented":false,"kind":"function","modifiers":[],"name":"NAME","nameLocation":"107:4:7","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[],"src":"111:2:7"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1561,"src":"137:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1558,"name":"string","nodeType":"ElementaryTypeName","src":"137:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"136:15:7"},"scope":1567,"src":"98:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f76f8d78","id":1566,"implemented":false,"kind":"function","modifiers":[],"name":"SYMBOL","nameLocation":"211:6:7","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"217:2:7"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"243:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1563,"name":"string","nodeType":"ElementaryTypeName","src":"243:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"242:15:7"},"scope":1567,"src":"202:56:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1568,"src":"58:246:7","usedErrors":[]}],"src":"33:272:7"},"id":7},"contracts/interfaces/IPermit2.sol":{"ast":{"absolutePath":"contracts/interfaces/IPermit2.sol","exportedSymbols":{"IPermit2":[1627]},"id":1628,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1569,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IPermit2","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1627,"linearizedBaseContracts":[1627],"name":"IPermit2","nameLocation":"68:8:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPermit2.PermitDetails","id":1578,"members":[{"constant":false,"id":1571,"mutability":"mutable","name":"token","nameLocation":"153:5:8","nodeType":"VariableDeclaration","scope":1578,"src":"145:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"145:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"amount","nameLocation":"223:6:8","nodeType":"VariableDeclaration","scope":1578,"src":"215:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1572,"name":"uint160","nodeType":"ElementaryTypeName","src":"215:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"expiration","nameLocation":"320:10:8","nodeType":"VariableDeclaration","scope":1578,"src":"313:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1574,"name":"uint48","nodeType":"ElementaryTypeName","src":"313:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1577,"mutability":"mutable","name":"nonce","nameLocation":"435:5:8","nodeType":"VariableDeclaration","scope":1578,"src":"428:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1576,"name":"uint48","nodeType":"ElementaryTypeName","src":"428:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"PermitDetails","nameLocation":"90:13:8","nodeType":"StructDefinition","scope":1627,"src":"83:364:8","visibility":"public"},{"canonicalName":"IPermit2.PermitSingle","id":1586,"members":[{"constant":false,"id":1581,"mutability":"mutable","name":"details","nameLocation":"620:7:8","nodeType":"VariableDeclaration","scope":1586,"src":"606:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1578_storage_ptr","typeString":"struct IPermit2.PermitDetails"},"typeName":{"id":1580,"nodeType":"UserDefinedTypeName","pathNode":{"id":1579,"name":"PermitDetails","nameLocations":["606:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1578,"src":"606:13:8"},"referencedDeclaration":1578,"src":"606:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1578_storage_ptr","typeString":"struct IPermit2.PermitDetails"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"spender","nameLocation":"699:7:8","nodeType":"VariableDeclaration","scope":1586,"src":"691:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1585,"mutability":"mutable","name":"sigDeadline","nameLocation":"768:11:8","nodeType":"VariableDeclaration","scope":1586,"src":"760:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"760:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitSingle","nameLocation":"529:12:8","nodeType":"StructDefinition","scope":1627,"src":"522:264:8","visibility":"public"},{"canonicalName":"IPermit2.PackedAllowance","id":1593,"members":[{"constant":false,"id":1588,"mutability":"mutable","name":"amount","nameLocation":"891:6:8","nodeType":"VariableDeclaration","scope":1593,"src":"883:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1587,"name":"uint160","nodeType":"ElementaryTypeName","src":"883:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"expiration","nameLocation":"943:10:8","nodeType":"VariableDeclaration","scope":1593,"src":"936:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1589,"name":"uint48","nodeType":"ElementaryTypeName","src":"936:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"nonce","nameLocation":"1058:5:8","nodeType":"VariableDeclaration","scope":1593,"src":"1051:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1591,"name":"uint48","nodeType":"ElementaryTypeName","src":"1051:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"PackedAllowance","nameLocation":"831:15:8","nodeType":"StructDefinition","scope":1627,"src":"824:246:8","visibility":"public"},{"functionSelector":"36c78516","id":1604,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1085:12:8","nodeType":"FunctionDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"user","nameLocation":"1106:4:8","nodeType":"VariableDeclaration","scope":1604,"src":"1098:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"1098:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"spender","nameLocation":"1120:7:8","nodeType":"VariableDeclaration","scope":1604,"src":"1112:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"amount","nameLocation":"1137:6:8","nodeType":"VariableDeclaration","scope":1604,"src":"1129:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1598,"name":"uint160","nodeType":"ElementaryTypeName","src":"1129:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"token","nameLocation":"1153:5:8","nodeType":"VariableDeclaration","scope":1604,"src":"1145:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1097:62:8"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[],"src":"1168:0:8"},"scope":1627,"src":"1076:93:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2b67b570","id":1614,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1184:6:8","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"owner","nameLocation":"1199:5:8","nodeType":"VariableDeclaration","scope":1614,"src":"1191:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"permitSingle","nameLocation":"1226:12:8","nodeType":"VariableDeclaration","scope":1614,"src":"1206:32:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1586_memory_ptr","typeString":"struct IPermit2.PermitSingle"},"typeName":{"id":1608,"nodeType":"UserDefinedTypeName","pathNode":{"id":1607,"name":"PermitSingle","nameLocations":["1206:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1586,"src":"1206:12:8"},"referencedDeclaration":1586,"src":"1206:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1586_storage_ptr","typeString":"struct IPermit2.PermitSingle"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"signature","nameLocation":"1255:9:8","nodeType":"VariableDeclaration","scope":1614,"src":"1240:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1610,"name":"bytes","nodeType":"ElementaryTypeName","src":"1240:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1190:75:8"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[],"src":"1274:0:8"},"scope":1627,"src":"1175:100:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"927da105","id":1626,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1290:9:8","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"user","nameLocation":"1308:4:8","nodeType":"VariableDeclaration","scope":1626,"src":"1300:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"token","nameLocation":"1322:5:8","nodeType":"VariableDeclaration","scope":1626,"src":"1314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"spender","nameLocation":"1337:7:8","nodeType":"VariableDeclaration","scope":1626,"src":"1329:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1619,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1299:46:8"},"returnParameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1626,"src":"1369:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1593_memory_ptr","typeString":"struct IPermit2.PackedAllowance"},"typeName":{"id":1623,"nodeType":"UserDefinedTypeName","pathNode":{"id":1622,"name":"PackedAllowance","nameLocations":["1369:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":1593,"src":"1369:15:8"},"referencedDeclaration":1593,"src":"1369:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1593_storage_ptr","typeString":"struct IPermit2.PackedAllowance"}},"visibility":"internal"}],"src":"1368:24:8"},"scope":1627,"src":"1281:112:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1628,"src":"58:1337:8","usedErrors":[]}],"src":"33:1363:8"},"id":8},"contracts/interfaces/IWETH.sol":{"ast":{"absolutePath":"contracts/interfaces/IWETH.sol","exportedSymbols":{"IERC20":[3874],"IWETH":[1653]},"id":1654,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1629,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":3875,"src":"58:56:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1631,"name":"IERC20","nameLocations":["135:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"135:6:9"},"id":1632,"nodeType":"InheritanceSpecifier","src":"135:6:9"}],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1653,"linearizedBaseContracts":[1653,3874],"name":"IWETH","nameLocation":"126:5:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c","id":1638,"name":"Deposit","nameLocation":"154:7:9","nodeType":"EventDefinition","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"indexed":true,"mutability":"mutable","name":"dst","nameLocation":"178:3:9","nodeType":"VariableDeclaration","scope":1638,"src":"162:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"162:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1636,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"188:3:9","nodeType":"VariableDeclaration","scope":1638,"src":"183:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint","nodeType":"ElementaryTypeName","src":"183:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"161:31:9"},"src":"148:45:9"},{"anonymous":false,"eventSelector":"7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65","id":1644,"name":"Withdrawal","nameLocation":"205:10:9","nodeType":"EventDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"indexed":true,"mutability":"mutable","name":"src","nameLocation":"232:3:9","nodeType":"VariableDeclaration","scope":1644,"src":"216:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1642,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"242:3:9","nodeType":"VariableDeclaration","scope":1644,"src":"237:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint","nodeType":"ElementaryTypeName","src":"237:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"215:31:9"},"src":"199:48:9"},{"functionSelector":"d0e30db0","id":1647,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"262:7:9","nodeType":"FunctionDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[],"src":"269:2:9"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[],"src":"288:0:9"},"scope":1653,"src":"253:36:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":1652,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"304:8:9","nodeType":"FunctionDefinition","parameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"amount","nameLocation":"321:6:9","nodeType":"VariableDeclaration","scope":1652,"src":"313:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"313:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"312:16:9"},"returnParameters":{"id":1651,"nodeType":"ParameterList","parameters":[],"src":"337:0:9"},"scope":1653,"src":"295:43:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1654,"src":"116:224:9","usedErrors":[]}],"src":"33:308:9"},"id":9},"contracts/libraries/AddressArray.sol":{"ast":{"absolutePath":"contracts/libraries/AddressArray.sol","exportedSymbols":{"AddressArray":[2032]},"id":2033,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1655,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressArray","contractDependencies":[],"contractKind":"library","documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"58:93:10","text":"@title Library that implements address array on mapping, stores array length at 0 index."},"fullyImplemented":true,"id":2032,"linearizedBaseContracts":[2032],"name":"AddressArray","nameLocation":"159:12:10","nodeType":"ContractDefinition","nodes":[{"errorSelector":"4e23d035","id":1658,"name":"IndexOutOfBounds","nameLocation":"184:16:10","nodeType":"ErrorDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[],"src":"200:2:10"},"src":"178:25:10"},{"errorSelector":"06a2af9e","id":1660,"name":"PopFromEmptyArray","nameLocation":"214:17:10","nodeType":"ErrorDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[],"src":"231:2:10"},"src":"208:26:10"},{"errorSelector":"f9a99b25","id":1662,"name":"OutputArrayTooSmall","nameLocation":"245:19:10","nodeType":"ErrorDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"264:2:10"},"src":"239:28:10"},{"canonicalName":"AddressArray.Data","id":1667,"members":[{"constant":false,"id":1666,"mutability":"mutable","name":"_raw","nameLocation":"372:4:10","nodeType":"VariableDeclaration","scope":1667,"src":"344:32:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1665,"keyType":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"352:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"344:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"363:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Data","nameLocation":"329:4:10","nodeType":"StructDefinition","scope":2032,"src":"322:61:10","visibility":"public"},{"body":{"id":1683,"nodeType":"Block","src":"486:43:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1676,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"503:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"508:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"503:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1679,"indexExpression":{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"503:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"519:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"503:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1675,"id":1682,"nodeType":"Return","src":"496:26:10"}]},"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"389:25:10","text":"@dev Length of array."},"id":1684,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"428:6:10","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"self","nameLocation":"448:4:10","nodeType":"VariableDeclaration","scope":1684,"src":"435:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":1670,"nodeType":"UserDefinedTypeName","pathNode":{"id":1669,"name":"Data","nameLocations":["435:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1667,"src":"435:4:10"},"referencedDeclaration":1667,"src":"435:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"}],"src":"434:19:10"},"returnParameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1684,"src":"477:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"476:9:10"},"scope":2032,"src":"419:110:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1706,"nodeType":"Block","src":"668:54:10","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":1699,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"701:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"706:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"701:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1702,"indexExpression":{"id":1701,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"711:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"701:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"693:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1697,"name":"uint160","nodeType":"ElementaryTypeName","src":"693:7:10","typeDescriptions":{}}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"693:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"685:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"685:7:10","typeDescriptions":{}}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"685:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1694,"id":1705,"nodeType":"Return","src":"678:37:10"}]},"documentation":{"id":1685,"nodeType":"StructuredDocumentation","src":"535:54:10","text":"@dev Returns data item from `self` storage at `i`."},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"603:2:10","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"self","nameLocation":"619:4:10","nodeType":"VariableDeclaration","scope":1707,"src":"606:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":1687,"nodeType":"UserDefinedTypeName","pathNode":{"id":1686,"name":"Data","nameLocations":["606:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1667,"src":"606:4:10"},"referencedDeclaration":1667,"src":"606:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"i","nameLocation":"633:1:10","nodeType":"VariableDeclaration","scope":1707,"src":"625:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"605:30:10"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1707,"src":"659:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"658:9:10"},"scope":2032,"src":"594:128:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1740,"nodeType":"Block","src":"865:147:10","statements":[{"assignments":[1718],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"lengthAndFirst","nameLocation":"883:14:10","nodeType":"VariableDeclaration","scope":1740,"src":"875:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1723,"initialValue":{"baseExpression":{"expression":{"id":1719,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"900:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"905:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"900:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1722,"indexExpression":{"hexValue":"30","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"910:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"900:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"875:37:10"},{"expression":{"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1724,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"922:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1728,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"942:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"960:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"942:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"928:13:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1726,"nodeType":"ArrayTypeName","src":"932:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"928:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"922:42:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1733,"nodeType":"ExpressionStatement","src":"922:42:10"},{"expression":{"arguments":[{"id":1735,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"979:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},{"id":1736,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"985:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1737,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"990:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1734,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"974:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$1667_storage_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,address[] memory,uint256) view returns (address[] memory)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"974:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1739,"nodeType":"ExpressionStatement","src":"974:31:10"}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"728:55:10","text":"@dev Returns list of addresses from storage `self`."},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"797:3:10","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"self","nameLocation":"814:4:10","nodeType":"VariableDeclaration","scope":1741,"src":"801:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":1710,"nodeType":"UserDefinedTypeName","pathNode":{"id":1709,"name":"Data","nameLocations":["801:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1667,"src":"801:4:10"},"referencedDeclaration":1667,"src":"801:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"}],"src":"800:19:10"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"arr","nameLocation":"860:3:10","nodeType":"VariableDeclaration","scope":1741,"src":"843:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1714,"nodeType":"ArrayTypeName","src":"843:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"842:22:10"},"scope":2032,"src":"788:224:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1763,"nodeType":"Block","src":"1193:56:10","statements":[{"expression":{"arguments":[{"id":1755,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"1215:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},{"id":1756,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"1221:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"baseExpression":{"expression":{"id":1757,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"1229:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1234:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"1229:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1760,"indexExpression":{"hexValue":"30","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1239:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1229:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"1210:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$1667_storage_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,address[] memory,uint256) view returns (address[] memory)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1210:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1753,"id":1762,"nodeType":"Return","src":"1203:39:10"}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"1018:72:10","text":"@dev Puts list of addresses from `self` storage into `output` array."},"id":1764,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"1104:3:10","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"self","nameLocation":"1121:4:10","nodeType":"VariableDeclaration","scope":1764,"src":"1108:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":1744,"nodeType":"UserDefinedTypeName","pathNode":{"id":1743,"name":"Data","nameLocations":["1108:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1667,"src":"1108:4:10"},"referencedDeclaration":1667,"src":"1108:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"output","nameLocation":"1144:6:10","nodeType":"VariableDeclaration","scope":1764,"src":"1127:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1746,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1747,"nodeType":"ArrayTypeName","src":"1127:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1107:44:10"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1764,"src":"1175:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"1175:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1751,"nodeType":"ArrayTypeName","src":"1175:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1174:18:10"},"scope":2032,"src":"1095:154:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1839,"nodeType":"Block","src":"1407:401:10","statements":[{"assignments":[1779],"declarations":[{"constant":false,"id":1779,"mutability":"mutable","name":"len","nameLocation":"1425:3:10","nodeType":"VariableDeclaration","scope":1839,"src":"1417:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1783,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1780,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"1431:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1449:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1431:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1417:35:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1784,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1466:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1785,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1472:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1479:6:10","memberName":"length","nodeType":"MemberAccess","src":"1472:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1466:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1791,"nodeType":"IfStatement","src":"1462:53:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1788,"name":"OutputArrayTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"1494:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1494:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1790,"nodeType":"RevertStatement","src":"1487:28:10"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1792,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1529:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1535:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1529:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1836,"nodeType":"IfStatement","src":"1525:254:10","trueBody":{"id":1835,"nodeType":"Block","src":"1538:241:10","statements":[{"expression":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1795,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1552:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1797,"indexExpression":{"hexValue":"30","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1559:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1552:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1802,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"1580:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1572:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1800,"name":"uint160","nodeType":"ElementaryTypeName","src":"1572:7:10","typeDescriptions":{}}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1572:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1564:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:10","typeDescriptions":{}}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1552:44:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1806,"nodeType":"ExpressionStatement","src":"1552:44:10"},{"id":1834,"nodeType":"UncheckedBlock","src":"1610:159:10","statements":[{"body":{"id":1832,"nodeType":"Block","src":"1672:83:10","statements":[{"expression":{"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1817,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1694:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1819,"indexExpression":{"id":1818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"1701:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1694:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":1824,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"1722:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1727:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"1722:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1827,"indexExpression":{"id":1826,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"1732:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1722:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1714:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1822,"name":"uint160","nodeType":"ElementaryTypeName","src":"1714:7:10","typeDescriptions":{}}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1714:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1706:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:10","typeDescriptions":{}}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1706:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1694:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1831,"nodeType":"ExpressionStatement","src":"1694:42:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"1658:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1812,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1662:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1658:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1833,"initializationExpression":{"assignments":[1808],"declarations":[{"constant":false,"id":1808,"mutability":"mutable","name":"i","nameLocation":"1651:1:10","nodeType":"VariableDeclaration","scope":1833,"src":"1643:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1810,"initialValue":{"hexValue":"31","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1655:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"1643:13:10"},"loopExpression":{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1667:3:10","subExpression":{"id":1814,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"1667:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"nodeType":"ExpressionStatement","src":"1667:3:10"},"nodeType":"ForStatement","src":"1638:117:10"}]}]}},{"expression":{"id":1837,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1795:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1777,"id":1838,"nodeType":"Return","src":"1788:13:10"}]},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"_get","nameLocation":"1264:4:10","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"self","nameLocation":"1291:4:10","nodeType":"VariableDeclaration","scope":1840,"src":"1278:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":1766,"nodeType":"UserDefinedTypeName","pathNode":{"id":1765,"name":"Data","nameLocations":["1278:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1667,"src":"1278:4:10"},"referencedDeclaration":1667,"src":"1278:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":1770,"mutability":"mutable","name":"output","nameLocation":"1322:6:10","nodeType":"VariableDeclaration","scope":1840,"src":"1305:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"1305:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1769,"nodeType":"ArrayTypeName","src":"1305:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"lengthAndFirst","nameLocation":"1346:14:10","nodeType":"VariableDeclaration","scope":1840,"src":"1338:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1338:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1268:98:10"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1840,"src":"1389:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"1389:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1775,"nodeType":"ArrayTypeName","src":"1389:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1388:18:10"},"scope":2032,"src":"1255:553:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1915,"nodeType":"Block","src":"1959:401:10","statements":[{"id":1914,"nodeType":"UncheckedBlock","src":"1969:385:10","statements":[{"assignments":[1852],"declarations":[{"constant":false,"id":1852,"mutability":"mutable","name":"lengthAndFirst","nameLocation":"2001:14:10","nodeType":"VariableDeclaration","scope":1914,"src":"1993:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1993:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1857,"initialValue":{"baseExpression":{"expression":{"id":1853,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"2018:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2023:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"2018:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1856,"indexExpression":{"hexValue":"30","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2028:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2018:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1993:37:10"},{"assignments":[1859],"declarations":[{"constant":false,"id":1859,"mutability":"mutable","name":"len","nameLocation":"2052:3:10","nodeType":"VariableDeclaration","scope":1914,"src":"2044:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2044:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1863,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1860,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"2058:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2076:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2058:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2044:35:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1864,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"2097:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2104:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2097:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1908,"nodeType":"Block","src":"2190:126:10","statements":[{"expression":{"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1884,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"2208:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2213:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"2208:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1888,"indexExpression":{"hexValue":"30","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2218:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2208:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1889,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"2223:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2246:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2241:8:10","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":1893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2240:10:10","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"src":"2223:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2208:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1896,"nodeType":"ExpressionStatement","src":"2208:42:10"},{"expression":{"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1897,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"2268:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2273:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"2268:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1901,"indexExpression":{"id":1899,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"2278:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2268:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1904,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"2293:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2285:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1902,"name":"uint160","nodeType":"ElementaryTypeName","src":"2285:7:10","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2285:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"2268:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1907,"nodeType":"ExpressionStatement","src":"2268:33:10"}]},"id":1909,"nodeType":"IfStatement","src":"2093:223:10","trueBody":{"id":1883,"nodeType":"Block","src":"2107:77:10","statements":[{"expression":{"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1867,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"2125:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2130:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"2125:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1871,"indexExpression":{"hexValue":"30","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2135:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2125:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint168","typeString":"uint168"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2146:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2141:8:10","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":1875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2140:10:10","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":1878,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"2161:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2153:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1876,"name":"uint160","nodeType":"ElementaryTypeName","src":"2153:7:10","typeDescriptions":{}}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2153:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"2140:29:10","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"2125:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1882,"nodeType":"ExpressionStatement","src":"2125:44:10"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"2336:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2342:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2336:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1850,"id":1913,"nodeType":"Return","src":"2329:14:10"}]}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"1814:63:10","text":"@dev Array push back `account` operation on storage `self`."},"id":1916,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1891:4:10","nodeType":"FunctionDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"self","nameLocation":"1909:4:10","nodeType":"VariableDeclaration","scope":1916,"src":"1896:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":1843,"nodeType":"UserDefinedTypeName","pathNode":{"id":1842,"name":"Data","nameLocations":["1896:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1667,"src":"1896:4:10"},"referencedDeclaration":1667,"src":"1896:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"account","nameLocation":"1923:7:10","nodeType":"VariableDeclaration","scope":1916,"src":"1915:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"1915:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1895:36:10"},"returnParameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1916,"src":"1950:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1950:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1949:9:10"},"scope":2032,"src":"1882:478:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1972,"nodeType":"Block","src":"2465:328:10","statements":[{"id":1971,"nodeType":"UncheckedBlock","src":"2475:312:10","statements":[{"assignments":[1924],"declarations":[{"constant":false,"id":1924,"mutability":"mutable","name":"lengthAndFirst","nameLocation":"2507:14:10","nodeType":"VariableDeclaration","scope":1971,"src":"2499:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1929,"initialValue":{"baseExpression":{"expression":{"id":1925,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2524:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2529:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"2524:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1928,"indexExpression":{"hexValue":"30","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2534:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2524:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2499:37:10"},{"assignments":[1931],"declarations":[{"constant":false,"id":1931,"mutability":"mutable","name":"len","nameLocation":"2558:3:10","nodeType":"VariableDeclaration","scope":1971,"src":"2550:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1935,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1932,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"2564:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2582:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2564:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:35:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1936,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"2603:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2610:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2603:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1942,"nodeType":"IfStatement","src":"2599:40:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1939,"name":"PopFromEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2620:17:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2620:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1941,"nodeType":"RevertStatement","src":"2613:26:10"}},{"expression":{"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1943,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2653:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2658:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"2653:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1949,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1945,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"2663:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2663:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2653:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2674:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2653:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1952,"nodeType":"ExpressionStatement","src":"2653:22:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"2693:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2693:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1970,"nodeType":"IfStatement","src":"2689:88:10","trueBody":{"id":1969,"nodeType":"Block","src":"2702:75:10","statements":[{"expression":{"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1956,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2720:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":1959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2725:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"2720:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1960,"indexExpression":{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2730:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2720:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1961,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"2735:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2753:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2758:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2753:8:10","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":1965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2752:10:10","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"src":"2735:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2720:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1968,"nodeType":"ExpressionStatement","src":"2720:42:10"}]}}]}]},"documentation":{"id":1917,"nodeType":"StructuredDocumentation","src":"2366:53:10","text":"@dev Array pop back operation for storage `self`."},"id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"pop","nameLocation":"2433:3:10","nodeType":"FunctionDefinition","parameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"self","nameLocation":"2450:4:10","nodeType":"VariableDeclaration","scope":1973,"src":"2437:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":1919,"nodeType":"UserDefinedTypeName","pathNode":{"id":1918,"name":"Data","nameLocations":["2437:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1667,"src":"2437:4:10"},"referencedDeclaration":1667,"src":"2437:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"}],"src":"2436:19:10"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[],"src":"2465:0:10"},"scope":2032,"src":"2424:369:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2030,"nodeType":"Block","src":"2971:259:10","statements":[{"assignments":[1985],"declarations":[{"constant":false,"id":1985,"mutability":"mutable","name":"len","nameLocation":"2989:3:10","nodeType":"VariableDeclaration","scope":2030,"src":"2981:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"2981:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1989,"initialValue":{"arguments":[{"id":1987,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"3002:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}],"id":1986,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2995:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$1667_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (uint256)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2981:26:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1990,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"3021:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1991,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3030:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3021:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1996,"nodeType":"IfStatement","src":"3017:43:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1993,"name":"IndexOutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"3042:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3042:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"RevertStatement","src":"3035:25:10"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1997,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"3075:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3084:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3075:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2028,"nodeType":"Block","src":"3164:60:10","statements":[{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2017,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"3178:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":2020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3183:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"3178:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2021,"indexExpression":{"id":2019,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"3188:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3178:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2024,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"3205:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3197:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2022,"name":"uint160","nodeType":"ElementaryTypeName","src":"3197:7:10","typeDescriptions":{}}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3197:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"3178:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2027,"nodeType":"ExpressionStatement","src":"3178:35:10"}]},"id":2029,"nodeType":"IfStatement","src":"3071:153:10","trueBody":{"id":2016,"nodeType":"Block","src":"3087:71:10","statements":[{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2000,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"3101:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":2003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3106:4:10","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"3101:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2004,"indexExpression":{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3111:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3101:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2005,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3117:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3124:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3117:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3116:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":2011,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"3139:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3131:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2009,"name":"uint160","nodeType":"ElementaryTypeName","src":"3131:7:10","typeDescriptions":{}}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3131:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"3116:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3101:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2015,"nodeType":"ExpressionStatement","src":"3101:46:10"}]}}]},"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"2799:64:10","text":"@dev Set element for storage `self` at `index` to `account`."},"id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"2877:3:10","nodeType":"FunctionDefinition","parameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"self","nameLocation":"2903:4:10","nodeType":"VariableDeclaration","scope":2031,"src":"2890:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":1976,"nodeType":"UserDefinedTypeName","pathNode":{"id":1975,"name":"Data","nameLocations":["2890:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1667,"src":"2890:4:10"},"referencedDeclaration":1667,"src":"2890:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":1979,"mutability":"mutable","name":"index","nameLocation":"2925:5:10","nodeType":"VariableDeclaration","scope":2031,"src":"2917:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"2917:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1981,"mutability":"mutable","name":"account","nameLocation":"2948:7:10","nodeType":"VariableDeclaration","scope":2031,"src":"2940:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1980,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2880:81:10"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[],"src":"2971:0:10"},"scope":2032,"src":"2868:362:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2033,"src":"151:3081:10","usedErrors":[1658,1660,1662]}],"src":"33:3200:10"},"id":10},"contracts/libraries/AddressLib.sol":{"ast":{"absolutePath":"contracts/libraries/AddressLib.sol","exportedSymbols":{"Address":[2036],"AddressLib":[2135]},"id":2136,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2034,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:11"},{"canonicalName":"Address","id":2036,"name":"Address","nameLocation":"63:7:11","nodeType":"UserDefinedValueTypeDefinition","src":"58:24:11","underlyingType":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"74:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"abstract":false,"baseContracts":[],"canonicalName":"AddressLib","contractDependencies":[],"contractKind":"library","documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"84:120:11","text":" @dev Library for working with addresses encoded as uint256 values, which can include flags in the highest bits."},"fullyImplemented":true,"id":2135,"linearizedBaseContracts":[2135],"name":"AddressLib","nameLocation":"213:10:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2045,"mutability":"constant","name":"_LOW_160_BIT_MASK","nameLocation":"255:17:11","nodeType":"VariableDeclaration","scope":2135,"src":"230:59:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"230:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"},"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"276:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"281:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"276:8:11","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":2042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"275:10:11","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"275:14:11","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"}},"visibility":"private"},{"body":{"id":2067,"nodeType":"Block","src":"561:79:11","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2060,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"609:1:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}],"expression":{"id":2058,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"594:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$2036_$","typeString":"type(Address)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"602:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"594:14:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$2036_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"594:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2062,"name":"_LOW_160_BIT_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"614:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"594:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"586:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2056,"name":"uint160","nodeType":"ElementaryTypeName","src":"586:7:11","typeDescriptions":{}}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"586:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"578:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2054,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:11","typeDescriptions":{}}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"578:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2053,"id":2066,"nodeType":"Return","src":"571:62:11"}]},"documentation":{"id":2046,"nodeType":"StructuredDocumentation","src":"296:204:11","text":" @notice Returns the address representation of a uint256.\n @param a The uint256 value to convert to an address.\n @return The address representation of the provided uint256 value."},"id":2068,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"514:3:11","nodeType":"FunctionDefinition","parameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"a","nameLocation":"526:1:11","nodeType":"VariableDeclaration","scope":2068,"src":"518:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"},"typeName":{"id":2048,"nodeType":"UserDefinedTypeName","pathNode":{"id":2047,"name":"Address","nameLocations":["518:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"518:7:11"},"referencedDeclaration":2036,"src":"518:7:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}},"visibility":"internal"}],"src":"517:11:11"},"returnParameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2068,"src":"552:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"551:9:11"},"scope":2135,"src":"505:135:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2089,"nodeType":"Block","src":"997:55:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"1030:1:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}],"expression":{"id":2079,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"1015:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$2036_$","typeString":"type(Address)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1023:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"1015:14:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$2036_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1015:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2083,"name":"flag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"1035:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1015:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1014:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1014:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2078,"id":2088,"nodeType":"Return","src":"1007:38:11"}]},"documentation":{"id":2069,"nodeType":"StructuredDocumentation","src":"646:275:11","text":" @notice Checks if a given flag is set for the provided address.\n @param a The address to check for the flag.\n @param flag The flag to check for in the provided address.\n @return True if the provided flag is set in the address, false otherwise."},"id":2090,"implemented":true,"kind":"function","modifiers":[],"name":"getFlag","nameLocation":"935:7:11","nodeType":"FunctionDefinition","parameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"a","nameLocation":"951:1:11","nodeType":"VariableDeclaration","scope":2090,"src":"943:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"},"typeName":{"id":2071,"nodeType":"UserDefinedTypeName","pathNode":{"id":2070,"name":"Address","nameLocations":["943:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"943:7:11"},"referencedDeclaration":2036,"src":"943:7:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"flag","nameLocation":"962:4:11","nodeType":"VariableDeclaration","scope":2090,"src":"954:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"954:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:25:11"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2090,"src":"991:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2076,"name":"bool","nodeType":"ElementaryTypeName","src":"991:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"990:6:11"},"scope":2135,"src":"926:126:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2111,"nodeType":"Block","src":"1454:59:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"1493:1:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}],"expression":{"id":2103,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"1478:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$2036_$","typeString":"type(Address)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"1478:14:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$2036_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1478:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2107,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1499:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1478:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1471:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2101,"name":"uint32","nodeType":"ElementaryTypeName","src":"1471:6:11","typeDescriptions":{}}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1471:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2100,"id":2110,"nodeType":"Return","src":"1464:42:11"}]},"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"1058:314:11","text":" @notice Returns a uint32 value stored at a specific bit offset in the provided address.\n @param a The address containing the uint32 value.\n @param offset The bit offset at which the uint32 value is stored.\n @return The uint32 value stored in the address at the specified bit offset."},"id":2112,"implemented":true,"kind":"function","modifiers":[],"name":"getUint32","nameLocation":"1386:9:11","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"a","nameLocation":"1404:1:11","nodeType":"VariableDeclaration","scope":2112,"src":"1396:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"},"typeName":{"id":2093,"nodeType":"UserDefinedTypeName","pathNode":{"id":2092,"name":"Address","nameLocations":["1396:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"1396:7:11"},"referencedDeclaration":2036,"src":"1396:7:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"offset","nameLocation":"1415:6:11","nodeType":"VariableDeclaration","scope":2112,"src":"1407:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1407:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1395:27:11"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2112,"src":"1446:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2098,"name":"uint32","nodeType":"ElementaryTypeName","src":"1446:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1445:8:11"},"scope":2135,"src":"1377:136:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2133,"nodeType":"Block","src":"1915:59:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2127,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"1954:1:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}],"expression":{"id":2125,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"1939:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$2036_$","typeString":"type(Address)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1947:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"1939:14:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$2036_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1939:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2129,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"1960:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1939:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1932:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2123,"name":"uint64","nodeType":"ElementaryTypeName","src":"1932:6:11","typeDescriptions":{}}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":2122,"id":2132,"nodeType":"Return","src":"1925:42:11"}]},"documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"1519:314:11","text":" @notice Returns a uint64 value stored at a specific bit offset in the provided address.\n @param a The address containing the uint64 value.\n @param offset The bit offset at which the uint64 value is stored.\n @return The uint64 value stored in the address at the specified bit offset."},"id":2134,"implemented":true,"kind":"function","modifiers":[],"name":"getUint64","nameLocation":"1847:9:11","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"a","nameLocation":"1865:1:11","nodeType":"VariableDeclaration","scope":2134,"src":"1857:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"},"typeName":{"id":2115,"nodeType":"UserDefinedTypeName","pathNode":{"id":2114,"name":"Address","nameLocations":["1857:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"1857:7:11"},"referencedDeclaration":2036,"src":"1857:7:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$2036","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"offset","nameLocation":"1876:6:11","nodeType":"VariableDeclaration","scope":2134,"src":"1868:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1868:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1856:27:11"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2134,"src":"1907:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2120,"name":"uint64","nodeType":"ElementaryTypeName","src":"1907:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1906:8:11"},"scope":2135,"src":"1838:136:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2136,"src":"205:1771:11","usedErrors":[]}],"src":"33:1944:11"},"id":11},"contracts/libraries/AddressSet.sol":{"ast":{"absolutePath":"contracts/libraries/AddressSet.sol","exportedSymbols":{"AddressArray":[2032],"AddressSet":[2322]},"id":2323,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2137,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:12"},{"absolutePath":"contracts/libraries/AddressArray.sol","file":"./AddressArray.sol","id":2138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2323,"sourceUnit":2033,"src":"58:28:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AddressSet","contractDependencies":[],"contractKind":"library","documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"88:171:12","text":"@title Library that is using AddressArray library for AddressArray.Data\n and allows Set operations on address storage data:\n 1. add\n 2. remove\n 3. contains"},"fullyImplemented":true,"id":2322,"linearizedBaseContracts":[2322],"name":"AddressSet","nameLocation":"268:10:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2143,"libraryName":{"id":2140,"name":"AddressArray","nameLocations":["291:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":2032,"src":"291:12:12"},"nodeType":"UsingForDirective","src":"285:41:12","typeName":{"id":2142,"nodeType":"UserDefinedTypeName","pathNode":{"id":2141,"name":"AddressArray.Data","nameLocations":["308:12:12","321:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":1667,"src":"308:17:12"},"referencedDeclaration":1667,"src":"308:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"}}},{"canonicalName":"AddressSet.Data","id":2151,"members":[{"constant":false,"id":2146,"mutability":"mutable","name":"items","nameLocation":"492:5:12","nodeType":"VariableDeclaration","scope":2151,"src":"474:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":2145,"nodeType":"UserDefinedTypeName","pathNode":{"id":2144,"name":"AddressArray.Data","nameLocations":["474:12:12","487:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":1667,"src":"474:17:12"},"referencedDeclaration":1667,"src":"474:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"lookup","nameLocation":"535:6:12","nodeType":"VariableDeclaration","scope":2151,"src":"507:34:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2149,"keyType":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"507:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Data","nameLocation":"459:4:12","nodeType":"StructDefinition","scope":2322,"src":"452:96:12","visibility":"public"},{"body":{"id":2165,"nodeType":"Block","src":"655:40:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2160,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"672:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"674:5:12","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"672:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage","typeString":"struct AddressArray.Data storage ref"}},"id":2162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"680:6:12","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1684,"src":"672:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$1667_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Data_$1667_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (uint256)"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2159,"id":2164,"nodeType":"Return","src":"665:23:12"}]},"documentation":{"id":2152,"nodeType":"StructuredDocumentation","src":"554:32:12","text":"@dev Length of data storage."},"id":2166,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"600:6:12","nodeType":"FunctionDefinition","parameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"s","nameLocation":"620:1:12","nodeType":"VariableDeclaration","scope":2166,"src":"607:14:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data"},"typeName":{"id":2154,"nodeType":"UserDefinedTypeName","pathNode":{"id":2153,"name":"Data","nameLocations":["607:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"607:4:12"},"referencedDeclaration":2151,"src":"607:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data"}},"visibility":"internal"}],"src":"606:16:12"},"returnParameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2166,"src":"646:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:12"},"scope":2322,"src":"591:104:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2183,"nodeType":"Block","src":"836:41:12","statements":[{"expression":{"arguments":[{"id":2180,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"864:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2177,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"853:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"855:5:12","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"853:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage","typeString":"struct AddressArray.Data storage ref"}},"id":2179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"861:2:12","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"853:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$1667_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_Data_$1667_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,uint256) view returns (address)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"853:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2176,"id":2182,"nodeType":"Return","src":"846:24:12"}]},"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"701:55:12","text":"@dev Returns data item from `s` storage at `index`."},"id":2184,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"770:2:12","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"s","nameLocation":"786:1:12","nodeType":"VariableDeclaration","scope":2184,"src":"773:14:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data"},"typeName":{"id":2169,"nodeType":"UserDefinedTypeName","pathNode":{"id":2168,"name":"Data","nameLocations":["773:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"773:4:12"},"referencedDeclaration":2151,"src":"773:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"index","nameLocation":"797:5:12","nodeType":"VariableDeclaration","scope":2184,"src":"789:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"789:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"772:31:12"},"returnParameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2184,"src":"827:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2174,"name":"address","nodeType":"ElementaryTypeName","src":"827:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"826:9:12"},"scope":2322,"src":"761:116:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2202,"nodeType":"Block","src":"1013:43:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2195,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"1030:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1032:6:12","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":2150,"src":"1030:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2198,"indexExpression":{"id":2197,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"1039:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1030:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1048:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1030:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2194,"id":2201,"nodeType":"Return","src":"1023:26:12"}]},"documentation":{"id":2185,"nodeType":"StructuredDocumentation","src":"883:48:12","text":"@dev Returns true if storage `s` has `item`."},"id":2203,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"945:8:12","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"s","nameLocation":"967:1:12","nodeType":"VariableDeclaration","scope":2203,"src":"954:14:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data"},"typeName":{"id":2187,"nodeType":"UserDefinedTypeName","pathNode":{"id":2186,"name":"Data","nameLocations":["954:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"954:4:12"},"referencedDeclaration":2151,"src":"954:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"item","nameLocation":"978:4:12","nodeType":"VariableDeclaration","scope":2203,"src":"970:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2189,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"953:30:12"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2203,"src":"1007:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2192,"name":"bool","nodeType":"ElementaryTypeName","src":"1007:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1006:6:12"},"scope":2322,"src":"936:120:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2238,"nodeType":"Block","src":"1203:143:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2214,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"1217:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1219:6:12","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":2150,"src":"1217:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2217,"indexExpression":{"id":2216,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"1226:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1217:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1234:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1217:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2223,"nodeType":"IfStatement","src":"1213:61:12","trueBody":{"id":2222,"nodeType":"Block","src":"1237:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1258:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2213,"id":2221,"nodeType":"Return","src":"1251:12:12"}]}},{"expression":{"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2224,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"1283:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1285:6:12","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":2150,"src":"1283:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2228,"indexExpression":{"id":2226,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"1292:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1283:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2232,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"1313:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":2229,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"1300:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1302:5:12","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"1300:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage","typeString":"struct AddressArray.Data storage ref"}},"id":2231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1308:4:12","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":1916,"src":"1300:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$1667_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_Data_$1667_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,address) returns (uint256)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1300:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1283:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2235,"nodeType":"ExpressionStatement","src":"1283:35:12"},{"expression":{"hexValue":"74727565","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1335:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2213,"id":2237,"nodeType":"Return","src":"1328:11:12"}]},"documentation":{"id":2204,"nodeType":"StructuredDocumentation","src":"1062:69:12","text":"@dev Adds `item` into storage `s` and returns true if successful."},"id":2239,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"1145:3:12","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"s","nameLocation":"1162:1:12","nodeType":"VariableDeclaration","scope":2239,"src":"1149:14:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data"},"typeName":{"id":2206,"nodeType":"UserDefinedTypeName","pathNode":{"id":2205,"name":"Data","nameLocations":["1149:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"1149:4:12"},"referencedDeclaration":2151,"src":"1149:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"item","nameLocation":"1173:4:12","nodeType":"VariableDeclaration","scope":2239,"src":"1165:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"1165:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1148:30:12"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2239,"src":"1197:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2211,"name":"bool","nodeType":"ElementaryTypeName","src":"1197:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1196:6:12"},"scope":2322,"src":"1136:210:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2320,"nodeType":"Block","src":"1499:435:12","statements":[{"assignments":[2251],"declarations":[{"constant":false,"id":2251,"mutability":"mutable","name":"index","nameLocation":"1517:5:12","nodeType":"VariableDeclaration","scope":2320,"src":"1509:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1509:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2256,"initialValue":{"baseExpression":{"expression":{"id":2252,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1525:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1527:6:12","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":2150,"src":"1525:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2255,"indexExpression":{"id":2254,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"1534:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1525:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1509:30:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2257,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"1553:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1562:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1553:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2263,"nodeType":"IfStatement","src":"1549:53:12","trueBody":{"id":2262,"nodeType":"Block","src":"1565:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1586:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2249,"id":2261,"nodeType":"Return","src":"1579:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"1615:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2265,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1623:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1625:5:12","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"1623:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage","typeString":"struct AddressArray.Data storage ref"}},"id":2267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1631:6:12","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1684,"src":"1623:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$1667_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Data_$1667_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (uint256)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1615:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2304,"nodeType":"IfStatement","src":"1611:242:12","trueBody":{"id":2303,"nodeType":"Block","src":"1641:212:12","statements":[{"id":2302,"nodeType":"UncheckedBlock","src":"1655:188:12","statements":[{"assignments":[2271],"declarations":[{"constant":false,"id":2271,"mutability":"mutable","name":"lastItem","nameLocation":"1691:8:12","nodeType":"VariableDeclaration","scope":2302,"src":"1683:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"1683:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2282,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2275,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1713:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1715:5:12","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"1713:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage","typeString":"struct AddressArray.Data storage ref"}},"id":2277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1721:6:12","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1684,"src":"1713:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$1667_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Data_$1667_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (uint256)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1732:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1713:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2272,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1702:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1704:5:12","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"1702:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage","typeString":"struct AddressArray.Data storage ref"}},"id":2274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1710:2:12","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"1702:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$1667_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_Data_$1667_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,uint256) view returns (address)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1702:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1683:51:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"1764:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1764:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2291,"name":"lastItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"1775:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":2283,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1752:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1754:5:12","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"1752:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage","typeString":"struct AddressArray.Data storage ref"}},"id":2287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1760:3:12","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"1752:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$1667_storage_ptr_$_t_uint256_$_t_address_$returns$__$bound_to$_t_struct$_Data_$1667_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,uint256,address)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2293,"nodeType":"ExpressionStatement","src":"1752:32:12"},{"expression":{"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2294,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1802:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1804:6:12","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":2150,"src":"1802:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2298,"indexExpression":{"id":2296,"name":"lastItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"1811:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1802:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2299,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"1823:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1802:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2301,"nodeType":"ExpressionStatement","src":"1802:26:12"}]}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2305,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1862:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1864:5:12","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"1862:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1667_storage","typeString":"struct AddressArray.Data storage ref"}},"id":2309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1870:3:12","memberName":"pop","nodeType":"MemberAccess","referencedDeclaration":1973,"src":"1862:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$1667_storage_ptr_$returns$__$bound_to$_t_struct$_Data_$1667_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2311,"nodeType":"ExpressionStatement","src":"1862:13:12"},{"expression":{"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1885:21:12","subExpression":{"baseExpression":{"expression":{"id":2312,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1892:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":2313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1894:6:12","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":2150,"src":"1892:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2315,"indexExpression":{"id":2314,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"1901:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1892:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"ExpressionStatement","src":"1885:21:12"},{"expression":{"hexValue":"74727565","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1923:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2249,"id":2319,"nodeType":"Return","src":"1916:11:12"}]},"documentation":{"id":2240,"nodeType":"StructuredDocumentation","src":"1352:72:12","text":"@dev Removes `item` from storage `s` and returns true if successful."},"id":2321,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"1438:6:12","nodeType":"FunctionDefinition","parameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"s","nameLocation":"1458:1:12","nodeType":"VariableDeclaration","scope":2321,"src":"1445:14:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data"},"typeName":{"id":2242,"nodeType":"UserDefinedTypeName","pathNode":{"id":2241,"name":"Data","nameLocations":["1445:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"1445:4:12"},"referencedDeclaration":2151,"src":"1445:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$2151_storage_ptr","typeString":"struct AddressSet.Data"}},"visibility":"internal"},{"constant":false,"id":2245,"mutability":"mutable","name":"item","nameLocation":"1469:4:12","nodeType":"VariableDeclaration","scope":2321,"src":"1461:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"1461:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1444:30:12"},"returnParameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2321,"src":"1493:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2247,"name":"bool","nodeType":"ElementaryTypeName","src":"1493:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1492:6:12"},"scope":2322,"src":"1429:505:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2323,"src":"260:1676:12","usedErrors":[]}],"src":"33:1904:12"},"id":12},"contracts/libraries/ECDSA.sol":{"ast":{"absolutePath":"contracts/libraries/ECDSA.sol","exportedSymbols":{"ECDSA":[2656],"IERC1271":[3796]},"id":2657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2324,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:13"},{"absolutePath":"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol","file":"@openzeppelin/contracts/interfaces/IERC1271.sol","id":2325,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2657,"sourceUnit":3797,"src":"58:57:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2656,"linearizedBaseContracts":[2656],"name":"ECDSA","nameLocation":"125:5:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2330,"mutability":"constant","name":"_S_BOUNDARY","nameLocation":"1000:11:13","nodeType":"VariableDeclaration","scope":2656,"src":"975:109:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747169_by_1","typeString":"int_const 5789...(69 digits omitted)...7169"},"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1014:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1083:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1014:70:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747169_by_1","typeString":"int_const 5789...(69 digits omitted)...7169"}},"visibility":"private"},{"constant":true,"id":2333,"mutability":"constant","name":"_COMPACT_S_MASK","nameLocation":"1115:15:13","nodeType":"VariableDeclaration","scope":2656,"src":"1090:109:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1090:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1133:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"private"},{"constant":true,"id":2336,"mutability":"constant","name":"_COMPACT_V_SHIFT","nameLocation":"1230:16:13","nodeType":"VariableDeclaration","scope":2656,"src":"1205:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323535","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1249:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"visibility":"private"},{"body":{"id":2350,"nodeType":"Block","src":"1398:473:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1433:432:13","statements":[{"body":{"nodeType":"YulBlock","src":"1512:343:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1530:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1547:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1541:5:13"},"nodeType":"YulFunctionCall","src":"1541:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1534:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1577:3:13"},{"name":"hash","nodeType":"YulIdentifier","src":"1582:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1570:6:13"},"nodeType":"YulFunctionCall","src":"1570:17:13"},"nodeType":"YulExpressionStatement","src":"1570:17:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1615:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1620:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1611:3:13"},"nodeType":"YulFunctionCall","src":"1611:14:13"},{"name":"v","nodeType":"YulIdentifier","src":"1627:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1604:6:13"},"nodeType":"YulFunctionCall","src":"1604:25:13"},"nodeType":"YulExpressionStatement","src":"1604:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1657:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1662:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1653:3:13"},"nodeType":"YulFunctionCall","src":"1653:14:13"},{"name":"r","nodeType":"YulIdentifier","src":"1669:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1646:6:13"},"nodeType":"YulFunctionCall","src":"1646:25:13"},"nodeType":"YulExpressionStatement","src":"1646:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1699:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1704:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1695:3:13"},"nodeType":"YulFunctionCall","src":"1695:14:13"},{"name":"s","nodeType":"YulIdentifier","src":"1711:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1688:6:13"},"nodeType":"YulFunctionCall","src":"1688:25:13"},"nodeType":"YulExpressionStatement","src":"1688:25:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1737:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1740:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1730:6:13"},"nodeType":"YulFunctionCall","src":"1730:12:13"},"nodeType":"YulExpressionStatement","src":"1730:12:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1774:3:13"},"nodeType":"YulFunctionCall","src":"1774:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1781:3:13","type":"","value":"0x1"},{"name":"ptr","nodeType":"YulIdentifier","src":"1786:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1791:4:13","type":"","value":"0x80"},{"kind":"number","nodeType":"YulLiteral","src":"1797:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1800:4:13","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"1763:10:13"},"nodeType":"YulFunctionCall","src":"1763:42:13"}],"functionName":{"name":"pop","nodeType":"YulIdentifier","src":"1759:3:13"},"nodeType":"YulFunctionCall","src":"1759:47:13"},"nodeType":"YulExpressionStatement","src":"1759:47:13"},{"nodeType":"YulAssignment","src":"1823:18:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1839:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1833:5:13"},"nodeType":"YulFunctionCall","src":"1833:8:13"},"variableNames":[{"name":"signer","nodeType":"YulIdentifier","src":"1823:6:13"}]}]},"condition":{"arguments":[{"name":"s","nodeType":"YulIdentifier","src":"1496:1:13"},{"name":"_S_BOUNDARY","nodeType":"YulIdentifier","src":"1499:11:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1493:2:13"},"nodeType":"YulFunctionCall","src":"1493:18:13"},"nodeType":"YulIf","src":"1490:365:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2330,"isOffset":false,"isSlot":false,"src":"1499:11:13","valueSize":1},{"declaration":2338,"isOffset":false,"isSlot":false,"src":"1582:4:13","valueSize":1},{"declaration":2342,"isOffset":false,"isSlot":false,"src":"1669:1:13","valueSize":1},{"declaration":2344,"isOffset":false,"isSlot":false,"src":"1496:1:13","valueSize":1},{"declaration":2344,"isOffset":false,"isSlot":false,"src":"1711:1:13","valueSize":1},{"declaration":2347,"isOffset":false,"isSlot":false,"src":"1823:6:13","valueSize":1},{"declaration":2340,"isOffset":false,"isSlot":false,"src":"1627:1:13","valueSize":1}],"flags":["memory-safe"],"id":2349,"nodeType":"InlineAssembly","src":"1408:457:13"}]},"id":2351,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"1268:7:13","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"hash","nameLocation":"1293:4:13","nodeType":"VariableDeclaration","scope":2351,"src":"1285:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1285:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"v","nameLocation":"1313:1:13","nodeType":"VariableDeclaration","scope":2351,"src":"1307:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2339,"name":"uint8","nodeType":"ElementaryTypeName","src":"1307:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"r","nameLocation":"1332:1:13","nodeType":"VariableDeclaration","scope":2351,"src":"1324:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1324:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"s","nameLocation":"1351:1:13","nodeType":"VariableDeclaration","scope":2351,"src":"1343:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1343:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1275:83:13"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"signer","nameLocation":"1390:6:13","nodeType":"VariableDeclaration","scope":2351,"src":"1382:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"1382:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1381:16:13"},"scope":2656,"src":"1259:612:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2363,"nodeType":"Block","src":"2000:552:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2035:511:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2092:33:13","value":{"arguments":[{"name":"vs","nodeType":"YulIdentifier","src":"2105:2:13"},{"name":"_COMPACT_S_MASK","nodeType":"YulIdentifier","src":"2109:15:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2101:3:13"},"nodeType":"YulFunctionCall","src":"2101:24:13"},"variables":[{"name":"s","nodeType":"YulTypedName","src":"2096:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2160:376:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2178:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2195:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2189:5:13"},"nodeType":"YulFunctionCall","src":"2189:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2182:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2225:3:13"},{"name":"hash","nodeType":"YulIdentifier","src":"2230:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2218:6:13"},"nodeType":"YulFunctionCall","src":"2218:17:13"},"nodeType":"YulExpressionStatement","src":"2218:17:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2263:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2268:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:13"},"nodeType":"YulFunctionCall","src":"2259:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2279:2:13","type":"","value":"27"},{"arguments":[{"name":"_COMPACT_V_SHIFT","nodeType":"YulIdentifier","src":"2287:16:13"},{"name":"vs","nodeType":"YulIdentifier","src":"2305:2:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2283:3:13"},"nodeType":"YulFunctionCall","src":"2283:25:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2275:3:13"},"nodeType":"YulFunctionCall","src":"2275:34:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2252:6:13"},"nodeType":"YulFunctionCall","src":"2252:58:13"},"nodeType":"YulExpressionStatement","src":"2252:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2338:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2343:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2334:3:13"},"nodeType":"YulFunctionCall","src":"2334:14:13"},{"name":"r","nodeType":"YulIdentifier","src":"2350:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2327:6:13"},"nodeType":"YulFunctionCall","src":"2327:25:13"},"nodeType":"YulExpressionStatement","src":"2327:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2380:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2385:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2376:3:13"},"nodeType":"YulFunctionCall","src":"2376:14:13"},{"name":"s","nodeType":"YulIdentifier","src":"2392:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2369:6:13"},"nodeType":"YulFunctionCall","src":"2369:25:13"},"nodeType":"YulExpressionStatement","src":"2369:25:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2418:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2421:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2411:6:13"},"nodeType":"YulFunctionCall","src":"2411:12:13"},"nodeType":"YulExpressionStatement","src":"2411:12:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"2455:3:13"},"nodeType":"YulFunctionCall","src":"2455:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2462:3:13","type":"","value":"0x1"},{"name":"ptr","nodeType":"YulIdentifier","src":"2467:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2472:4:13","type":"","value":"0x80"},{"kind":"number","nodeType":"YulLiteral","src":"2478:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2481:4:13","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"2444:10:13"},"nodeType":"YulFunctionCall","src":"2444:42:13"}],"functionName":{"name":"pop","nodeType":"YulIdentifier","src":"2440:3:13"},"nodeType":"YulFunctionCall","src":"2440:47:13"},"nodeType":"YulExpressionStatement","src":"2440:47:13"},{"nodeType":"YulAssignment","src":"2504:18:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2520:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2514:5:13"},"nodeType":"YulFunctionCall","src":"2514:8:13"},"variableNames":[{"name":"signer","nodeType":"YulIdentifier","src":"2504:6:13"}]}]},"condition":{"arguments":[{"name":"s","nodeType":"YulIdentifier","src":"2144:1:13"},{"name":"_S_BOUNDARY","nodeType":"YulIdentifier","src":"2147:11:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2141:2:13"},"nodeType":"YulFunctionCall","src":"2141:18:13"},"nodeType":"YulIf","src":"2138:398:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2333,"isOffset":false,"isSlot":false,"src":"2109:15:13","valueSize":1},{"declaration":2336,"isOffset":false,"isSlot":false,"src":"2287:16:13","valueSize":1},{"declaration":2330,"isOffset":false,"isSlot":false,"src":"2147:11:13","valueSize":1},{"declaration":2353,"isOffset":false,"isSlot":false,"src":"2230:4:13","valueSize":1},{"declaration":2355,"isOffset":false,"isSlot":false,"src":"2350:1:13","valueSize":1},{"declaration":2360,"isOffset":false,"isSlot":false,"src":"2504:6:13","valueSize":1},{"declaration":2357,"isOffset":false,"isSlot":false,"src":"2105:2:13","valueSize":1},{"declaration":2357,"isOffset":false,"isSlot":false,"src":"2305:2:13","valueSize":1}],"flags":["memory-safe"],"id":2362,"nodeType":"InlineAssembly","src":"2010:536:13"}]},"id":2364,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"1886:7:13","nodeType":"FunctionDefinition","parameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"hash","nameLocation":"1911:4:13","nodeType":"VariableDeclaration","scope":2364,"src":"1903:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1903:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2355,"mutability":"mutable","name":"r","nameLocation":"1933:1:13","nodeType":"VariableDeclaration","scope":2364,"src":"1925:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1925:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2357,"mutability":"mutable","name":"vs","nameLocation":"1952:2:13","nodeType":"VariableDeclaration","scope":2364,"src":"1944:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1944:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:67:13"},"returnParameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"signer","nameLocation":"1992:6:13","nodeType":"VariableDeclaration","scope":2364,"src":"1984:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2359,"name":"address","nodeType":"ElementaryTypeName","src":"1984:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1983:16:13"},"scope":2656,"src":"1877:675:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2375,"nodeType":"Block","src":"3248:1251:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3283:1210:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3340:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3357:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3351:5:13"},"nodeType":"YulFunctionCall","src":"3351:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3344:3:13","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3474:232:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3560:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3565:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3556:3:13"},"nodeType":"YulFunctionCall","src":"3556:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3577:1:13","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature.offset","nodeType":"YulIdentifier","src":"3597:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"3615:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3593:3:13"},"nodeType":"YulFunctionCall","src":"3593:27:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3580:12:13"},"nodeType":"YulFunctionCall","src":"3580:41:13"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"3572:4:13"},"nodeType":"YulFunctionCall","src":"3572:50:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3549:6:13"},"nodeType":"YulFunctionCall","src":"3549:74:13"},"nodeType":"YulExpressionStatement","src":"3549:74:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3657:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3662:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3653:3:13"},"nodeType":"YulFunctionCall","src":"3653:14:13"},{"name":"signature.offset","nodeType":"YulIdentifier","src":"3669:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"3687:4:13","type":"","value":"0x40"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3640:12:13"},"nodeType":"YulFunctionCall","src":"3640:52:13"},"nodeType":"YulExpressionStatement","src":"3640:52:13"}]},"nodeType":"YulCase","src":"3466:240:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3471:2:13","type":"","value":"65"}},{"body":{"nodeType":"YulBlock","src":"3727:349:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3802:51:13","value":{"arguments":[{"arguments":[{"name":"signature.offset","nodeType":"YulIdentifier","src":"3829:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"3847:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3825:3:13"},"nodeType":"YulFunctionCall","src":"3825:27:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3812:12:13"},"nodeType":"YulFunctionCall","src":"3812:41:13"},"variables":[{"name":"vs","nodeType":"YulTypedName","src":"3806:2:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3881:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3886:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3877:3:13"},"nodeType":"YulFunctionCall","src":"3877:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3897:2:13","type":"","value":"27"},{"arguments":[{"name":"_COMPACT_V_SHIFT","nodeType":"YulIdentifier","src":"3905:16:13"},{"name":"vs","nodeType":"YulIdentifier","src":"3923:2:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3901:3:13"},"nodeType":"YulFunctionCall","src":"3901:25:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3893:3:13"},"nodeType":"YulFunctionCall","src":"3893:34:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3870:6:13"},"nodeType":"YulFunctionCall","src":"3870:58:13"},"nodeType":"YulExpressionStatement","src":"3870:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3962:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3967:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3958:3:13"},"nodeType":"YulFunctionCall","src":"3958:14:13"},{"name":"signature.offset","nodeType":"YulIdentifier","src":"3974:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"3992:4:13","type":"","value":"0x20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3945:12:13"},"nodeType":"YulFunctionCall","src":"3945:52:13"},"nodeType":"YulExpressionStatement","src":"3945:52:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4025:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4030:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4021:3:13"},"nodeType":"YulFunctionCall","src":"4021:14:13"},{"arguments":[{"name":"vs","nodeType":"YulIdentifier","src":"4041:2:13"},{"name":"_COMPACT_S_MASK","nodeType":"YulIdentifier","src":"4045:15:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4037:3:13"},"nodeType":"YulFunctionCall","src":"4037:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4014:6:13"},"nodeType":"YulFunctionCall","src":"4014:48:13"},"nodeType":"YulExpressionStatement","src":"4014:48:13"}]},"nodeType":"YulCase","src":"3719:357:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3724:2:13","type":"","value":"64"}},{"body":{"nodeType":"YulBlock","src":"4097:40:13","statements":[{"nodeType":"YulAssignment","src":"4115:8:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4122:1:13","type":"","value":"0"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"4115:3:13"}]}]},"nodeType":"YulCase","src":"4089:48:13","value":"default"}],"expression":{"name":"signature.length","nodeType":"YulIdentifier","src":"3437:16:13"},"nodeType":"YulSwitch","src":"3430:707:13"},{"body":{"nodeType":"YulBlock","src":"4158:325:13","statements":[{"body":{"nodeType":"YulBlock","src":"4218:251:13","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4300:3:13"},{"name":"hash","nodeType":"YulIdentifier","src":"4305:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4293:6:13"},"nodeType":"YulFunctionCall","src":"4293:17:13"},"nodeType":"YulExpressionStatement","src":"4293:17:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4339:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4342:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4332:6:13"},"nodeType":"YulFunctionCall","src":"4332:12:13"},"nodeType":"YulExpressionStatement","src":"4332:12:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"4380:3:13"},"nodeType":"YulFunctionCall","src":"4380:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"4387:3:13","type":"","value":"0x1"},{"name":"ptr","nodeType":"YulIdentifier","src":"4392:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4397:4:13","type":"","value":"0x80"},{"kind":"number","nodeType":"YulLiteral","src":"4403:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4406:4:13","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4369:10:13"},"nodeType":"YulFunctionCall","src":"4369:42:13"}],"functionName":{"name":"pop","nodeType":"YulIdentifier","src":"4365:3:13"},"nodeType":"YulFunctionCall","src":"4365:47:13"},"nodeType":"YulExpressionStatement","src":"4365:47:13"},{"nodeType":"YulAssignment","src":"4433:18:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4449:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4443:5:13"},"nodeType":"YulFunctionCall","src":"4443:8:13"},"variableNames":[{"name":"signer","nodeType":"YulIdentifier","src":"4433:6:13"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4192:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4197:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4188:3:13"},"nodeType":"YulFunctionCall","src":"4188:14:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4182:5:13"},"nodeType":"YulFunctionCall","src":"4182:21:13"},{"name":"_S_BOUNDARY","nodeType":"YulIdentifier","src":"4205:11:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4179:2:13"},"nodeType":"YulFunctionCall","src":"4179:38:13"},"nodeType":"YulIf","src":"4176:293:13"}]},"condition":{"name":"ptr","nodeType":"YulIdentifier","src":"4154:3:13"},"nodeType":"YulIf","src":"4151:332:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2333,"isOffset":false,"isSlot":false,"src":"4045:15:13","valueSize":1},{"declaration":2336,"isOffset":false,"isSlot":false,"src":"3905:16:13","valueSize":1},{"declaration":2330,"isOffset":false,"isSlot":false,"src":"4205:11:13","valueSize":1},{"declaration":2367,"isOffset":false,"isSlot":false,"src":"4305:4:13","valueSize":1},{"declaration":2369,"isOffset":false,"isSlot":false,"src":"3437:16:13","suffix":"length","valueSize":1},{"declaration":2369,"isOffset":true,"isSlot":false,"src":"3597:16:13","suffix":"offset","valueSize":1},{"declaration":2369,"isOffset":true,"isSlot":false,"src":"3669:16:13","suffix":"offset","valueSize":1},{"declaration":2369,"isOffset":true,"isSlot":false,"src":"3829:16:13","suffix":"offset","valueSize":1},{"declaration":2369,"isOffset":true,"isSlot":false,"src":"3974:16:13","suffix":"offset","valueSize":1},{"declaration":2372,"isOffset":false,"isSlot":false,"src":"4433:6:13","valueSize":1}],"flags":["memory-safe"],"id":2374,"nodeType":"InlineAssembly","src":"3258:1235:13"}]},"documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"2558:589:13","text":"@dev WARNING!!!\n There is a known signature malleability issue with two representations of signatures!\n Even though this function is able to verify both standard 65-byte and compact 64-byte EIP-2098 signatures\n one should never use raw signatures for any kind of invalidation logic in their code.\n As the standard and compact representations are interchangeable any invalidation logic that relies on\n signature uniqueness will get rekt.\n More info: https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-4h98-2769-gh6h"},"id":2376,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3161:7:13","nodeType":"FunctionDefinition","parameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"hash","nameLocation":"3177:4:13","nodeType":"VariableDeclaration","scope":2376,"src":"3169:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3169:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"signature","nameLocation":"3198:9:13","nodeType":"VariableDeclaration","scope":2376,"src":"3183:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2368,"name":"bytes","nodeType":"ElementaryTypeName","src":"3183:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3168:40:13"},"returnParameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"signer","nameLocation":"3240:6:13","nodeType":"VariableDeclaration","scope":2376,"src":"3232:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2371,"name":"address","nodeType":"ElementaryTypeName","src":"3232:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3231:16:13"},"scope":2656,"src":"3152:1347:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2423,"nodeType":"Block","src":"4663:252:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"4677:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4695:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4687:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2388,"name":"address","nodeType":"ElementaryTypeName","src":"4687:7:13","typeDescriptions":{}}},"id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4687:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4677:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2395,"nodeType":"IfStatement","src":"4673:38:13","trueBody":{"expression":{"hexValue":"66616c7365","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4706:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2386,"id":2394,"nodeType":"Return","src":"4699:12:13"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2396,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"4726:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4736:6:13","memberName":"length","nodeType":"MemberAccess","src":"4726:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3634","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4726:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2400,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"4752:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:6:13","memberName":"length","nodeType":"MemberAccess","src":"4752:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4772:2:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"4752:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4725:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2407,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"4787:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2408,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"4793:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2406,"name":"recover","nodeType":"Identifier","overloadedDeclarations":[2351,2364,2376],"referencedDeclaration":2376,"src":"4779:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes calldata) view returns (address)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4779:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2410,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"4807:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4779:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4725:88:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2416,"nodeType":"IfStatement","src":"4721:130:13","trueBody":{"id":2415,"nodeType":"Block","src":"4815:36:13","statements":[{"expression":{"hexValue":"74727565","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4836:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2386,"id":2414,"nodeType":"Return","src":"4829:11:13"}]}},{"expression":{"arguments":[{"id":2418,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"4884:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2419,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"4892:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2420,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"4898:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2417,"name":"isValidSignature","nodeType":"Identifier","overloadedDeclarations":[2570,2593,2614],"referencedDeclaration":2570,"src":"4867:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes calldata) view returns (bool)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4867:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2386,"id":2422,"nodeType":"Return","src":"4860:48:13"}]},"id":2424,"implemented":true,"kind":"function","modifiers":[],"name":"recoverOrIsValidSignature","nameLocation":"4514:25:13","nodeType":"FunctionDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"signer","nameLocation":"4557:6:13","nodeType":"VariableDeclaration","scope":2424,"src":"4549:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"4549:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"hash","nameLocation":"4581:4:13","nodeType":"VariableDeclaration","scope":2424,"src":"4573:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4573:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"signature","nameLocation":"4610:9:13","nodeType":"VariableDeclaration","scope":2424,"src":"4595:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2381,"name":"bytes","nodeType":"ElementaryTypeName","src":"4595:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4539:86:13"},"returnParameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"success","nameLocation":"4654:7:13","nodeType":"VariableDeclaration","scope":2424,"src":"4649:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2384,"name":"bool","nodeType":"ElementaryTypeName","src":"4649:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4648:14:13"},"scope":2656,"src":"4505:410:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2468,"nodeType":"Block","src":"5100:194:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"5114:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5132:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5124:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"5124:7:13","typeDescriptions":{}}},"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5124:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5114:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2447,"nodeType":"IfStatement","src":"5110:38:13","trueBody":{"expression":{"hexValue":"66616c7365","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5143:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2438,"id":2446,"nodeType":"Return","src":"5136:12:13"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2449,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"5170:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2450,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"5176:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2451,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"5179:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2452,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"5182:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2448,"name":"recover","nodeType":"Identifier","overloadedDeclarations":[2351,2364,2376],"referencedDeclaration":2351,"src":"5162:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) view returns (address)"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5162:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2454,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"5188:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5162:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2459,"nodeType":"IfStatement","src":"5158:74:13","trueBody":{"id":2458,"nodeType":"Block","src":"5196:36:13","statements":[{"expression":{"hexValue":"74727565","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5217:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2438,"id":2457,"nodeType":"Return","src":"5210:11:13"}]}},{"expression":{"arguments":[{"id":2461,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"5265:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2462,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"5273:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2463,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"5279:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2464,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"5282:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2465,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"5285:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2460,"name":"isValidSignature","nodeType":"Identifier","overloadedDeclarations":[2570,2593,2614],"referencedDeclaration":2593,"src":"5248:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32,uint8,bytes32,bytes32) view returns (bool)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5248:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2438,"id":2467,"nodeType":"Return","src":"5241:46:13"}]},"id":2469,"implemented":true,"kind":"function","modifiers":[],"name":"recoverOrIsValidSignature","nameLocation":"4930:25:13","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"signer","nameLocation":"4973:6:13","nodeType":"VariableDeclaration","scope":2469,"src":"4965:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"4965:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"hash","nameLocation":"4997:4:13","nodeType":"VariableDeclaration","scope":2469,"src":"4989:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4989:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"v","nameLocation":"5017:1:13","nodeType":"VariableDeclaration","scope":2469,"src":"5011:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2429,"name":"uint8","nodeType":"ElementaryTypeName","src":"5011:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2432,"mutability":"mutable","name":"r","nameLocation":"5036:1:13","nodeType":"VariableDeclaration","scope":2469,"src":"5028:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5028:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"s","nameLocation":"5055:1:13","nodeType":"VariableDeclaration","scope":2469,"src":"5047:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5047:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4955:107:13"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"success","nameLocation":"5091:7:13","nodeType":"VariableDeclaration","scope":2469,"src":"5086:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2436,"name":"bool","nodeType":"ElementaryTypeName","src":"5086:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5085:14:13"},"scope":2656,"src":"4921:373:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2509,"nodeType":"Block","src":"5463:190:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5477:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5495:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5487:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2483,"name":"address","nodeType":"ElementaryTypeName","src":"5487:7:13","typeDescriptions":{}}},"id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5477:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2490,"nodeType":"IfStatement","src":"5473:38:13","trueBody":{"expression":{"hexValue":"66616c7365","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5506:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2481,"id":2489,"nodeType":"Return","src":"5499:12:13"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2492,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"5533:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2493,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"5539:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2494,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"5542:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2491,"name":"recover","nodeType":"Identifier","overloadedDeclarations":[2351,2364,2376],"referencedDeclaration":2364,"src":"5525:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,bytes32,bytes32) view returns (address)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5525:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2496,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5549:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5525:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2501,"nodeType":"IfStatement","src":"5521:72:13","trueBody":{"id":2500,"nodeType":"Block","src":"5557:36:13","statements":[{"expression":{"hexValue":"74727565","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5578:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2481,"id":2499,"nodeType":"Return","src":"5571:11:13"}]}},{"expression":{"arguments":[{"id":2503,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5626:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2504,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"5634:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2505,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"5640:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2506,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"5643:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2502,"name":"isValidSignature","nodeType":"Identifier","overloadedDeclarations":[2570,2593,2614],"referencedDeclaration":2614,"src":"5609:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes32,bytes32) view returns (bool)"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5609:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2481,"id":2508,"nodeType":"Return","src":"5602:44:13"}]},"id":2510,"implemented":true,"kind":"function","modifiers":[],"name":"recoverOrIsValidSignature","nameLocation":"5309:25:13","nodeType":"FunctionDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"signer","nameLocation":"5352:6:13","nodeType":"VariableDeclaration","scope":2510,"src":"5344:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2470,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"hash","nameLocation":"5376:4:13","nodeType":"VariableDeclaration","scope":2510,"src":"5368:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5368:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2475,"mutability":"mutable","name":"r","nameLocation":"5398:1:13","nodeType":"VariableDeclaration","scope":2510,"src":"5390:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5390:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"vs","nameLocation":"5417:2:13","nodeType":"VariableDeclaration","scope":2510,"src":"5409:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5409:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5334:91:13"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"success","nameLocation":"5454:7:13","nodeType":"VariableDeclaration","scope":2510,"src":"5449:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2479,"name":"bool","nodeType":"ElementaryTypeName","src":"5449:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5448:14:13"},"scope":2656,"src":"5300:353:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2550,"nodeType":"Block","src":"5824:192:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"5838:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5856:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5848:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2524,"name":"address","nodeType":"ElementaryTypeName","src":"5848:7:13","typeDescriptions":{}}},"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5848:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5838:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2531,"nodeType":"IfStatement","src":"5834:38:13","trueBody":{"expression":{"hexValue":"66616c7365","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5867:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2522,"id":2530,"nodeType":"Return","src":"5860:12:13"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2533,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"5894:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2534,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"5900:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2535,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"5903:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2532,"name":"recover","nodeType":"Identifier","overloadedDeclarations":[2351,2364,2376],"referencedDeclaration":2364,"src":"5886:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,bytes32,bytes32) view returns (address)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2537,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"5910:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5886:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2542,"nodeType":"IfStatement","src":"5882:72:13","trueBody":{"id":2541,"nodeType":"Block","src":"5918:36:13","statements":[{"expression":{"hexValue":"74727565","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5939:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2522,"id":2540,"nodeType":"Return","src":"5932:11:13"}]}},{"expression":{"arguments":[{"id":2544,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"5989:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2545,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"5997:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2546,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"6003:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2547,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"6006:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2543,"name":"isValidSignature65","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"5970:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes32,bytes32) view returns (bool)"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5970:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2522,"id":2549,"nodeType":"Return","src":"5963:46:13"}]},"id":2551,"implemented":true,"kind":"function","modifiers":[],"name":"recoverOrIsValidSignature65","nameLocation":"5668:27:13","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"signer","nameLocation":"5713:6:13","nodeType":"VariableDeclaration","scope":2551,"src":"5705:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"5705:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"hash","nameLocation":"5737:4:13","nodeType":"VariableDeclaration","scope":2551,"src":"5729:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5729:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2516,"mutability":"mutable","name":"r","nameLocation":"5759:1:13","nodeType":"VariableDeclaration","scope":2551,"src":"5751:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5751:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2518,"mutability":"mutable","name":"vs","nameLocation":"5778:2:13","nodeType":"VariableDeclaration","scope":2551,"src":"5770:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5770:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5695:91:13"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"success","nameLocation":"5815:7:13","nodeType":"VariableDeclaration","scope":2551,"src":"5810:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2520,"name":"bool","nodeType":"ElementaryTypeName","src":"5810:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5809:14:13"},"scope":2656,"src":"5659:357:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2569,"nodeType":"Block","src":"6171:880:13","statements":[{"assignments":[2563],"declarations":[{"constant":false,"id":2563,"mutability":"mutable","name":"selector","nameLocation":"6446:8:13","nodeType":"VariableDeclaration","scope":2569,"src":"6439:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2562,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6439:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":2567,"initialValue":{"expression":{"expression":{"id":2564,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"6457:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$3796_$","typeString":"type(contract IERC1271)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6466:16:13","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"6457:25:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6483:8:13","memberName":"selector","nodeType":"MemberAccess","src":"6457:34:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"6439:52:13"},{"AST":{"nodeType":"YulBlock","src":"6526:519:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6583:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6600:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6594:5:13"},"nodeType":"YulFunctionCall","src":"6594:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"6587:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6626:3:13"},{"name":"selector","nodeType":"YulIdentifier","src":"6631:8:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6619:6:13"},"nodeType":"YulFunctionCall","src":"6619:21:13"},"nodeType":"YulExpressionStatement","src":"6619:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6664:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"6669:4:13","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6660:3:13"},"nodeType":"YulFunctionCall","src":"6660:14:13"},{"name":"hash","nodeType":"YulIdentifier","src":"6676:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6653:6:13"},"nodeType":"YulFunctionCall","src":"6653:28:13"},"nodeType":"YulExpressionStatement","src":"6653:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6705:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"6710:4:13","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6701:3:13"},"nodeType":"YulFunctionCall","src":"6701:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"6717:4:13","type":"","value":"0x40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6694:6:13"},"nodeType":"YulFunctionCall","src":"6694:28:13"},"nodeType":"YulExpressionStatement","src":"6694:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6746:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"6751:4:13","type":"","value":"0x44"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6742:3:13"},"nodeType":"YulFunctionCall","src":"6742:14:13"},{"name":"signature.length","nodeType":"YulIdentifier","src":"6758:16:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6735:6:13"},"nodeType":"YulFunctionCall","src":"6735:40:13"},"nodeType":"YulExpressionStatement","src":"6735:40:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6805:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"6810:4:13","type":"","value":"0x64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6801:3:13"},"nodeType":"YulFunctionCall","src":"6801:14:13"},{"name":"signature.offset","nodeType":"YulIdentifier","src":"6817:16:13"},{"name":"signature.length","nodeType":"YulIdentifier","src":"6835:16:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6788:12:13"},"nodeType":"YulFunctionCall","src":"6788:64:13"},"nodeType":"YulExpressionStatement","src":"6788:64:13"},{"body":{"nodeType":"YulBlock","src":"6937:98:13","statements":[{"nodeType":"YulAssignment","src":"6955:66:13","value":{"arguments":[{"arguments":[{"name":"selector","nodeType":"YulIdentifier","src":"6973:8:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6989:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6983:5:13"},"nodeType":"YulFunctionCall","src":"6983:8:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6970:2:13"},"nodeType":"YulFunctionCall","src":"6970:22:13"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"6997:14:13"},"nodeType":"YulFunctionCall","src":"6997:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"7015:4:13","type":"","value":"0x20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6994:2:13"},"nodeType":"YulFunctionCall","src":"6994:26:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6966:3:13"},"nodeType":"YulFunctionCall","src":"6966:55:13"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"6955:7:13"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"6879:3:13"},"nodeType":"YulFunctionCall","src":"6879:5:13"},{"name":"signer","nodeType":"YulIdentifier","src":"6886:6:13"},{"name":"ptr","nodeType":"YulIdentifier","src":"6894:3:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6903:4:13","type":"","value":"0x64"},{"name":"signature.length","nodeType":"YulIdentifier","src":"6909:16:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6899:3:13"},"nodeType":"YulFunctionCall","src":"6899:27:13"},{"kind":"number","nodeType":"YulLiteral","src":"6928:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6931:4:13","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"6868:10:13"},"nodeType":"YulFunctionCall","src":"6868:68:13"},"nodeType":"YulIf","src":"6865:170:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2555,"isOffset":false,"isSlot":false,"src":"6676:4:13","valueSize":1},{"declaration":2563,"isOffset":false,"isSlot":false,"src":"6631:8:13","valueSize":1},{"declaration":2563,"isOffset":false,"isSlot":false,"src":"6973:8:13","valueSize":1},{"declaration":2557,"isOffset":false,"isSlot":false,"src":"6758:16:13","suffix":"length","valueSize":1},{"declaration":2557,"isOffset":false,"isSlot":false,"src":"6835:16:13","suffix":"length","valueSize":1},{"declaration":2557,"isOffset":false,"isSlot":false,"src":"6909:16:13","suffix":"length","valueSize":1},{"declaration":2557,"isOffset":true,"isSlot":false,"src":"6817:16:13","suffix":"offset","valueSize":1},{"declaration":2553,"isOffset":false,"isSlot":false,"src":"6886:6:13","valueSize":1},{"declaration":2560,"isOffset":false,"isSlot":false,"src":"6955:7:13","valueSize":1}],"flags":["memory-safe"],"id":2568,"nodeType":"InlineAssembly","src":"6501:544:13"}]},"id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"6031:16:13","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"signer","nameLocation":"6065:6:13","nodeType":"VariableDeclaration","scope":2570,"src":"6057:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2552,"name":"address","nodeType":"ElementaryTypeName","src":"6057:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2555,"mutability":"mutable","name":"hash","nameLocation":"6089:4:13","nodeType":"VariableDeclaration","scope":2570,"src":"6081:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6081:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"signature","nameLocation":"6118:9:13","nodeType":"VariableDeclaration","scope":2570,"src":"6103:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2556,"name":"bytes","nodeType":"ElementaryTypeName","src":"6103:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6047:86:13"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"success","nameLocation":"6162:7:13","nodeType":"VariableDeclaration","scope":2570,"src":"6157:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2559,"name":"bool","nodeType":"ElementaryTypeName","src":"6157:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6156:14:13"},"scope":2656,"src":"6022:1029:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2592,"nodeType":"Block","src":"7227:623:13","statements":[{"assignments":[2586],"declarations":[{"constant":false,"id":2586,"mutability":"mutable","name":"selector","nameLocation":"7244:8:13","nodeType":"VariableDeclaration","scope":2592,"src":"7237:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2585,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7237:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":2590,"initialValue":{"expression":{"expression":{"id":2587,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"7255:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$3796_$","typeString":"type(contract IERC1271)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7264:16:13","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"7255:25:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7281:8:13","memberName":"selector","nodeType":"MemberAccess","src":"7255:34:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"7237:52:13"},{"AST":{"nodeType":"YulBlock","src":"7324:520:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7398:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7392:5:13"},"nodeType":"YulFunctionCall","src":"7392:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"7385:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7424:3:13"},{"name":"selector","nodeType":"YulIdentifier","src":"7429:8:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7417:6:13"},"nodeType":"YulFunctionCall","src":"7417:21:13"},"nodeType":"YulExpressionStatement","src":"7417:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7462:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7467:4:13","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7458:3:13"},"nodeType":"YulFunctionCall","src":"7458:14:13"},{"name":"hash","nodeType":"YulIdentifier","src":"7474:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7451:6:13"},"nodeType":"YulFunctionCall","src":"7451:28:13"},"nodeType":"YulExpressionStatement","src":"7451:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7503:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7508:4:13","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7499:3:13"},"nodeType":"YulFunctionCall","src":"7499:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"7515:4:13","type":"","value":"0x40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7492:6:13"},"nodeType":"YulFunctionCall","src":"7492:28:13"},"nodeType":"YulExpressionStatement","src":"7492:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7544:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7549:4:13","type":"","value":"0x44"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7540:3:13"},"nodeType":"YulFunctionCall","src":"7540:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"7556:2:13","type":"","value":"65"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7533:6:13"},"nodeType":"YulFunctionCall","src":"7533:26:13"},"nodeType":"YulExpressionStatement","src":"7533:26:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7583:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7588:4:13","type":"","value":"0x64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7579:3:13"},"nodeType":"YulFunctionCall","src":"7579:14:13"},{"name":"r","nodeType":"YulIdentifier","src":"7595:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7572:6:13"},"nodeType":"YulFunctionCall","src":"7572:25:13"},"nodeType":"YulExpressionStatement","src":"7572:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7621:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7626:4:13","type":"","value":"0x84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7617:3:13"},"nodeType":"YulFunctionCall","src":"7617:14:13"},{"name":"s","nodeType":"YulIdentifier","src":"7633:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7610:6:13"},"nodeType":"YulFunctionCall","src":"7610:25:13"},"nodeType":"YulExpressionStatement","src":"7610:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7660:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7665:4:13","type":"","value":"0xa4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7656:3:13"},"nodeType":"YulFunctionCall","src":"7656:14:13"},{"name":"v","nodeType":"YulIdentifier","src":"7672:1:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"7648:7:13"},"nodeType":"YulFunctionCall","src":"7648:26:13"},"nodeType":"YulExpressionStatement","src":"7648:26:13"},{"body":{"nodeType":"YulBlock","src":"7736:98:13","statements":[{"nodeType":"YulAssignment","src":"7754:66:13","value":{"arguments":[{"arguments":[{"name":"selector","nodeType":"YulIdentifier","src":"7772:8:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7788:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7782:5:13"},"nodeType":"YulFunctionCall","src":"7782:8:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7769:2:13"},"nodeType":"YulFunctionCall","src":"7769:22:13"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"7796:14:13"},"nodeType":"YulFunctionCall","src":"7796:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"7814:4:13","type":"","value":"0x20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7793:2:13"},"nodeType":"YulFunctionCall","src":"7793:26:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7765:3:13"},"nodeType":"YulFunctionCall","src":"7765:55:13"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"7754:7:13"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"7701:3:13"},"nodeType":"YulFunctionCall","src":"7701:5:13"},{"name":"signer","nodeType":"YulIdentifier","src":"7708:6:13"},{"name":"ptr","nodeType":"YulIdentifier","src":"7716:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7721:4:13","type":"","value":"0xa5"},{"kind":"number","nodeType":"YulLiteral","src":"7727:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7730:4:13","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"7690:10:13"},"nodeType":"YulFunctionCall","src":"7690:45:13"},"nodeType":"YulIf","src":"7687:147:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2574,"isOffset":false,"isSlot":false,"src":"7474:4:13","valueSize":1},{"declaration":2578,"isOffset":false,"isSlot":false,"src":"7595:1:13","valueSize":1},{"declaration":2580,"isOffset":false,"isSlot":false,"src":"7633:1:13","valueSize":1},{"declaration":2586,"isOffset":false,"isSlot":false,"src":"7429:8:13","valueSize":1},{"declaration":2586,"isOffset":false,"isSlot":false,"src":"7772:8:13","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"7708:6:13","valueSize":1},{"declaration":2583,"isOffset":false,"isSlot":false,"src":"7754:7:13","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"7672:1:13","valueSize":1}],"flags":["memory-safe"],"id":2591,"nodeType":"InlineAssembly","src":"7299:545:13"}]},"id":2593,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"7066:16:13","nodeType":"FunctionDefinition","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"signer","nameLocation":"7100:6:13","nodeType":"VariableDeclaration","scope":2593,"src":"7092:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2571,"name":"address","nodeType":"ElementaryTypeName","src":"7092:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"hash","nameLocation":"7124:4:13","nodeType":"VariableDeclaration","scope":2593,"src":"7116:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7116:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"v","nameLocation":"7144:1:13","nodeType":"VariableDeclaration","scope":2593,"src":"7138:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2575,"name":"uint8","nodeType":"ElementaryTypeName","src":"7138:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"r","nameLocation":"7163:1:13","nodeType":"VariableDeclaration","scope":2593,"src":"7155:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7155:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"s","nameLocation":"7182:1:13","nodeType":"VariableDeclaration","scope":2593,"src":"7174:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7174:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7082:107:13"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"success","nameLocation":"7218:7:13","nodeType":"VariableDeclaration","scope":2593,"src":"7213:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2582,"name":"bool","nodeType":"ElementaryTypeName","src":"7213:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7212:14:13"},"scope":2656,"src":"7057:793:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2613,"nodeType":"Block","src":"8010:857:13","statements":[{"assignments":[2607],"declarations":[{"constant":false,"id":2607,"mutability":"mutable","name":"selector","nameLocation":"8299:8:13","nodeType":"VariableDeclaration","scope":2613,"src":"8292:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2606,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8292:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":2611,"initialValue":{"expression":{"expression":{"id":2608,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"8310:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$3796_$","typeString":"type(contract IERC1271)"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8319:16:13","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"8310:25:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8336:8:13","memberName":"selector","nodeType":"MemberAccess","src":"8310:34:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"8292:52:13"},{"AST":{"nodeType":"YulBlock","src":"8379:482:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8436:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8453:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8447:5:13"},"nodeType":"YulFunctionCall","src":"8447:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8440:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8479:3:13"},{"name":"selector","nodeType":"YulIdentifier","src":"8484:8:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8472:6:13"},"nodeType":"YulFunctionCall","src":"8472:21:13"},"nodeType":"YulExpressionStatement","src":"8472:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8517:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8522:4:13","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8513:3:13"},"nodeType":"YulFunctionCall","src":"8513:14:13"},{"name":"hash","nodeType":"YulIdentifier","src":"8529:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8506:6:13"},"nodeType":"YulFunctionCall","src":"8506:28:13"},"nodeType":"YulExpressionStatement","src":"8506:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8558:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8563:4:13","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8554:3:13"},"nodeType":"YulFunctionCall","src":"8554:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"8570:4:13","type":"","value":"0x40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8547:6:13"},"nodeType":"YulFunctionCall","src":"8547:28:13"},"nodeType":"YulExpressionStatement","src":"8547:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8599:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8604:4:13","type":"","value":"0x44"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8595:3:13"},"nodeType":"YulFunctionCall","src":"8595:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"8611:2:13","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8588:6:13"},"nodeType":"YulFunctionCall","src":"8588:26:13"},"nodeType":"YulExpressionStatement","src":"8588:26:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8638:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8643:4:13","type":"","value":"0x64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8634:3:13"},"nodeType":"YulFunctionCall","src":"8634:14:13"},{"name":"r","nodeType":"YulIdentifier","src":"8650:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8627:6:13"},"nodeType":"YulFunctionCall","src":"8627:25:13"},"nodeType":"YulExpressionStatement","src":"8627:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8676:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8681:4:13","type":"","value":"0x84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8672:3:13"},"nodeType":"YulFunctionCall","src":"8672:14:13"},{"name":"vs","nodeType":"YulIdentifier","src":"8688:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8665:6:13"},"nodeType":"YulFunctionCall","src":"8665:26:13"},"nodeType":"YulExpressionStatement","src":"8665:26:13"},{"body":{"nodeType":"YulBlock","src":"8753:98:13","statements":[{"nodeType":"YulAssignment","src":"8771:66:13","value":{"arguments":[{"arguments":[{"name":"selector","nodeType":"YulIdentifier","src":"8789:8:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8805:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8799:5:13"},"nodeType":"YulFunctionCall","src":"8799:8:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8786:2:13"},"nodeType":"YulFunctionCall","src":"8786:22:13"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8813:14:13"},"nodeType":"YulFunctionCall","src":"8813:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"8831:4:13","type":"","value":"0x20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8810:2:13"},"nodeType":"YulFunctionCall","src":"8810:26:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8782:3:13"},"nodeType":"YulFunctionCall","src":"8782:55:13"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"8771:7:13"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"8718:3:13"},"nodeType":"YulFunctionCall","src":"8718:5:13"},{"name":"signer","nodeType":"YulIdentifier","src":"8725:6:13"},{"name":"ptr","nodeType":"YulIdentifier","src":"8733:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8738:4:13","type":"","value":"0xa4"},{"kind":"number","nodeType":"YulLiteral","src":"8744:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8747:4:13","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"8707:10:13"},"nodeType":"YulFunctionCall","src":"8707:45:13"},"nodeType":"YulIf","src":"8704:147:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2597,"isOffset":false,"isSlot":false,"src":"8529:4:13","valueSize":1},{"declaration":2599,"isOffset":false,"isSlot":false,"src":"8650:1:13","valueSize":1},{"declaration":2607,"isOffset":false,"isSlot":false,"src":"8484:8:13","valueSize":1},{"declaration":2607,"isOffset":false,"isSlot":false,"src":"8789:8:13","valueSize":1},{"declaration":2595,"isOffset":false,"isSlot":false,"src":"8725:6:13","valueSize":1},{"declaration":2604,"isOffset":false,"isSlot":false,"src":"8771:7:13","valueSize":1},{"declaration":2601,"isOffset":false,"isSlot":false,"src":"8688:2:13","valueSize":1}],"flags":["memory-safe"],"id":2612,"nodeType":"InlineAssembly","src":"8354:507:13"}]},"id":2614,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"7865:16:13","nodeType":"FunctionDefinition","parameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"signer","nameLocation":"7899:6:13","nodeType":"VariableDeclaration","scope":2614,"src":"7891:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"7891:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"hash","nameLocation":"7923:4:13","nodeType":"VariableDeclaration","scope":2614,"src":"7915:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7915:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"r","nameLocation":"7945:1:13","nodeType":"VariableDeclaration","scope":2614,"src":"7937:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7937:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"vs","nameLocation":"7964:2:13","nodeType":"VariableDeclaration","scope":2614,"src":"7956:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7956:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7881:91:13"},"returnParameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"success","nameLocation":"8001:7:13","nodeType":"VariableDeclaration","scope":2614,"src":"7996:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2603,"name":"bool","nodeType":"ElementaryTypeName","src":"7996:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7995:14:13"},"scope":2656,"src":"7856:1011:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2634,"nodeType":"Block","src":"9029:990:13","statements":[{"assignments":[2628],"declarations":[{"constant":false,"id":2628,"mutability":"mutable","name":"selector","nameLocation":"9357:8:13","nodeType":"VariableDeclaration","scope":2634,"src":"9350:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2627,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9350:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":2632,"initialValue":{"expression":{"expression":{"id":2629,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"9368:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$3796_$","typeString":"type(contract IERC1271)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9377:16:13","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"9368:25:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9394:8:13","memberName":"selector","nodeType":"MemberAccess","src":"9368:34:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"9350:52:13"},{"AST":{"nodeType":"YulBlock","src":"9437:576:13","statements":[{"nodeType":"YulVariableDeclaration","src":"9494:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9511:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9505:5:13"},"nodeType":"YulFunctionCall","src":"9505:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"9498:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9537:3:13"},{"name":"selector","nodeType":"YulIdentifier","src":"9542:8:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9530:6:13"},"nodeType":"YulFunctionCall","src":"9530:21:13"},"nodeType":"YulExpressionStatement","src":"9530:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9575:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9580:4:13","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9571:3:13"},"nodeType":"YulFunctionCall","src":"9571:14:13"},{"name":"hash","nodeType":"YulIdentifier","src":"9587:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9564:6:13"},"nodeType":"YulFunctionCall","src":"9564:28:13"},"nodeType":"YulExpressionStatement","src":"9564:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9616:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9621:4:13","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9612:3:13"},"nodeType":"YulFunctionCall","src":"9612:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"9628:4:13","type":"","value":"0x40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9605:6:13"},"nodeType":"YulFunctionCall","src":"9605:28:13"},"nodeType":"YulExpressionStatement","src":"9605:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9657:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9662:4:13","type":"","value":"0x44"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9653:3:13"},"nodeType":"YulFunctionCall","src":"9653:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"9669:2:13","type":"","value":"65"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9646:6:13"},"nodeType":"YulFunctionCall","src":"9646:26:13"},"nodeType":"YulExpressionStatement","src":"9646:26:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9696:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9701:4:13","type":"","value":"0x64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9692:3:13"},"nodeType":"YulFunctionCall","src":"9692:14:13"},{"name":"r","nodeType":"YulIdentifier","src":"9708:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9685:6:13"},"nodeType":"YulFunctionCall","src":"9685:25:13"},"nodeType":"YulExpressionStatement","src":"9685:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9734:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9739:4:13","type":"","value":"0x84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9730:3:13"},"nodeType":"YulFunctionCall","src":"9730:14:13"},{"arguments":[{"name":"vs","nodeType":"YulIdentifier","src":"9750:2:13"},{"name":"_COMPACT_S_MASK","nodeType":"YulIdentifier","src":"9754:15:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9746:3:13"},"nodeType":"YulFunctionCall","src":"9746:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9723:6:13"},"nodeType":"YulFunctionCall","src":"9723:48:13"},"nodeType":"YulExpressionStatement","src":"9723:48:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9796:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9801:4:13","type":"","value":"0xa4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9792:3:13"},"nodeType":"YulFunctionCall","src":"9792:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9812:2:13","type":"","value":"27"},{"arguments":[{"name":"_COMPACT_V_SHIFT","nodeType":"YulIdentifier","src":"9820:16:13"},{"name":"vs","nodeType":"YulIdentifier","src":"9838:2:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9816:3:13"},"nodeType":"YulFunctionCall","src":"9816:25:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9808:3:13"},"nodeType":"YulFunctionCall","src":"9808:34:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"9784:7:13"},"nodeType":"YulFunctionCall","src":"9784:59:13"},"nodeType":"YulExpressionStatement","src":"9784:59:13"},{"body":{"nodeType":"YulBlock","src":"9905:98:13","statements":[{"nodeType":"YulAssignment","src":"9923:66:13","value":{"arguments":[{"arguments":[{"name":"selector","nodeType":"YulIdentifier","src":"9941:8:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9957:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9951:5:13"},"nodeType":"YulFunctionCall","src":"9951:8:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9938:2:13"},"nodeType":"YulFunctionCall","src":"9938:22:13"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9965:14:13"},"nodeType":"YulFunctionCall","src":"9965:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"9983:4:13","type":"","value":"0x20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9962:2:13"},"nodeType":"YulFunctionCall","src":"9962:26:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9934:3:13"},"nodeType":"YulFunctionCall","src":"9934:55:13"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9923:7:13"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9870:3:13"},"nodeType":"YulFunctionCall","src":"9870:5:13"},{"name":"signer","nodeType":"YulIdentifier","src":"9877:6:13"},{"name":"ptr","nodeType":"YulIdentifier","src":"9885:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9890:4:13","type":"","value":"0xa5"},{"kind":"number","nodeType":"YulLiteral","src":"9896:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9899:4:13","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"9859:10:13"},"nodeType":"YulFunctionCall","src":"9859:45:13"},"nodeType":"YulIf","src":"9856:147:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2333,"isOffset":false,"isSlot":false,"src":"9754:15:13","valueSize":1},{"declaration":2336,"isOffset":false,"isSlot":false,"src":"9820:16:13","valueSize":1},{"declaration":2618,"isOffset":false,"isSlot":false,"src":"9587:4:13","valueSize":1},{"declaration":2620,"isOffset":false,"isSlot":false,"src":"9708:1:13","valueSize":1},{"declaration":2628,"isOffset":false,"isSlot":false,"src":"9542:8:13","valueSize":1},{"declaration":2628,"isOffset":false,"isSlot":false,"src":"9941:8:13","valueSize":1},{"declaration":2616,"isOffset":false,"isSlot":false,"src":"9877:6:13","valueSize":1},{"declaration":2625,"isOffset":false,"isSlot":false,"src":"9923:7:13","valueSize":1},{"declaration":2622,"isOffset":false,"isSlot":false,"src":"9750:2:13","valueSize":1},{"declaration":2622,"isOffset":false,"isSlot":false,"src":"9838:2:13","valueSize":1}],"flags":["memory-safe"],"id":2633,"nodeType":"InlineAssembly","src":"9412:601:13"}]},"id":2635,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature65","nameLocation":"8882:18:13","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"signer","nameLocation":"8918:6:13","nodeType":"VariableDeclaration","scope":2635,"src":"8910:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"8910:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"hash","nameLocation":"8942:4:13","nodeType":"VariableDeclaration","scope":2635,"src":"8934:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8934:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"r","nameLocation":"8964:1:13","nodeType":"VariableDeclaration","scope":2635,"src":"8956:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8956:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"vs","nameLocation":"8983:2:13","nodeType":"VariableDeclaration","scope":2635,"src":"8975:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8975:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8900:91:13"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"success","nameLocation":"9020:7:13","nodeType":"VariableDeclaration","scope":2635,"src":"9015:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2624,"name":"bool","nodeType":"ElementaryTypeName","src":"9015:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9014:14:13"},"scope":2656,"src":"8873:1146:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2643,"nodeType":"Block","src":"10107:460:13","statements":[{"AST":{"nodeType":"YulBlock","src":"10314:247:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10378:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10381:66:13","type":"","value":"0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10371:6:13"},"nodeType":"YulFunctionCall","src":"10371:77:13"},"nodeType":"YulExpressionStatement","src":"10371:77:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10506:2:13","type":"","value":"28"},{"name":"hash","nodeType":"YulIdentifier","src":"10510:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10499:6:13"},"nodeType":"YulFunctionCall","src":"10499:16:13"},"nodeType":"YulExpressionStatement","src":"10499:16:13"},{"nodeType":"YulAssignment","src":"10528:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10545:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10548:2:13","type":"","value":"60"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10535:9:13"},"nodeType":"YulFunctionCall","src":"10535:16:13"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"10528:3:13"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2637,"isOffset":false,"isSlot":false,"src":"10510:4:13","valueSize":1},{"declaration":2640,"isOffset":false,"isSlot":false,"src":"10528:3:13","valueSize":1}],"flags":["memory-safe"],"id":2642,"nodeType":"InlineAssembly","src":"10289:272:13"}]},"id":2644,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"10034:22:13","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"hash","nameLocation":"10065:4:13","nodeType":"VariableDeclaration","scope":2644,"src":"10057:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10057:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10056:14:13"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"res","nameLocation":"10102:3:13","nodeType":"VariableDeclaration","scope":2644,"src":"10094:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10094:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10093:13:13"},"scope":2656,"src":"10025:542:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2654,"nodeType":"Block","src":"10679:461:13","statements":[{"AST":{"nodeType":"YulBlock","src":"10802:332:13","statements":[{"nodeType":"YulVariableDeclaration","src":"10859:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10876:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10870:5:13"},"nodeType":"YulFunctionCall","src":"10870:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"10863:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10901:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"10906:66:13","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10894:6:13"},"nodeType":"YulFunctionCall","src":"10894:79:13"},"nodeType":"YulExpressionStatement","src":"10894:79:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11011:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11016:4:13","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11007:3:13"},"nodeType":"YulFunctionCall","src":"11007:14:13"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"11023:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11000:6:13"},"nodeType":"YulFunctionCall","src":"11000:39:13"},"nodeType":"YulExpressionStatement","src":"11000:39:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11063:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11068:4:13","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11059:3:13"},"nodeType":"YulFunctionCall","src":"11059:14:13"},{"name":"structHash","nodeType":"YulIdentifier","src":"11075:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11052:6:13"},"nodeType":"YulFunctionCall","src":"11052:34:13"},"nodeType":"YulExpressionStatement","src":"11052:34:13"},{"nodeType":"YulAssignment","src":"11099:25:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11116:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11121:2:13","type":"","value":"66"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11106:9:13"},"nodeType":"YulFunctionCall","src":"11106:18:13"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"11099:3:13"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2646,"isOffset":false,"isSlot":false,"src":"11023:15:13","valueSize":1},{"declaration":2651,"isOffset":false,"isSlot":false,"src":"11099:3:13","valueSize":1},{"declaration":2648,"isOffset":false,"isSlot":false,"src":"11075:10:13","valueSize":1}],"flags":["memory-safe"],"id":2653,"nodeType":"InlineAssembly","src":"10777:357:13"}]},"id":2655,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"10582:15:13","nodeType":"FunctionDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"domainSeparator","nameLocation":"10606:15:13","nodeType":"VariableDeclaration","scope":2655,"src":"10598:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10598:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"structHash","nameLocation":"10631:10:13","nodeType":"VariableDeclaration","scope":2655,"src":"10623:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10623:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10597:45:13"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"res","nameLocation":"10674:3:13","nodeType":"VariableDeclaration","scope":2655,"src":"10666:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10666:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10665:13:13"},"scope":2656,"src":"10573:567:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2657,"src":"117:11025:13","usedErrors":[]}],"src":"33:11110:13"},"id":13},"contracts/libraries/RevertReasonForwarder.sol":{"ast":{"absolutePath":"contracts/libraries/RevertReasonForwarder.sol","exportedSymbols":{"RevertReasonForwarder":[2666]},"id":2667,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2658,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"RevertReasonForwarder","contractDependencies":[],"contractKind":"library","documentation":{"id":2659,"nodeType":"StructuredDocumentation","src":"58:36:14","text":"@title Revert reason forwarder."},"fullyImplemented":true,"id":2666,"linearizedBaseContracts":[2666],"name":"RevertReasonForwarder","nameLocation":"102:21:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2664,"nodeType":"Block","src":"216:286:14","statements":[{"AST":{"nodeType":"YulBlock","src":"312:184:14","statements":[{"nodeType":"YulVariableDeclaration","src":"369:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"386:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"380:5:14"},"nodeType":"YulFunctionCall","src":"380:11:14"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"373:3:14","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"419:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"424:1:14","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"427:14:14"},"nodeType":"YulFunctionCall","src":"427:16:14"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"404:14:14"},"nodeType":"YulFunctionCall","src":"404:40:14"},"nodeType":"YulExpressionStatement","src":"404:40:14"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"464:3:14"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"469:14:14"},"nodeType":"YulFunctionCall","src":"469:16:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:14"},"nodeType":"YulFunctionCall","src":"457:29:14"},"nodeType":"YulExpressionStatement","src":"457:29:14"}]},"evmVersion":"london","externalReferences":[],"flags":["memory-safe"],"id":2663,"nodeType":"InlineAssembly","src":"287:209:14"}]},"documentation":{"id":2660,"nodeType":"StructuredDocumentation","src":"130:47:14","text":"@dev Forwards latest externall call revert."},"id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"reRevert","nameLocation":"191:8:14","nodeType":"FunctionDefinition","parameters":{"id":2661,"nodeType":"ParameterList","parameters":[],"src":"199:2:14"},"returnParameters":{"id":2662,"nodeType":"ParameterList","parameters":[],"src":"216:0:14"},"scope":2666,"src":"182:320:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2667,"src":"94:410:14","usedErrors":[]}],"src":"33:472:14"},"id":14},"contracts/libraries/RevertReasonParser.sol":{"ast":{"absolutePath":"contracts/libraries/RevertReasonParser.sol","exportedSymbols":{"RevertReasonParser":[2787],"StringUtil":[3337]},"id":2788,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2668,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:15"},{"absolutePath":"contracts/libraries/StringUtil.sol","file":"./StringUtil.sol","id":2669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2788,"sourceUnit":3338,"src":"58:26:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"RevertReasonParser","contractDependencies":[],"contractKind":"library","documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"86:399:15","text":"@title Library that allows to parse unsuccessful arbitrary calls revert reasons.\n See https://solidity.readthedocs.io/en/latest/control-structures.html#revert for details.\n Note that we assume revert reason being abi-encoded as Error(string) so it may fail to parse reason\n if structured reverts appear in the future.\n All unsuccessful parsings get encoded as Unknown(data) string"},"fullyImplemented":true,"id":2787,"linearizedBaseContracts":[2787],"name":"RevertReasonParser","nameLocation":"494:18:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2673,"libraryName":{"id":2671,"name":"StringUtil","nameLocations":["525:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3337,"src":"525:10:15"},"nodeType":"UsingForDirective","src":"519:29:15","typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":2676,"libraryName":{"id":2674,"name":"StringUtil","nameLocations":["559:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3337,"src":"559:10:15"},"nodeType":"UsingForDirective","src":"553:27:15","typeName":{"id":2675,"name":"bytes","nodeType":"ElementaryTypeName","src":"574:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"errorSelector":"4eda0c2f","id":2678,"name":"InvalidRevertReason","nameLocation":"592:19:15","nodeType":"ErrorDefinition","parameters":{"id":2677,"nodeType":"ParameterList","parameters":[],"src":"611:2:15"},"src":"586:28:15"},{"constant":true,"id":2686,"mutability":"constant","name":"_ERROR_SELECTOR","nameLocation":"644:15:15","nodeType":"VariableDeclaration","scope":2787,"src":"620:76:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2679,"name":"bytes4","nodeType":"ElementaryTypeName","src":"620:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"hexValue":"4572726f7228737472696e6729","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"679:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_08c379a0afcc32b1a39302f7cb8073359698411ab5fd6e3edb2c02c0b5fba8aa","typeString":"literal_string \"Error(string)\""},"value":"Error(string)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_08c379a0afcc32b1a39302f7cb8073359698411ab5fd6e3edb2c02c0b5fba8aa","typeString":"literal_string \"Error(string)\""}],"id":2682,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"669:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"669:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"662:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2680,"name":"bytes4","nodeType":"ElementaryTypeName","src":"662:6:15","typeDescriptions":{}}},"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"662:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":true,"id":2694,"mutability":"constant","name":"_PANIC_SELECTOR","nameLocation":"726:15:15","nodeType":"VariableDeclaration","scope":2787,"src":"702:77:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2687,"name":"bytes4","nodeType":"ElementaryTypeName","src":"702:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"hexValue":"50616e69632875696e7432353629","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"761:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268","typeString":"literal_string \"Panic(uint256)\""},"value":"Panic(uint256)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268","typeString":"literal_string \"Panic(uint256)\""}],"id":2690,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"751:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"751:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"744:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2688,"name":"bytes4","nodeType":"ElementaryTypeName","src":"744:6:15","typeDescriptions":{}}},"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"744:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"body":{"id":2785,"nodeType":"Block","src":"947:1855:15","statements":[{"assignments":[2705],"declarations":[{"constant":false,"id":2705,"mutability":"mutable","name":"selector","nameLocation":"1120:8:15","nodeType":"VariableDeclaration","scope":2785,"src":"1113:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2704,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1113:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":2706,"nodeType":"VariableDeclarationStatement","src":"1113:15:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2707,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"1142:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1147:6:15","memberName":"length","nodeType":"MemberAccess","src":"1142:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"34","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1157:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1142:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2713,"nodeType":"IfStatement","src":"1138:180:15","trueBody":{"id":2712,"nodeType":"Block","src":"1160:158:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1199:109:15","statements":[{"nodeType":"YulAssignment","src":"1260:34:15","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1282:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"1288:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:15"},"nodeType":"YulFunctionCall","src":"1278:15:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1272:5:15"},"nodeType":"YulFunctionCall","src":"1272:22:15"},"variableNames":[{"name":"selector","nodeType":"YulIdentifier","src":"1260:8:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2697,"isOffset":false,"isSlot":false,"src":"1282:4:15","valueSize":1},{"declaration":2705,"isOffset":false,"isSlot":false,"src":"1260:8:15","valueSize":1}],"flags":["memory-safe"],"id":2711,"nodeType":"InlineAssembly","src":"1174:134:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2714,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1400:8:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2715,"name":"_ERROR_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"1412:15:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1400:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2717,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"1431:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1436:6:15","memberName":"length","nodeType":"MemberAccess","src":"1431:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3638","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1446:2:15","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"68"},"src":"1431:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1400:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"2365:8:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2749,"name":"_PANIC_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"2377:15:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2365:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2751,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"2396:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2401:6:15","memberName":"length","nodeType":"MemberAccess","src":"2396:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3336","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2411:2:15","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"36"},"src":"2396:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2365:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2772,"nodeType":"IfStatement","src":"2361:366:15","trueBody":{"id":2771,"nodeType":"Block","src":"2415:312:15","statements":[{"assignments":[2757],"declarations":[{"constant":false,"id":2757,"mutability":"mutable","name":"code","nameLocation":"2437:4:15","nodeType":"VariableDeclaration","scope":2771,"src":"2429:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"2429:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2758,"nodeType":"VariableDeclarationStatement","src":"2429:12:15"},{"AST":{"nodeType":"YulBlock","src":"2480:166:15","statements":[{"nodeType":"YulAssignment","src":"2604:28:15","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2622:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"2628:2:15","type":"","value":"36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2618:3:15"},"nodeType":"YulFunctionCall","src":"2618:13:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2612:5:15"},"nodeType":"YulFunctionCall","src":"2612:20:15"},"variableNames":[{"name":"code","nodeType":"YulIdentifier","src":"2604:4:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2757,"isOffset":false,"isSlot":false,"src":"2604:4:15","valueSize":1},{"declaration":2697,"isOffset":false,"isSlot":false,"src":"2622:4:15","valueSize":1}],"flags":["memory-safe"],"id":2759,"nodeType":"InlineAssembly","src":"2455:191:15"},{"expression":{"arguments":[{"id":2763,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"2680:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"50616e696328","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2688:8:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6beaf3ae4f274fd261ebef990a244fea7e5f0bd6f66cb1b2f715c478bf326563","typeString":"literal_string \"Panic(\""},"value":"Panic("},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2765,"name":"code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"2698:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2703:5:15","memberName":"toHex","nodeType":"MemberAccess","referencedDeclaration":3311,"src":"2698:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"29","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2712:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""},"value":")"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6beaf3ae4f274fd261ebef990a244fea7e5f0bd6f66cb1b2f715c478bf326563","typeString":"literal_string \"Panic(\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""}],"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2666:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2760,"name":"string","nodeType":"ElementaryTypeName","src":"2666:6:15","typeDescriptions":{}}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2673:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2666:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2666:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2703,"id":2770,"nodeType":"Return","src":"2659:57:15"}]}},"id":2773,"nodeType":"IfStatement","src":"1396:1331:15","trueBody":{"id":2747,"nodeType":"Block","src":"1450:846:15","statements":[{"assignments":[2723],"declarations":[{"constant":false,"id":2723,"mutability":"mutable","name":"reason","nameLocation":"1478:6:15","nodeType":"VariableDeclaration","scope":2747,"src":"1464:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2722,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2724,"nodeType":"VariableDeclarationStatement","src":"1464:20:15"},{"AST":{"nodeType":"YulBlock","src":"1523:179:15","statements":[{"nodeType":"YulAssignment","src":"1665:23:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1679:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"1685:2:15","type":"","value":"68"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1675:3:15"},"nodeType":"YulFunctionCall","src":"1675:13:15"},"variableNames":[{"name":"reason","nodeType":"YulIdentifier","src":"1665:6:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2697,"isOffset":false,"isSlot":false,"src":"1679:4:15","valueSize":1},{"declaration":2723,"isOffset":false,"isSlot":false,"src":"1665:6:15","valueSize":1}],"flags":["memory-safe"],"id":2725,"nodeType":"InlineAssembly","src":"1498:204:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2726,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"2160:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:6:15","memberName":"length","nodeType":"MemberAccess","src":"2160:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3638","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2175:2:15","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"68"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"arguments":[{"id":2731,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"2186:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2180:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2729,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:15","typeDescriptions":{}}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2194:6:15","memberName":"length","nodeType":"MemberAccess","src":"2180:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2175:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2160:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2746,"nodeType":"IfStatement","src":"2156:130:15","trueBody":{"id":2745,"nodeType":"Block","src":"2202:84:15","statements":[{"expression":{"arguments":[{"id":2739,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"2241:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"4572726f7228","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2249:8:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f027e7613d9bdaae789584b09bbb30b6b9fdb158c392ba5b26c372d4ac073ff2","typeString":"literal_string \"Error(\""},"value":"Error("},{"id":2741,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"2259:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"29","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2267:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""},"value":")"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f027e7613d9bdaae789584b09bbb30b6b9fdb158c392ba5b26c372d4ac073ff2","typeString":"literal_string \"Error(\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""}],"expression":{"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2227:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2736,"name":"string","nodeType":"ElementaryTypeName","src":"2227:6:15","typeDescriptions":{}}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2234:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2227:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2227:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2703,"id":2744,"nodeType":"Return","src":"2220:51:15"}]}}]}},{"expression":{"arguments":[{"id":2777,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"2757:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"556e6b6e6f776e28","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2765:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9487e8e91a05d874de6275525e0f59e05aaf46a8f1c80e85205c40a6360a1f2c","typeString":"literal_string \"Unknown(\""},"value":"Unknown("},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2779,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"2777:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2782:5:15","memberName":"toHex","nodeType":"MemberAccess","referencedDeclaration":3336,"src":"2777:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"29","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2791:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""},"value":")"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_9487e8e91a05d874de6275525e0f59e05aaf46a8f1c80e85205c40a6360a1f2c","typeString":"literal_string \"Unknown(\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""}],"expression":{"id":2775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2743:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2774,"name":"string","nodeType":"ElementaryTypeName","src":"2743:6:15","typeDescriptions":{}}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2743:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2703,"id":2784,"nodeType":"Return","src":"2736:59:15"}]},"documentation":{"id":2695,"nodeType":"StructuredDocumentation","src":"786:62:15","text":"@dev Parses error `data` and returns actual with `prefix`."},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"parse","nameLocation":"862:5:15","nodeType":"FunctionDefinition","parameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"data","nameLocation":"881:4:15","nodeType":"VariableDeclaration","scope":2786,"src":"868:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2696,"name":"bytes","nodeType":"ElementaryTypeName","src":"868:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"prefix","nameLocation":"901:6:15","nodeType":"VariableDeclaration","scope":2786,"src":"887:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2698,"name":"string","nodeType":"ElementaryTypeName","src":"887:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"867:41:15"},"returnParameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"932:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2701,"name":"string","nodeType":"ElementaryTypeName","src":"932:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"931:15:15"},"scope":2787,"src":"853:1949:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2788,"src":"486:2318:15","usedErrors":[2678]}],"src":"33:2772:15"},"id":15},"contracts/libraries/SafeERC20.sol":{"ast":{"absolutePath":"contracts/libraries/SafeERC20.sol","exportedSymbols":{"IDaiLikePermit":[1554],"IERC20":[3874],"IERC20Permit":[3935],"IPermit2":[1627],"IWETH":[1653],"RevertReasonForwarder":[2666],"SafeERC20":[3293]},"id":3294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2789,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:16"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2790,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3294,"sourceUnit":3875,"src":"58:56:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","id":2791,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3294,"sourceUnit":3939,"src":"115:79:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDaiLikePermit.sol","file":"../interfaces/IDaiLikePermit.sol","id":2792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3294,"sourceUnit":1555,"src":"195:42:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPermit2.sol","file":"../interfaces/IPermit2.sol","id":2793,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3294,"sourceUnit":1628,"src":"238:36:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IWETH.sol","file":"../interfaces/IWETH.sol","id":2794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3294,"sourceUnit":1654,"src":"275:33:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/RevertReasonForwarder.sol","file":"../libraries/RevertReasonForwarder.sol","id":2795,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3294,"sourceUnit":2667,"src":"309:48:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":2796,"nodeType":"StructuredDocumentation","src":"359:370:16","text":" @title Implements efficient safe methods for ERC20 interface.\n @notice Compared to the standard ERC20, this implementation offers several enhancements:\n 1. more gas-efficient, providing significant savings in transaction costs.\n 2. support for different permit implementations\n 3. forceApprove functionality\n 4. support for WETH deposit and withdraw"},"fullyImplemented":true,"id":3293,"linearizedBaseContracts":[3293],"name":"SafeERC20","nameLocation":"738:9:16","nodeType":"ContractDefinition","nodes":[{"errorSelector":"fb7f5079","id":2798,"name":"SafeTransferFailed","nameLocation":"760:18:16","nodeType":"ErrorDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[],"src":"778:2:16"},"src":"754:27:16"},{"errorSelector":"f4059071","id":2800,"name":"SafeTransferFromFailed","nameLocation":"792:22:16","nodeType":"ErrorDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[],"src":"814:2:16"},"src":"786:31:16"},{"errorSelector":"19be9a90","id":2802,"name":"ForceApproveFailed","nameLocation":"828:18:16","nodeType":"ErrorDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[],"src":"846:2:16"},"src":"822:27:16"},{"errorSelector":"8216cd1c","id":2804,"name":"SafeIncreaseAllowanceFailed","nameLocation":"860:27:16","nodeType":"ErrorDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[],"src":"887:2:16"},"src":"854:36:16"},{"errorSelector":"840bdf26","id":2806,"name":"SafeDecreaseAllowanceFailed","nameLocation":"901:27:16","nodeType":"ErrorDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[],"src":"928:2:16"},"src":"895:36:16"},{"errorSelector":"68275857","id":2808,"name":"SafePermitBadLength","nameLocation":"942:19:16","nodeType":"ErrorDefinition","parameters":{"id":2807,"nodeType":"ParameterList","parameters":[],"src":"961:2:16"},"src":"936:28:16"},{"errorSelector":"8112e119","id":2810,"name":"Permit2TransferAmountTooHigh","nameLocation":"975:28:16","nodeType":"ErrorDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[],"src":"1003:2:16"},"src":"969:37:16"},{"constant":true,"id":2813,"mutability":"constant","name":"_PERMIT2","nameLocation":"1068:8:16","nodeType":"VariableDeclaration","scope":3293,"src":"1043:78:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030323244343733303330463131366444454539463642343361433738424133","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1079:42:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000022D473030F116dDEE9F6B43aC78BA3"},"visibility":"private"},{"constant":true,"id":2816,"mutability":"constant","name":"_PERMIT_LENGTH_ERROR","nameLocation":"1151:20:16","nodeType":"VariableDeclaration","scope":3293,"src":"1127:57:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2814,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1127:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783638323735383537","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1174:10:16","typeDescriptions":{"typeIdentifier":"t_rational_1747408983_by_1","typeString":"int_const 1747408983"},"value":"0x68275857"},"visibility":"private"},{"constant":true,"id":2819,"mutability":"constant","name":"_RAW_CALL_GAS_LIMIT","nameLocation":"1248:19:16","nodeType":"VariableDeclaration","scope":3293,"src":"1223:51:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35303030","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1270:4:16","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"visibility":"private"},{"body":{"id":2837,"nodeType":"Block","src":"1816:552:16","statements":[{"assignments":[2831],"declarations":[{"constant":false,"id":2831,"mutability":"mutable","name":"selector","nameLocation":"1833:8:16","nodeType":"VariableDeclaration","scope":2837,"src":"1826:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2830,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1826:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":2835,"initialValue":{"expression":{"expression":{"id":2832,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"1844:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3874_$","typeString":"type(contract IERC20)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1851:9:16","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"1844:16:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_address_$returns$_t_uint256_$","typeString":"function IERC20.balanceOf(address) view returns (uint256)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1861:8:16","memberName":"selector","nodeType":"MemberAccess","src":"1844:25:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"1826:43:16"},{"AST":{"nodeType":"YulBlock","src":"1904:458:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1968:4:16","type":"","value":"0x00"},{"name":"selector","nodeType":"YulIdentifier","src":"1974:8:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1961:6:16"},"nodeType":"YulFunctionCall","src":"1961:22:16"},"nodeType":"YulExpressionStatement","src":"1961:22:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2003:4:16","type":"","value":"0x04"},{"name":"account","nodeType":"YulIdentifier","src":"2009:7:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1996:6:16"},"nodeType":"YulFunctionCall","src":"1996:21:16"},"nodeType":"YulExpressionStatement","src":"1996:21:16"},{"nodeType":"YulVariableDeclaration","src":"2030:63:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"2056:3:16"},"nodeType":"YulFunctionCall","src":"2056:5:16"},{"name":"token","nodeType":"YulIdentifier","src":"2063:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2070:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2076:4:16","type":"","value":"0x24"},{"kind":"number","nodeType":"YulLiteral","src":"2082:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2088:4:16","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"2045:10:16"},"nodeType":"YulFunctionCall","src":"2045:48:16"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"2034:7:16","type":""}]},{"nodeType":"YulAssignment","src":"2106:24:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2128:1:16","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2122:5:16"},"nodeType":"YulFunctionCall","src":"2122:8:16"},"variableNames":[{"name":"tokenBalance","nodeType":"YulIdentifier","src":"2106:12:16"}]},{"body":{"nodeType":"YulBlock","src":"2195:157:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2213:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2230:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2224:5:16"},"nodeType":"YulFunctionCall","src":"2224:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2217:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2267:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2272:1:16","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2275:14:16"},"nodeType":"YulFunctionCall","src":"2275:16:16"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"2252:14:16"},"nodeType":"YulFunctionCall","src":"2252:40:16"},"nodeType":"YulExpressionStatement","src":"2252:40:16"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2316:3:16"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2321:14:16"},"nodeType":"YulFunctionCall","src":"2321:16:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2309:6:16"},"nodeType":"YulFunctionCall","src":"2309:29:16"},"nodeType":"YulExpressionStatement","src":"2309:29:16"}]},"condition":{"arguments":[{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"2157:7:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2150:6:16"},"nodeType":"YulFunctionCall","src":"2150:15:16"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2170:14:16"},"nodeType":"YulFunctionCall","src":"2170:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"2188:4:16","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2167:2:16"},"nodeType":"YulFunctionCall","src":"2167:26:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2147:2:16"},"nodeType":"YulFunctionCall","src":"2147:47:16"},"nodeType":"YulIf","src":"2144:208:16"}]},"evmVersion":"london","externalReferences":[{"declaration":2825,"isOffset":false,"isSlot":false,"src":"2009:7:16","valueSize":1},{"declaration":2831,"isOffset":false,"isSlot":false,"src":"1974:8:16","valueSize":1},{"declaration":2823,"isOffset":false,"isSlot":false,"src":"2063:5:16","valueSize":1},{"declaration":2828,"isOffset":false,"isSlot":false,"src":"2106:12:16","valueSize":1}],"flags":["memory-safe"],"id":2836,"nodeType":"InlineAssembly","src":"1879:483:16"}]},"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"1281:410:16","text":" @notice Fetches the balance of a specific ERC20 token held by an account.\n Consumes less gas then regular `ERC20.balanceOf`.\n @param token The IERC20 token contract for which the balance will be fetched.\n @param account The address of the account whose token balance will be fetched.\n @return tokenBalance The balance of the specified ERC20 token held by the account."},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"safeBalanceOf","nameLocation":"1705:13:16","nodeType":"FunctionDefinition","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"token","nameLocation":"1735:5:16","nodeType":"VariableDeclaration","scope":2838,"src":"1728:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":2822,"nodeType":"UserDefinedTypeName","pathNode":{"id":2821,"name":"IERC20","nameLocations":["1728:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"1728:6:16"},"referencedDeclaration":3874,"src":"1728:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"account","nameLocation":"1758:7:16","nodeType":"VariableDeclaration","scope":2838,"src":"1750:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2824,"name":"address","nodeType":"ElementaryTypeName","src":"1750:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1718:53:16"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"tokenBalance","nameLocation":"1802:12:16","nodeType":"VariableDeclaration","scope":2838,"src":"1794:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1793:22:16"},"scope":3293,"src":"1696:672:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2871,"nodeType":"Block","src":"3257:174:16","statements":[{"condition":{"id":2853,"name":"permit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"3271:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2869,"nodeType":"Block","src":"3359:66:16","statements":[{"expression":{"arguments":[{"id":2863,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"3390:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"id":2864,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"3397:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2865,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"3403:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2866,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3407:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2862,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"3373:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3373:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2868,"nodeType":"ExpressionStatement","src":"3373:41:16"}]},"id":2870,"nodeType":"IfStatement","src":"3267:158:16","trueBody":{"id":2861,"nodeType":"Block","src":"3280:73:16","statements":[{"expression":{"arguments":[{"id":2855,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"3318:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"id":2856,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"3325:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2857,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"3331:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2858,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3335:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2854,"name":"safeTransferFromPermit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"3294:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3294:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2860,"nodeType":"ExpressionStatement","src":"3294:48:16"}]}}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"2374:718:16","text":" @notice Attempts to safely transfer tokens from one address to another.\n @dev If permit2 is true, uses the Permit2 standard; otherwise uses the standard ERC20 transferFrom. \n Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n @param token The IERC20 token contract from which the tokens will be transferred.\n @param from The address from which the tokens will be transferred.\n @param to The address to which the tokens will be transferred.\n @param amount The amount of tokens to transfer.\n @param permit2 If true, uses the Permit2 standard for the transfer; otherwise uses the standard ERC20 transferFrom."},"id":2872,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFromUniversal","nameLocation":"3106:25:16","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"token","nameLocation":"3148:5:16","nodeType":"VariableDeclaration","scope":2872,"src":"3141:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":2841,"nodeType":"UserDefinedTypeName","pathNode":{"id":2840,"name":"IERC20","nameLocations":["3141:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"3141:6:16"},"referencedDeclaration":3874,"src":"3141:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"from","nameLocation":"3171:4:16","nodeType":"VariableDeclaration","scope":2872,"src":"3163:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"3163:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"to","nameLocation":"3193:2:16","nodeType":"VariableDeclaration","scope":2872,"src":"3185:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2845,"name":"address","nodeType":"ElementaryTypeName","src":"3185:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"amount","nameLocation":"3213:6:16","nodeType":"VariableDeclaration","scope":2872,"src":"3205:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"3205:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"permit2","nameLocation":"3234:7:16","nodeType":"VariableDeclaration","scope":2872,"src":"3229:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2849,"name":"bool","nodeType":"ElementaryTypeName","src":"3229:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3131:116:16"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[],"src":"3257:0:16"},"scope":3293,"src":"3097:334:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2901,"nodeType":"Block","src":"4088:793:16","statements":[{"assignments":[2886],"declarations":[{"constant":false,"id":2886,"mutability":"mutable","name":"selector","nameLocation":"4105:8:16","nodeType":"VariableDeclaration","scope":2901,"src":"4098:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2885,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4098:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":2890,"initialValue":{"expression":{"expression":{"id":2887,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"4116:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4122:12:16","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3873,"src":"4116:18:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4135:8:16","memberName":"selector","nodeType":"MemberAccess","src":"4116:27:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"4098:45:16"},{"assignments":[2892],"declarations":[{"constant":false,"id":2892,"mutability":"mutable","name":"success","nameLocation":"4158:7:16","nodeType":"VariableDeclaration","scope":2901,"src":"4153:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2891,"name":"bool","nodeType":"ElementaryTypeName","src":"4153:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2893,"nodeType":"VariableDeclarationStatement","src":"4153:12:16"},{"AST":{"nodeType":"YulBlock","src":"4200:620:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4257:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4275:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4269:5:16"},"nodeType":"YulFunctionCall","src":"4269:11:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"4261:4:16","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4301:4:16"},{"name":"selector","nodeType":"YulIdentifier","src":"4307:8:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4294:6:16"},"nodeType":"YulFunctionCall","src":"4294:22:16"},"nodeType":"YulExpressionStatement","src":"4294:22:16"},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4340:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"4346:4:16","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4336:3:16"},"nodeType":"YulFunctionCall","src":"4336:15:16"},{"name":"from","nodeType":"YulIdentifier","src":"4353:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4329:6:16"},"nodeType":"YulFunctionCall","src":"4329:29:16"},"nodeType":"YulExpressionStatement","src":"4329:29:16"},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4382:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"4388:4:16","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4378:3:16"},"nodeType":"YulFunctionCall","src":"4378:15:16"},{"name":"to","nodeType":"YulIdentifier","src":"4395:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4371:6:16"},"nodeType":"YulFunctionCall","src":"4371:27:16"},"nodeType":"YulExpressionStatement","src":"4371:27:16"},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4422:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"4428:4:16","type":"","value":"0x44"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4418:3:16"},"nodeType":"YulFunctionCall","src":"4418:15:16"},{"name":"amount","nodeType":"YulIdentifier","src":"4435:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4411:6:16"},"nodeType":"YulFunctionCall","src":"4411:31:16"},"nodeType":"YulExpressionStatement","src":"4411:31:16"},{"nodeType":"YulAssignment","src":"4455:54:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"4471:3:16"},"nodeType":"YulFunctionCall","src":"4471:5:16"},{"name":"token","nodeType":"YulIdentifier","src":"4478:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4485:1:16","type":"","value":"0"},{"name":"data","nodeType":"YulIdentifier","src":"4488:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"4494:3:16","type":"","value":"100"},{"kind":"number","nodeType":"YulLiteral","src":"4499:3:16","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"4504:4:16","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"4466:4:16"},"nodeType":"YulFunctionCall","src":"4466:43:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4455:7:16"}]},{"body":{"nodeType":"YulBlock","src":"4533:277:16","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"4598:76:16","statements":[{"nodeType":"YulAssignment","src":"4620:36:16","value":{"arguments":[{"arguments":[{"name":"token","nodeType":"YulIdentifier","src":"4646:5:16"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"4634:11:16"},"nodeType":"YulFunctionCall","src":"4634:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"4654:1:16","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4631:2:16"},"nodeType":"YulFunctionCall","src":"4631:25:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4620:7:16"}]}]},"nodeType":"YulCase","src":"4591:83:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4596:1:16","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"4699:97:16","statements":[{"nodeType":"YulAssignment","src":"4721:57:16","value":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4739:14:16"},"nodeType":"YulFunctionCall","src":"4739:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"4757:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4736:2:16"},"nodeType":"YulFunctionCall","src":"4736:24:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4771:1:16","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4765:5:16"},"nodeType":"YulFunctionCall","src":"4765:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"4775:1:16","type":"","value":"1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4762:2:16"},"nodeType":"YulFunctionCall","src":"4762:15:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4732:3:16"},"nodeType":"YulFunctionCall","src":"4732:46:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4721:7:16"}]}]},"nodeType":"YulCase","src":"4691:105:16","value":"default"}],"expression":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4558:14:16"},"nodeType":"YulFunctionCall","src":"4558:16:16"},"nodeType":"YulSwitch","src":"4551:245:16"}]},"condition":{"name":"success","nodeType":"YulIdentifier","src":"4525:7:16"},"nodeType":"YulIf","src":"4522:288:16"}]},"evmVersion":"london","externalReferences":[{"declaration":2882,"isOffset":false,"isSlot":false,"src":"4435:6:16","valueSize":1},{"declaration":2878,"isOffset":false,"isSlot":false,"src":"4353:4:16","valueSize":1},{"declaration":2886,"isOffset":false,"isSlot":false,"src":"4307:8:16","valueSize":1},{"declaration":2892,"isOffset":false,"isSlot":false,"src":"4455:7:16","valueSize":1},{"declaration":2892,"isOffset":false,"isSlot":false,"src":"4525:7:16","valueSize":1},{"declaration":2892,"isOffset":false,"isSlot":false,"src":"4620:7:16","valueSize":1},{"declaration":2892,"isOffset":false,"isSlot":false,"src":"4721:7:16","valueSize":1},{"declaration":2880,"isOffset":false,"isSlot":false,"src":"4395:2:16","valueSize":1},{"declaration":2876,"isOffset":false,"isSlot":false,"src":"4478:5:16","valueSize":1},{"declaration":2876,"isOffset":false,"isSlot":false,"src":"4646:5:16","valueSize":1}],"flags":["memory-safe"],"id":2894,"nodeType":"InlineAssembly","src":"4175:645:16"},{"condition":{"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4833:8:16","subExpression":{"id":2895,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"4834:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2900,"nodeType":"IfStatement","src":"4829:45:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2897,"name":"SafeTransferFromFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"4850:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4850:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2899,"nodeType":"RevertStatement","src":"4843:31:16"}}]},"documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"3437:517:16","text":" @notice Attempts to safely transfer tokens from one address to another using the ERC20 standard.\n @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n @param token The IERC20 token contract from which the tokens will be transferred.\n @param from The address from which the tokens will be transferred.\n @param to The address to which the tokens will be transferred.\n @param amount The amount of tokens to transfer."},"id":2902,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3968:16:16","nodeType":"FunctionDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"token","nameLocation":"4001:5:16","nodeType":"VariableDeclaration","scope":2902,"src":"3994:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":2875,"nodeType":"UserDefinedTypeName","pathNode":{"id":2874,"name":"IERC20","nameLocations":["3994:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"3994:6:16"},"referencedDeclaration":3874,"src":"3994:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"from","nameLocation":"4024:4:16","nodeType":"VariableDeclaration","scope":2902,"src":"4016:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"4016:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2880,"mutability":"mutable","name":"to","nameLocation":"4046:2:16","nodeType":"VariableDeclaration","scope":2902,"src":"4038:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2879,"name":"address","nodeType":"ElementaryTypeName","src":"4038:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2882,"mutability":"mutable","name":"amount","nameLocation":"4066:6:16","nodeType":"VariableDeclaration","scope":2902,"src":"4058:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"4058:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3984:94:16"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[],"src":"4088:0:16"},"scope":3293,"src":"3959:922:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2942,"nodeType":"Block","src":"5547:715:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"5561:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5575:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2917,"name":"uint160","nodeType":"ElementaryTypeName","src":"5575:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":2916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5570:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5584:3:16","memberName":"max","nodeType":"MemberAccess","src":"5570:17:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"5561:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2925,"nodeType":"IfStatement","src":"5557:69:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2922,"name":"Permit2TransferAmountTooHigh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"5596:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5596:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2924,"nodeType":"RevertStatement","src":"5589:37:16"}},{"assignments":[2927],"declarations":[{"constant":false,"id":2927,"mutability":"mutable","name":"selector","nameLocation":"5643:8:16","nodeType":"VariableDeclaration","scope":2942,"src":"5636:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2926,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5636:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":2931,"initialValue":{"expression":{"expression":{"id":2928,"name":"IPermit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"5654:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPermit2_$1627_$","typeString":"type(contract IPermit2)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5663:12:16","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"5654:21:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint160_$_t_address_$returns$__$","typeString":"function IPermit2.transferFrom(address,address,uint160,address)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5676:8:16","memberName":"selector","nodeType":"MemberAccess","src":"5654:30:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"5636:48:16"},{"assignments":[2933],"declarations":[{"constant":false,"id":2933,"mutability":"mutable","name":"success","nameLocation":"5699:7:16","nodeType":"VariableDeclaration","scope":2942,"src":"5694:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2932,"name":"bool","nodeType":"ElementaryTypeName","src":"5694:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2934,"nodeType":"VariableDeclarationStatement","src":"5694:12:16"},{"AST":{"nodeType":"YulBlock","src":"5741:460:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5798:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5816:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5810:5:16"},"nodeType":"YulFunctionCall","src":"5810:11:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"5802:4:16","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5842:4:16"},{"name":"selector","nodeType":"YulIdentifier","src":"5848:8:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5835:6:16"},"nodeType":"YulFunctionCall","src":"5835:22:16"},"nodeType":"YulExpressionStatement","src":"5835:22:16"},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5881:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"5887:4:16","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5877:3:16"},"nodeType":"YulFunctionCall","src":"5877:15:16"},{"name":"from","nodeType":"YulIdentifier","src":"5894:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5870:6:16"},"nodeType":"YulFunctionCall","src":"5870:29:16"},"nodeType":"YulExpressionStatement","src":"5870:29:16"},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5923:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"5929:4:16","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5919:3:16"},"nodeType":"YulFunctionCall","src":"5919:15:16"},{"name":"to","nodeType":"YulIdentifier","src":"5936:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5912:6:16"},"nodeType":"YulFunctionCall","src":"5912:27:16"},"nodeType":"YulExpressionStatement","src":"5912:27:16"},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5963:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"5969:4:16","type":"","value":"0x44"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5959:3:16"},"nodeType":"YulFunctionCall","src":"5959:15:16"},{"name":"amount","nodeType":"YulIdentifier","src":"5976:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5952:6:16"},"nodeType":"YulFunctionCall","src":"5952:31:16"},"nodeType":"YulExpressionStatement","src":"5952:31:16"},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6007:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"6013:4:16","type":"","value":"0x64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6003:3:16"},"nodeType":"YulFunctionCall","src":"6003:15:16"},{"name":"token","nodeType":"YulIdentifier","src":"6020:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5996:6:16"},"nodeType":"YulFunctionCall","src":"5996:30:16"},"nodeType":"YulExpressionStatement","src":"5996:30:16"},{"nodeType":"YulAssignment","src":"6039:57:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"6055:3:16"},"nodeType":"YulFunctionCall","src":"6055:5:16"},{"name":"_PERMIT2","nodeType":"YulIdentifier","src":"6062:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"6072:1:16","type":"","value":"0"},{"name":"data","nodeType":"YulIdentifier","src":"6075:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"6081:4:16","type":"","value":"0x84"},{"kind":"number","nodeType":"YulLiteral","src":"6087:3:16","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"6092:3:16","type":"","value":"0x0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"6050:4:16"},"nodeType":"YulFunctionCall","src":"6050:46:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"6039:7:16"}]},{"body":{"nodeType":"YulBlock","src":"6120:71:16","statements":[{"nodeType":"YulAssignment","src":"6138:39:16","value":{"arguments":[{"arguments":[{"name":"_PERMIT2","nodeType":"YulIdentifier","src":"6164:8:16"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"6152:11:16"},"nodeType":"YulFunctionCall","src":"6152:21:16"},{"kind":"number","nodeType":"YulLiteral","src":"6175:1:16","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6149:2:16"},"nodeType":"YulFunctionCall","src":"6149:28:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"6138:7:16"}]}]},"condition":{"name":"success","nodeType":"YulIdentifier","src":"6112:7:16"},"nodeType":"YulIf","src":"6109:82:16"}]},"evmVersion":"london","externalReferences":[{"declaration":2813,"isOffset":false,"isSlot":false,"src":"6062:8:16","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"6164:8:16","valueSize":1},{"declaration":2912,"isOffset":false,"isSlot":false,"src":"5976:6:16","valueSize":1},{"declaration":2908,"isOffset":false,"isSlot":false,"src":"5894:4:16","valueSize":1},{"declaration":2927,"isOffset":false,"isSlot":false,"src":"5848:8:16","valueSize":1},{"declaration":2933,"isOffset":false,"isSlot":false,"src":"6039:7:16","valueSize":1},{"declaration":2933,"isOffset":false,"isSlot":false,"src":"6112:7:16","valueSize":1},{"declaration":2933,"isOffset":false,"isSlot":false,"src":"6138:7:16","valueSize":1},{"declaration":2910,"isOffset":false,"isSlot":false,"src":"5936:2:16","valueSize":1},{"declaration":2906,"isOffset":false,"isSlot":false,"src":"6020:5:16","valueSize":1}],"flags":["memory-safe"],"id":2935,"nodeType":"InlineAssembly","src":"5716:485:16"},{"condition":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6214:8:16","subExpression":{"id":2936,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"6215:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2941,"nodeType":"IfStatement","src":"6210:45:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2938,"name":"SafeTransferFromFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"6231:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6231:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2940,"nodeType":"RevertStatement","src":"6224:31:16"}}]},"documentation":{"id":2903,"nodeType":"StructuredDocumentation","src":"4887:519:16","text":" @notice Attempts to safely transfer tokens from one address to another using the Permit2 standard.\n @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n @param token The IERC20 token contract from which the tokens will be transferred.\n @param from The address from which the tokens will be transferred.\n @param to The address to which the tokens will be transferred.\n @param amount The amount of tokens to transfer."},"id":2943,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFromPermit2","nameLocation":"5420:23:16","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"token","nameLocation":"5460:5:16","nodeType":"VariableDeclaration","scope":2943,"src":"5453:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":2905,"nodeType":"UserDefinedTypeName","pathNode":{"id":2904,"name":"IERC20","nameLocations":["5453:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"5453:6:16"},"referencedDeclaration":3874,"src":"5453:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2908,"mutability":"mutable","name":"from","nameLocation":"5483:4:16","nodeType":"VariableDeclaration","scope":2943,"src":"5475:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"5475:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2910,"mutability":"mutable","name":"to","nameLocation":"5505:2:16","nodeType":"VariableDeclaration","scope":2943,"src":"5497:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2909,"name":"address","nodeType":"ElementaryTypeName","src":"5497:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"amount","nameLocation":"5525:6:16","nodeType":"VariableDeclaration","scope":2943,"src":"5517:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"5517:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5443:94:16"},"returnParameters":{"id":2914,"nodeType":"ParameterList","parameters":[],"src":"5547:0:16"},"scope":3293,"src":"5411:851:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2968,"nodeType":"Block","src":"6783:127:16","statements":[{"condition":{"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6797:53:16","subExpression":{"arguments":[{"id":2955,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"6808:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"expression":{"expression":{"id":2956,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"6815:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6821:8:16","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"6815:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6830:8:16","memberName":"selector","nodeType":"MemberAccess","src":"6815:23:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2959,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"6840:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"6844:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2954,"name":"_makeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"6798:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_bytes4_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes4,address,uint256) returns (bool)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6798:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2967,"nodeType":"IfStatement","src":"6793:111:16","trueBody":{"id":2966,"nodeType":"Block","src":"6852:52:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2963,"name":"SafeTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"6873:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6873:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2965,"nodeType":"RevertStatement","src":"6866:27:16"}]}}]},"documentation":{"id":2944,"nodeType":"StructuredDocumentation","src":"6268:408:16","text":" @notice Attempts to safely transfer tokens to another address.\n @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n @param token The IERC20 token contract from which the tokens will be transferred.\n @param to The address to which the tokens will be transferred.\n @param value The amount of tokens to transfer."},"id":2969,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"6690:12:16","nodeType":"FunctionDefinition","parameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"token","nameLocation":"6719:5:16","nodeType":"VariableDeclaration","scope":2969,"src":"6712:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":2946,"nodeType":"UserDefinedTypeName","pathNode":{"id":2945,"name":"IERC20","nameLocations":["6712:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"6712:6:16"},"referencedDeclaration":3874,"src":"6712:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"to","nameLocation":"6742:2:16","nodeType":"VariableDeclaration","scope":2969,"src":"6734:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2948,"name":"address","nodeType":"ElementaryTypeName","src":"6734:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2951,"mutability":"mutable","name":"value","nameLocation":"6762:5:16","nodeType":"VariableDeclaration","scope":2969,"src":"6754:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2950,"name":"uint256","nodeType":"ElementaryTypeName","src":"6754:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6702:71:16"},"returnParameters":{"id":2953,"nodeType":"ParameterList","parameters":[],"src":"6783:0:16"},"scope":3293,"src":"6681:229:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3015,"nodeType":"Block","src":"7436:329:16","statements":[{"condition":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7450:57:16","subExpression":{"arguments":[{"id":2981,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"7461:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"expression":{"expression":{"id":2982,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"7468:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7474:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3861,"src":"7468:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7482:8:16","memberName":"selector","nodeType":"MemberAccess","src":"7468:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2985,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"7492:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"7501:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2980,"name":"_makeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"7451:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_bytes4_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes4,address,uint256) returns (bool)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7451:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3014,"nodeType":"IfStatement","src":"7446:313:16","trueBody":{"id":3013,"nodeType":"Block","src":"7509:250:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7544:53:16","subExpression":{"arguments":[{"id":2990,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"7555:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"expression":{"expression":{"id":2991,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"7562:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7568:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3861,"src":"7562:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7576:8:16","memberName":"selector","nodeType":"MemberAccess","src":"7562:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2994,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"7586:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7595:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2989,"name":"_makeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"7545:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_bytes4_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes4,address,uint256) returns (bool)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7545:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7617:57:16","subExpression":{"arguments":[{"id":2999,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"7628:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"expression":{"expression":{"id":3000,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"7635:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7641:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3861,"src":"7635:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7649:8:16","memberName":"selector","nodeType":"MemberAccess","src":"7635:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3003,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"7659:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"7668:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2998,"name":"_makeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"7618:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_bytes4_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes4,address,uint256) returns (bool)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7618:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7544:130:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3012,"nodeType":"IfStatement","src":"7523:226:16","trueBody":{"id":3011,"nodeType":"Block","src":"7689:60:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3008,"name":"ForceApproveFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"7714:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7714:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3010,"nodeType":"RevertStatement","src":"7707:27:16"}]}}]}}]},"documentation":{"id":2970,"nodeType":"StructuredDocumentation","src":"6916:408:16","text":" @notice Attempts to approve a spender to spend a certain amount of tokens.\n @dev If `approve(from, to, amount)` fails, it tries to set the allowance to zero, and retries the `approve` call.\n @param token The IERC20 token contract on which the call will be made.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent."},"id":3016,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"7338:12:16","nodeType":"FunctionDefinition","parameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"token","nameLocation":"7367:5:16","nodeType":"VariableDeclaration","scope":3016,"src":"7360:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":2972,"nodeType":"UserDefinedTypeName","pathNode":{"id":2971,"name":"IERC20","nameLocations":["7360:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"7360:6:16"},"referencedDeclaration":3874,"src":"7360:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2975,"mutability":"mutable","name":"spender","nameLocation":"7390:7:16","nodeType":"VariableDeclaration","scope":3016,"src":"7382:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2974,"name":"address","nodeType":"ElementaryTypeName","src":"7382:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2977,"mutability":"mutable","name":"value","nameLocation":"7415:5:16","nodeType":"VariableDeclaration","scope":3016,"src":"7407:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2976,"name":"uint256","nodeType":"ElementaryTypeName","src":"7407:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7350:76:16"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[],"src":"7436:0:16"},"scope":3293,"src":"7329:436:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3059,"nodeType":"Block","src":"8367:222:16","statements":[{"assignments":[3028],"declarations":[{"constant":false,"id":3028,"mutability":"mutable","name":"allowance","nameLocation":"8385:9:16","nodeType":"VariableDeclaration","scope":3059,"src":"8377:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"8377:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3037,"initialValue":{"arguments":[{"arguments":[{"id":3033,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8421:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$3293","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$3293","typeString":"library SafeERC20"}],"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8413:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"8413:7:16","typeDescriptions":{}}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8413:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3035,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"8428:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3029,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"8397:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8403:9:16","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"8397:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8397:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8377:59:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"8450:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8463:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"8463:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3039,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8458:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8458:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8472:3:16","memberName":"max","nodeType":"MemberAccess","src":"8458:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3044,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"8478:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8458:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8450:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3050,"nodeType":"IfStatement","src":"8446:79:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3047,"name":"SafeIncreaseAllowanceFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"8496:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8496:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3049,"nodeType":"RevertStatement","src":"8489:36:16"}},{"expression":{"arguments":[{"id":3052,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"8548:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"id":3053,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"8555:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3054,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"8564:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"8576:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8564:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3051,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"8535:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8535:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3058,"nodeType":"ExpressionStatement","src":"8535:47:16"}]},"documentation":{"id":3017,"nodeType":"StructuredDocumentation","src":"7771:475:16","text":" @notice Safely increases the allowance of a spender.\n @dev Increases with safe math check. Checks if the increased allowance will overflow, if yes, then it reverts the transaction.\n Then uses `forceApprove` to increase the allowance.\n @param token The IERC20 token contract on which the call will be made.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to increase the allowance by."},"id":3060,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"8260:21:16","nodeType":"FunctionDefinition","parameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"token","nameLocation":"8298:5:16","nodeType":"VariableDeclaration","scope":3060,"src":"8291:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3019,"nodeType":"UserDefinedTypeName","pathNode":{"id":3018,"name":"IERC20","nameLocations":["8291:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"8291:6:16"},"referencedDeclaration":3874,"src":"8291:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"spender","nameLocation":"8321:7:16","nodeType":"VariableDeclaration","scope":3060,"src":"8313:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3021,"name":"address","nodeType":"ElementaryTypeName","src":"8313:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"value","nameLocation":"8346:5:16","nodeType":"VariableDeclaration","scope":3060,"src":"8338:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"8338:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8281:76:16"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[],"src":"8367:0:16"},"scope":3293,"src":"8251:338:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3097,"nodeType":"Block","src":"9192:202:16","statements":[{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"allowance","nameLocation":"9210:9:16","nodeType":"VariableDeclaration","scope":3097,"src":"9202:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"9202:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3081,"initialValue":{"arguments":[{"arguments":[{"id":3077,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9246:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$3293","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$3293","typeString":"library SafeERC20"}],"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9238:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3075,"name":"address","nodeType":"ElementaryTypeName","src":"9238:7:16","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9238:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3079,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"9253:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3073,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"9222:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9228:9:16","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"9222:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9202:59:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"9275:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3083,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"9283:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9275:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3088,"nodeType":"IfStatement","src":"9271:59:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3085,"name":"SafeDecreaseAllowanceFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"9301:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9301:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3087,"nodeType":"RevertStatement","src":"9294:36:16"}},{"expression":{"arguments":[{"id":3090,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"9353:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"id":3091,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"9360:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"9369:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"9381:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9369:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3089,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"9340:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9340:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3096,"nodeType":"ExpressionStatement","src":"9340:47:16"}]},"documentation":{"id":3061,"nodeType":"StructuredDocumentation","src":"8595:476:16","text":" @notice Safely decreases the allowance of a spender.\n @dev Decreases with safe math check. Checks if the decreased allowance will underflow, if yes, then it reverts the transaction.\n Then uses `forceApprove` to increase the allowance.\n @param token The IERC20 token contract on which the call will be made.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to decrease the allowance by."},"id":3098,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"9085:21:16","nodeType":"FunctionDefinition","parameters":{"id":3069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"token","nameLocation":"9123:5:16","nodeType":"VariableDeclaration","scope":3098,"src":"9116:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3063,"nodeType":"UserDefinedTypeName","pathNode":{"id":3062,"name":"IERC20","nameLocations":["9116:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"9116:6:16"},"referencedDeclaration":3874,"src":"9116:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"spender","nameLocation":"9146:7:16","nodeType":"VariableDeclaration","scope":3098,"src":"9138:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"9138:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3068,"mutability":"mutable","name":"value","nameLocation":"9171:5:16","nodeType":"VariableDeclaration","scope":3098,"src":"9163:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"9163:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:76:16"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[],"src":"9192:0:16"},"scope":3293,"src":"9076:318:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3124,"nodeType":"Block","src":"9948:107:16","statements":[{"condition":{"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9962:52:16","subExpression":{"arguments":[{"id":3108,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"9973:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"expression":{"id":3109,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9980:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9984:6:16","memberName":"sender","nodeType":"MemberAccess","src":"9980:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3113,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10000:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$3293","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$3293","typeString":"library SafeERC20"}],"id":3112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9992:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3111,"name":"address","nodeType":"ElementaryTypeName","src":"9992:7:16","typeDescriptions":{}}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9992:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3115,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"10007:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3107,"name":"tryPermit","nodeType":"Identifier","overloadedDeclarations":[3175,3210],"referencedDeclaration":3210,"src":"9963:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_address_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,address,address,bytes calldata) returns (bool)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9963:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3123,"nodeType":"IfStatement","src":"9958:90:16","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3118,"name":"RevertReasonForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10016:21:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RevertReasonForwarder_$2666_$","typeString":"type(library RevertReasonForwarder)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10038:8:16","memberName":"reRevert","nodeType":"MemberAccess","referencedDeclaration":2665,"src":"10016:30:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$__$","typeString":"function () pure"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10016:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3122,"nodeType":"ExpressionStatement","src":"10016:32:16"}}]},"documentation":{"id":3099,"nodeType":"StructuredDocumentation","src":"9400:477:16","text":" @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\n Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\n @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\n @param token The IERC20 token to execute the permit function on.\n @param permit The permit data to be used in the function call."},"id":3125,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"9891:10:16","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"token","nameLocation":"9909:5:16","nodeType":"VariableDeclaration","scope":3125,"src":"9902:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3101,"nodeType":"UserDefinedTypeName","pathNode":{"id":3100,"name":"IERC20","nameLocations":["9902:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"9902:6:16"},"referencedDeclaration":3874,"src":"9902:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"permit","nameLocation":"9931:6:16","nodeType":"VariableDeclaration","scope":3125,"src":"9916:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3103,"name":"bytes","nodeType":"ElementaryTypeName","src":"9916:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9901:37:16"},"returnParameters":{"id":3106,"nodeType":"ParameterList","parameters":[],"src":"9948:0:16"},"scope":3293,"src":"9882:173:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"10791:96:16","statements":[{"condition":{"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10805:41:16","subExpression":{"arguments":[{"id":3139,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"10816:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"id":3140,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"10823:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3141,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"10830:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3142,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"10839:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3138,"name":"tryPermit","nodeType":"Identifier","overloadedDeclarations":[3175,3210],"referencedDeclaration":3210,"src":"10806:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_address_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,address,address,bytes calldata) returns (bool)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10806:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3150,"nodeType":"IfStatement","src":"10801:79:16","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3145,"name":"RevertReasonForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10848:21:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RevertReasonForwarder_$2666_$","typeString":"type(library RevertReasonForwarder)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10870:8:16","memberName":"reRevert","nodeType":"MemberAccess","referencedDeclaration":2665,"src":"10848:30:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$__$","typeString":"function () pure"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3149,"nodeType":"ExpressionStatement","src":"10848:32:16"}}]},"documentation":{"id":3126,"nodeType":"StructuredDocumentation","src":"10061:627:16","text":" @notice Attempts to execute the `permit` function on the provided token with custom owner and spender parameters. \n Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\n @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\n @param token The IERC20 token to execute the permit function on.\n @param owner The owner of the tokens for which the permit is made.\n @param spender The spender allowed to spend the tokens by the permit.\n @param permit The permit data to be used in the function call."},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"10702:10:16","nodeType":"FunctionDefinition","parameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"token","nameLocation":"10720:5:16","nodeType":"VariableDeclaration","scope":3152,"src":"10713:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3128,"nodeType":"UserDefinedTypeName","pathNode":{"id":3127,"name":"IERC20","nameLocations":["10713:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"10713:6:16"},"referencedDeclaration":3874,"src":"10713:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"owner","nameLocation":"10735:5:16","nodeType":"VariableDeclaration","scope":3152,"src":"10727:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3130,"name":"address","nodeType":"ElementaryTypeName","src":"10727:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"spender","nameLocation":"10750:7:16","nodeType":"VariableDeclaration","scope":3152,"src":"10742:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"10742:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3135,"mutability":"mutable","name":"permit","nameLocation":"10774:6:16","nodeType":"VariableDeclaration","scope":3152,"src":"10759:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3134,"name":"bytes","nodeType":"ElementaryTypeName","src":"10759:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10712:69:16"},"returnParameters":{"id":3137,"nodeType":"ParameterList","parameters":[],"src":"10791:0:16"},"scope":3293,"src":"10693:194:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3174,"nodeType":"Block","src":"11442:75:16","statements":[{"expression":{"arguments":[{"id":3164,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"11469:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"expression":{"id":3165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11476:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11480:6:16","memberName":"sender","nodeType":"MemberAccess","src":"11476:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3169,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11496:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$3293","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$3293","typeString":"library SafeERC20"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11488:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3167,"name":"address","nodeType":"ElementaryTypeName","src":"11488:7:16","typeDescriptions":{}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11488:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3171,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"11503:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3163,"name":"tryPermit","nodeType":"Identifier","overloadedDeclarations":[3175,3210],"referencedDeclaration":3210,"src":"11459:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_address_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,address,address,bytes calldata) returns (bool)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11459:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3162,"id":3173,"nodeType":"Return","src":"11452:58:16"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"10893:457:16","text":" @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\n @dev Invokes `tryPermit` with sender as owner and contract as spender.\n @param token The IERC20 token to execute the permit function on.\n @param permit The permit data to be used in the function call.\n @return success Returns true if the permit function was successfully executed, false otherwise."},"id":3175,"implemented":true,"kind":"function","modifiers":[],"name":"tryPermit","nameLocation":"11364:9:16","nodeType":"FunctionDefinition","parameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"token","nameLocation":"11381:5:16","nodeType":"VariableDeclaration","scope":3175,"src":"11374:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3155,"nodeType":"UserDefinedTypeName","pathNode":{"id":3154,"name":"IERC20","nameLocations":["11374:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"11374:6:16"},"referencedDeclaration":3874,"src":"11374:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3158,"mutability":"mutable","name":"permit","nameLocation":"11403:6:16","nodeType":"VariableDeclaration","scope":3175,"src":"11388:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3157,"name":"bytes","nodeType":"ElementaryTypeName","src":"11388:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11373:37:16"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"success","nameLocation":"11433:7:16","nodeType":"VariableDeclaration","scope":3175,"src":"11428:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3160,"name":"bool","nodeType":"ElementaryTypeName","src":"11428:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11427:14:16"},"scope":3293,"src":"11355:162:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3209,"nodeType":"Block","src":"12958:6932:16","statements":[{"assignments":[3191],"declarations":[{"constant":false,"id":3191,"mutability":"mutable","name":"permitSelector","nameLocation":"13041:14:16","nodeType":"VariableDeclaration","scope":3209,"src":"13034:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3190,"name":"bytes4","nodeType":"ElementaryTypeName","src":"13034:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":3195,"initialValue":{"expression":{"expression":{"id":3192,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"13058:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Permit_$3935_$","typeString":"type(contract IERC20Permit)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13071:6:16","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"13058:19:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function IERC20Permit.permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13078:8:16","memberName":"selector","nodeType":"MemberAccess","src":"13058:28:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"13034:52:16"},{"assignments":[3197],"declarations":[{"constant":false,"id":3197,"mutability":"mutable","name":"daiPermitSelector","nameLocation":"13103:17:16","nodeType":"VariableDeclaration","scope":3209,"src":"13096:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3196,"name":"bytes4","nodeType":"ElementaryTypeName","src":"13096:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":3201,"initialValue":{"expression":{"expression":{"id":3198,"name":"IDaiLikePermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"13123:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDaiLikePermit_$1554_$","typeString":"type(contract IDaiLikePermit)"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13138:6:16","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1553,"src":"13123:21:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function IDaiLikePermit.permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13145:8:16","memberName":"selector","nodeType":"MemberAccess","src":"13123:30:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"13096:57:16"},{"assignments":[3203],"declarations":[{"constant":false,"id":3203,"mutability":"mutable","name":"permit2Selector","nameLocation":"13170:15:16","nodeType":"VariableDeclaration","scope":3209,"src":"13163:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3202,"name":"bytes4","nodeType":"ElementaryTypeName","src":"13163:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":3207,"initialValue":{"expression":{"expression":{"id":3204,"name":"IPermit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"13188:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPermit2_$1627_$","typeString":"type(contract IPermit2)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13197:6:16","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"13188:15:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_struct$_PermitSingle_$1586_memory_ptr_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function IPermit2.permit(address,struct IPermit2.PermitSingle memory,bytes calldata)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13204:8:16","memberName":"selector","nodeType":"MemberAccess","src":"13188:24:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"13163:49:16"},{"AST":{"nodeType":"YulBlock","src":"13247:6637:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13304:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13321:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13315:5:16"},"nodeType":"YulFunctionCall","src":"13315:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"13308:3:16","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"13513:1465:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13538:3:16"},{"name":"permitSelector","nodeType":"YulIdentifier","src":"13543:14:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13531:6:16"},"nodeType":"YulFunctionCall","src":"13531:27:16"},"nodeType":"YulExpressionStatement","src":"13531:27:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13608:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13613:4:16","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13604:3:16"},"nodeType":"YulFunctionCall","src":"13604:14:16"},{"name":"owner","nodeType":"YulIdentifier","src":"13620:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13597:6:16"},"nodeType":"YulFunctionCall","src":"13597:29:16"},"nodeType":"YulExpressionStatement","src":"13597:29:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13671:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13676:4:16","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13667:3:16"},"nodeType":"YulFunctionCall","src":"13667:14:16"},{"name":"spender","nodeType":"YulIdentifier","src":"13683:7:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13660:6:16"},"nodeType":"YulFunctionCall","src":"13660:31:16"},"nodeType":"YulExpressionStatement","src":"13660:31:16"},{"nodeType":"YulBlock","src":"13828:935:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13869:64:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13889:3:16","type":"","value":"224"},{"arguments":[{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"13911:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"13926:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13907:3:16"},"nodeType":"YulFunctionCall","src":"13907:24:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13894:12:16"},"nodeType":"YulFunctionCall","src":"13894:38:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13885:3:16"},"nodeType":"YulFunctionCall","src":"13885:48:16"},"variables":[{"name":"deadline","nodeType":"YulTypedName","src":"13873:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13988:48:16","value":{"arguments":[{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"14015:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"14030:4:16","type":"","value":"0x44"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14011:3:16"},"nodeType":"YulFunctionCall","src":"14011:24:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13998:12:16"},"nodeType":"YulFunctionCall","src":"13998:38:16"},"variables":[{"name":"vs","nodeType":"YulTypedName","src":"13992:2:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14125:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14130:4:16","type":"","value":"0x44"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14121:3:16"},"nodeType":"YulFunctionCall","src":"14121:14:16"},{"name":"permit.offset","nodeType":"YulIdentifier","src":"14137:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"14152:4:16","type":"","value":"0x20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14108:12:16"},"nodeType":"YulFunctionCall","src":"14108:49:16"},"nodeType":"YulExpressionStatement","src":"14108:49:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14251:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14256:4:16","type":"","value":"0x64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14247:3:16"},"nodeType":"YulFunctionCall","src":"14247:14:16"},{"arguments":[{"name":"deadline","nodeType":"YulIdentifier","src":"14267:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"14277:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14263:3:16"},"nodeType":"YulFunctionCall","src":"14263:16:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14240:6:16"},"nodeType":"YulFunctionCall","src":"14240:40:16"},"nodeType":"YulExpressionStatement","src":"14240:40:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14366:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14371:4:16","type":"","value":"0x84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14362:3:16"},"nodeType":"YulFunctionCall","src":"14362:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14382:2:16","type":"","value":"27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14390:3:16","type":"","value":"255"},{"name":"vs","nodeType":"YulIdentifier","src":"14395:2:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14386:3:16"},"nodeType":"YulFunctionCall","src":"14386:12:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14378:3:16"},"nodeType":"YulFunctionCall","src":"14378:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14355:6:16"},"nodeType":"YulFunctionCall","src":"14355:45:16"},"nodeType":"YulExpressionStatement","src":"14355:45:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14517:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14522:4:16","type":"","value":"0xa4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14513:3:16"},"nodeType":"YulFunctionCall","src":"14513:14:16"},{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"14533:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"14548:4:16","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14529:3:16"},"nodeType":"YulFunctionCall","src":"14529:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"14555:4:16","type":"","value":"0x20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14500:12:16"},"nodeType":"YulFunctionCall","src":"14500:60:16"},"nodeType":"YulExpressionStatement","src":"14500:60:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14643:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14648:4:16","type":"","value":"0xc4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14639:3:16"},"nodeType":"YulFunctionCall","src":"14639:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14659:1:16","type":"","value":"1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14666:1:16","type":"","value":"1"},{"name":"vs","nodeType":"YulIdentifier","src":"14669:2:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14662:3:16"},"nodeType":"YulFunctionCall","src":"14662:10:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14655:3:16"},"nodeType":"YulFunctionCall","src":"14655:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14632:6:16"},"nodeType":"YulFunctionCall","src":"14632:42:16"},"nodeType":"YulExpressionStatement","src":"14632:42:16"}]},{"nodeType":"YulAssignment","src":"14915:49:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"14931:3:16"},"nodeType":"YulFunctionCall","src":"14931:5:16"},{"name":"token","nodeType":"YulIdentifier","src":"14938:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"14945:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"14948:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14953:4:16","type":"","value":"0xe4"},{"kind":"number","nodeType":"YulLiteral","src":"14959:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14962:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"14926:4:16"},"nodeType":"YulFunctionCall","src":"14926:38:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"14915:7:16"}]}]},"nodeType":"YulCase","src":"13504:1474:16","value":{"kind":"number","nodeType":"YulLiteral","src":"13509:3:16","type":"","value":"100"}},{"body":{"nodeType":"YulBlock","src":"15037:1575:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15062:3:16"},{"name":"daiPermitSelector","nodeType":"YulIdentifier","src":"15067:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15055:6:16"},"nodeType":"YulFunctionCall","src":"15055:30:16"},"nodeType":"YulExpressionStatement","src":"15055:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15132:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15137:4:16","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15128:3:16"},"nodeType":"YulFunctionCall","src":"15128:14:16"},{"name":"owner","nodeType":"YulIdentifier","src":"15144:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15121:6:16"},"nodeType":"YulFunctionCall","src":"15121:29:16"},"nodeType":"YulExpressionStatement","src":"15121:29:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15195:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15200:4:16","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15191:3:16"},"nodeType":"YulFunctionCall","src":"15191:14:16"},{"name":"spender","nodeType":"YulIdentifier","src":"15207:7:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15184:6:16"},"nodeType":"YulFunctionCall","src":"15184:31:16"},"nodeType":"YulExpressionStatement","src":"15184:31:16"},{"nodeType":"YulBlock","src":"15351:1030:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15392:62:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15410:3:16","type":"","value":"224"},{"arguments":[{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"15432:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"15447:4:16","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15428:3:16"},"nodeType":"YulFunctionCall","src":"15428:24:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15415:12:16"},"nodeType":"YulFunctionCall","src":"15415:38:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15406:3:16"},"nodeType":"YulFunctionCall","src":"15406:48:16"},"variables":[{"name":"expiry","nodeType":"YulTypedName","src":"15396:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15509:48:16","value":{"arguments":[{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"15536:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"15551:4:16","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15532:3:16"},"nodeType":"YulFunctionCall","src":"15532:24:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15519:12:16"},"nodeType":"YulFunctionCall","src":"15519:38:16"},"variables":[{"name":"vs","nodeType":"YulTypedName","src":"15513:2:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15638:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15643:4:16","type":"","value":"0x44"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15634:3:16"},"nodeType":"YulFunctionCall","src":"15634:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15654:3:16","type":"","value":"224"},{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"15672:13:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15659:12:16"},"nodeType":"YulFunctionCall","src":"15659:27:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15650:3:16"},"nodeType":"YulFunctionCall","src":"15650:37:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15627:6:16"},"nodeType":"YulFunctionCall","src":"15627:61:16"},"nodeType":"YulExpressionStatement","src":"15627:61:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15769:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15774:4:16","type":"","value":"0x64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15765:3:16"},"nodeType":"YulFunctionCall","src":"15765:14:16"},{"arguments":[{"name":"expiry","nodeType":"YulIdentifier","src":"15785:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15793:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15781:3:16"},"nodeType":"YulFunctionCall","src":"15781:14:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15758:6:16"},"nodeType":"YulFunctionCall","src":"15758:38:16"},"nodeType":"YulExpressionStatement","src":"15758:38:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15881:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15886:4:16","type":"","value":"0x84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15877:3:16"},"nodeType":"YulFunctionCall","src":"15877:14:16"},{"kind":"bool","nodeType":"YulLiteral","src":"15893:4:16","type":"","value":"true"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15870:6:16"},"nodeType":"YulFunctionCall","src":"15870:28:16"},"nodeType":"YulExpressionStatement","src":"15870:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15987:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15992:4:16","type":"","value":"0xa4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15983:3:16"},"nodeType":"YulFunctionCall","src":"15983:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16003:2:16","type":"","value":"27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16011:3:16","type":"","value":"255"},{"name":"vs","nodeType":"YulIdentifier","src":"16016:2:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16007:3:16"},"nodeType":"YulFunctionCall","src":"16007:12:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15999:3:16"},"nodeType":"YulFunctionCall","src":"15999:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15976:6:16"},"nodeType":"YulFunctionCall","src":"15976:45:16"},"nodeType":"YulExpressionStatement","src":"15976:45:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16137:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16142:4:16","type":"","value":"0xc4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16133:3:16"},"nodeType":"YulFunctionCall","src":"16133:14:16"},{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"16153:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"16168:4:16","type":"","value":"0x08"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16149:3:16"},"nodeType":"YulFunctionCall","src":"16149:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"16175:4:16","type":"","value":"0x20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"16120:12:16"},"nodeType":"YulFunctionCall","src":"16120:60:16"},"nodeType":"YulExpressionStatement","src":"16120:60:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16262:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16267:4:16","type":"","value":"0xe4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16258:3:16"},"nodeType":"YulFunctionCall","src":"16258:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16278:1:16","type":"","value":"1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16285:1:16","type":"","value":"1"},{"name":"vs","nodeType":"YulIdentifier","src":"16288:2:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16281:3:16"},"nodeType":"YulFunctionCall","src":"16281:10:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16274:3:16"},"nodeType":"YulFunctionCall","src":"16274:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16251:6:16"},"nodeType":"YulFunctionCall","src":"16251:42:16"},"nodeType":"YulExpressionStatement","src":"16251:42:16"}]},{"nodeType":"YulAssignment","src":"16548:50:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"16564:3:16"},"nodeType":"YulFunctionCall","src":"16564:5:16"},{"name":"token","nodeType":"YulIdentifier","src":"16571:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"16578:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"16581:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16586:5:16","type":"","value":"0x104"},{"kind":"number","nodeType":"YulLiteral","src":"16593:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16596:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"16559:4:16"},"nodeType":"YulFunctionCall","src":"16559:39:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16548:7:16"}]}]},"nodeType":"YulCase","src":"15029:1583:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15034:2:16","type":"","value":"72"}},{"body":{"nodeType":"YulBlock","src":"16662:359:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16687:3:16"},{"name":"permitSelector","nodeType":"YulIdentifier","src":"16692:14:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16680:6:16"},"nodeType":"YulFunctionCall","src":"16680:27:16"},"nodeType":"YulExpressionStatement","src":"16680:27:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16741:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16746:4:16","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16737:3:16"},"nodeType":"YulFunctionCall","src":"16737:14:16"},{"name":"permit.offset","nodeType":"YulIdentifier","src":"16753:13:16"},{"name":"permit.length","nodeType":"YulIdentifier","src":"16768:13:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"16724:12:16"},"nodeType":"YulFunctionCall","src":"16724:58:16"},"nodeType":"YulExpressionStatement","src":"16724:58:16"},{"nodeType":"YulAssignment","src":"16958:49:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"16974:3:16"},"nodeType":"YulFunctionCall","src":"16974:5:16"},{"name":"token","nodeType":"YulIdentifier","src":"16981:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"16988:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"16991:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16996:4:16","type":"","value":"0xe4"},{"kind":"number","nodeType":"YulLiteral","src":"17002:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17005:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"16969:4:16"},"nodeType":"YulFunctionCall","src":"16969:38:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16958:7:16"}]}]},"nodeType":"YulCase","src":"16653:368:16","value":{"kind":"number","nodeType":"YulLiteral","src":"16658:3:16","type":"","value":"224"}},{"body":{"nodeType":"YulBlock","src":"17073:378:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17098:3:16"},{"name":"daiPermitSelector","nodeType":"YulIdentifier","src":"17103:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17091:6:16"},"nodeType":"YulFunctionCall","src":"17091:30:16"},"nodeType":"YulExpressionStatement","src":"17091:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17155:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17160:4:16","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17151:3:16"},"nodeType":"YulFunctionCall","src":"17151:14:16"},{"name":"permit.offset","nodeType":"YulIdentifier","src":"17167:13:16"},{"name":"permit.length","nodeType":"YulIdentifier","src":"17182:13:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17138:12:16"},"nodeType":"YulFunctionCall","src":"17138:58:16"},"nodeType":"YulExpressionStatement","src":"17138:58:16"},{"nodeType":"YulAssignment","src":"17387:50:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17403:3:16"},"nodeType":"YulFunctionCall","src":"17403:5:16"},{"name":"token","nodeType":"YulIdentifier","src":"17410:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"17417:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"17420:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17425:5:16","type":"","value":"0x104"},{"kind":"number","nodeType":"YulLiteral","src":"17432:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17435:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"17398:4:16"},"nodeType":"YulFunctionCall","src":"17398:39:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17387:7:16"}]}]},"nodeType":"YulCase","src":"17064:387:16","value":{"kind":"number","nodeType":"YulLiteral","src":"17069:3:16","type":"","value":"256"}},{"body":{"nodeType":"YulBlock","src":"17504:1843:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17664:3:16"},{"name":"permit2Selector","nodeType":"YulIdentifier","src":"17669:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17657:6:16"},"nodeType":"YulFunctionCall","src":"17657:28:16"},"nodeType":"YulExpressionStatement","src":"17657:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17732:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17737:4:16","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17728:3:16"},"nodeType":"YulFunctionCall","src":"17728:14:16"},{"name":"owner","nodeType":"YulIdentifier","src":"17744:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17721:6:16"},"nodeType":"YulFunctionCall","src":"17721:29:16"},"nodeType":"YulExpressionStatement","src":"17721:29:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17793:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17798:4:16","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17789:3:16"},"nodeType":"YulFunctionCall","src":"17789:14:16"},{"name":"token","nodeType":"YulIdentifier","src":"17805:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17782:6:16"},"nodeType":"YulFunctionCall","src":"17782:29:16"},"nodeType":"YulExpressionStatement","src":"17782:29:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17861:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17866:4:16","type":"","value":"0x50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17857:3:16"},"nodeType":"YulFunctionCall","src":"17857:14:16"},{"name":"permit.offset","nodeType":"YulIdentifier","src":"17873:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"17888:4:16","type":"","value":"0x14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17844:12:16"},"nodeType":"YulFunctionCall","src":"17844:49:16"},"nodeType":"YulExpressionStatement","src":"17844:49:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18049:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18054:4:16","type":"","value":"0x64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18045:3:16"},"nodeType":"YulFunctionCall","src":"18045:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18065:14:16","type":"","value":"0xffffffffffff"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18089:3:16","type":"","value":"224"},{"arguments":[{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"18111:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"18126:4:16","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18107:3:16"},"nodeType":"YulFunctionCall","src":"18107:24:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18094:12:16"},"nodeType":"YulFunctionCall","src":"18094:38:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18085:3:16"},"nodeType":"YulFunctionCall","src":"18085:48:16"},{"kind":"number","nodeType":"YulLiteral","src":"18135:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18081:3:16"},"nodeType":"YulFunctionCall","src":"18081:56:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18061:3:16"},"nodeType":"YulFunctionCall","src":"18061:77:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18038:6:16"},"nodeType":"YulFunctionCall","src":"18038:101:16"},"nodeType":"YulExpressionStatement","src":"18038:101:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18239:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18244:4:16","type":"","value":"0x84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18235:3:16"},"nodeType":"YulFunctionCall","src":"18235:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18255:3:16","type":"","value":"224"},{"arguments":[{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"18277:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"18292:4:16","type":"","value":"0x18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18273:3:16"},"nodeType":"YulFunctionCall","src":"18273:24:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18260:12:16"},"nodeType":"YulFunctionCall","src":"18260:38:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18251:3:16"},"nodeType":"YulFunctionCall","src":"18251:48:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18228:6:16"},"nodeType":"YulFunctionCall","src":"18228:72:16"},"nodeType":"YulExpressionStatement","src":"18228:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18375:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18380:4:16","type":"","value":"0xa4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18371:3:16"},"nodeType":"YulFunctionCall","src":"18371:14:16"},{"name":"spender","nodeType":"YulIdentifier","src":"18387:7:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18364:6:16"},"nodeType":"YulFunctionCall","src":"18364:31:16"},"nodeType":"YulExpressionStatement","src":"18364:31:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18537:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18542:4:16","type":"","value":"0xc4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18533:3:16"},"nodeType":"YulFunctionCall","src":"18533:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18553:14:16","type":"","value":"0xffffffffffff"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18577:3:16","type":"","value":"224"},{"arguments":[{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"18599:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"18614:4:16","type":"","value":"0x1c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18595:3:16"},"nodeType":"YulFunctionCall","src":"18595:24:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18582:12:16"},"nodeType":"YulFunctionCall","src":"18582:38:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18573:3:16"},"nodeType":"YulFunctionCall","src":"18573:48:16"},{"kind":"number","nodeType":"YulLiteral","src":"18623:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18569:3:16"},"nodeType":"YulFunctionCall","src":"18569:56:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18549:3:16"},"nodeType":"YulFunctionCall","src":"18549:77:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18526:6:16"},"nodeType":"YulFunctionCall","src":"18526:101:16"},"nodeType":"YulExpressionStatement","src":"18526:101:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18728:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18733:4:16","type":"","value":"0xe4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18724:3:16"},"nodeType":"YulFunctionCall","src":"18724:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"18740:5:16","type":"","value":"0x100"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18717:6:16"},"nodeType":"YulFunctionCall","src":"18717:29:16"},"nodeType":"YulExpressionStatement","src":"18717:29:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18828:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18833:5:16","type":"","value":"0x104"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18824:3:16"},"nodeType":"YulFunctionCall","src":"18824:15:16"},{"kind":"number","nodeType":"YulLiteral","src":"18841:4:16","type":"","value":"0x40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18817:6:16"},"nodeType":"YulFunctionCall","src":"18817:29:16"},"nodeType":"YulExpressionStatement","src":"18817:29:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18933:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18938:5:16","type":"","value":"0x124"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18929:3:16"},"nodeType":"YulFunctionCall","src":"18929:15:16"},{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"18950:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"18965:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18946:3:16"},"nodeType":"YulFunctionCall","src":"18946:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"18972:4:16","type":"","value":"0x20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18916:12:16"},"nodeType":"YulFunctionCall","src":"18916:61:16"},"nodeType":"YulExpressionStatement","src":"18916:61:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"19059:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19064:5:16","type":"","value":"0x144"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19055:3:16"},"nodeType":"YulFunctionCall","src":"19055:15:16"},{"arguments":[{"name":"permit.offset","nodeType":"YulIdentifier","src":"19076:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"19091:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19072:3:16"},"nodeType":"YulFunctionCall","src":"19072:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"19098:4:16","type":"","value":"0x20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"19042:12:16"},"nodeType":"YulFunctionCall","src":"19042:61:16"},"nodeType":"YulExpressionStatement","src":"19042:61:16"},{"nodeType":"YulAssignment","src":"19280:53:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19296:3:16"},"nodeType":"YulFunctionCall","src":"19296:5:16"},{"name":"_PERMIT2","nodeType":"YulIdentifier","src":"19303:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"19313:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"19316:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19321:5:16","type":"","value":"0x164"},{"kind":"number","nodeType":"YulLiteral","src":"19328:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19331:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"19291:4:16"},"nodeType":"YulFunctionCall","src":"19291:42:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19280:7:16"}]}]},"nodeType":"YulCase","src":"17496:1851:16","value":{"kind":"number","nodeType":"YulLiteral","src":"17501:2:16","type":"","value":"96"}},{"body":{"nodeType":"YulBlock","src":"19393:341:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"19418:3:16"},{"name":"permit2Selector","nodeType":"YulIdentifier","src":"19423:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19411:6:16"},"nodeType":"YulFunctionCall","src":"19411:28:16"},"nodeType":"YulExpressionStatement","src":"19411:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"19473:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19478:4:16","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19469:3:16"},"nodeType":"YulFunctionCall","src":"19469:14:16"},{"name":"permit.offset","nodeType":"YulIdentifier","src":"19485:13:16"},{"name":"permit.length","nodeType":"YulIdentifier","src":"19500:13:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"19456:12:16"},"nodeType":"YulFunctionCall","src":"19456:58:16"},"nodeType":"YulExpressionStatement","src":"19456:58:16"},{"nodeType":"YulAssignment","src":"19667:53:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19683:3:16"},"nodeType":"YulFunctionCall","src":"19683:5:16"},{"name":"_PERMIT2","nodeType":"YulIdentifier","src":"19690:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"19700:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"19703:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19708:5:16","type":"","value":"0x164"},{"kind":"number","nodeType":"YulLiteral","src":"19715:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19718:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"19678:4:16"},"nodeType":"YulFunctionCall","src":"19678:42:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19667:7:16"}]}]},"nodeType":"YulCase","src":"19384:350:16","value":{"kind":"number","nodeType":"YulLiteral","src":"19389:3:16","type":"","value":"352"}},{"body":{"nodeType":"YulBlock","src":"19778:96:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"19803:3:16"},{"name":"_PERMIT_LENGTH_ERROR","nodeType":"YulIdentifier","src":"19808:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19796:6:16"},"nodeType":"YulFunctionCall","src":"19796:33:16"},"nodeType":"YulExpressionStatement","src":"19796:33:16"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"19853:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19858:1:16","type":"","value":"4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19846:6:16"},"nodeType":"YulFunctionCall","src":"19846:14:16"},"nodeType":"YulExpressionStatement","src":"19846:14:16"}]},"nodeType":"YulCase","src":"19770:104:16","value":"default"}],"expression":{"name":"permit.length","nodeType":"YulIdentifier","src":"13442:13:16"},"nodeType":"YulSwitch","src":"13435:6439:16"}]},"evmVersion":"london","externalReferences":[{"declaration":2813,"isOffset":false,"isSlot":false,"src":"19303:8:16","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"19690:8:16","valueSize":1},{"declaration":2816,"isOffset":false,"isSlot":false,"src":"19808:20:16","valueSize":1},{"declaration":3197,"isOffset":false,"isSlot":false,"src":"15067:17:16","valueSize":1},{"declaration":3197,"isOffset":false,"isSlot":false,"src":"17103:17:16","valueSize":1},{"declaration":3181,"isOffset":false,"isSlot":false,"src":"13620:5:16","valueSize":1},{"declaration":3181,"isOffset":false,"isSlot":false,"src":"15144:5:16","valueSize":1},{"declaration":3181,"isOffset":false,"isSlot":false,"src":"17744:5:16","valueSize":1},{"declaration":3185,"isOffset":false,"isSlot":false,"src":"13442:13:16","suffix":"length","valueSize":1},{"declaration":3185,"isOffset":false,"isSlot":false,"src":"16768:13:16","suffix":"length","valueSize":1},{"declaration":3185,"isOffset":false,"isSlot":false,"src":"17182:13:16","suffix":"length","valueSize":1},{"declaration":3185,"isOffset":false,"isSlot":false,"src":"19500:13:16","suffix":"length","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"13911:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"14015:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"14137:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"14533:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"15432:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"15536:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"15672:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"16153:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"16753:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"17167:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"17873:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"18111:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"18277:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"18599:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"18950:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"19076:13:16","suffix":"offset","valueSize":1},{"declaration":3185,"isOffset":true,"isSlot":false,"src":"19485:13:16","suffix":"offset","valueSize":1},{"declaration":3203,"isOffset":false,"isSlot":false,"src":"17669:15:16","valueSize":1},{"declaration":3203,"isOffset":false,"isSlot":false,"src":"19423:15:16","valueSize":1},{"declaration":3191,"isOffset":false,"isSlot":false,"src":"13543:14:16","valueSize":1},{"declaration":3191,"isOffset":false,"isSlot":false,"src":"16692:14:16","valueSize":1},{"declaration":3183,"isOffset":false,"isSlot":false,"src":"13683:7:16","valueSize":1},{"declaration":3183,"isOffset":false,"isSlot":false,"src":"15207:7:16","valueSize":1},{"declaration":3183,"isOffset":false,"isSlot":false,"src":"18387:7:16","valueSize":1},{"declaration":3188,"isOffset":false,"isSlot":false,"src":"14915:7:16","valueSize":1},{"declaration":3188,"isOffset":false,"isSlot":false,"src":"16548:7:16","valueSize":1},{"declaration":3188,"isOffset":false,"isSlot":false,"src":"16958:7:16","valueSize":1},{"declaration":3188,"isOffset":false,"isSlot":false,"src":"17387:7:16","valueSize":1},{"declaration":3188,"isOffset":false,"isSlot":false,"src":"19280:7:16","valueSize":1},{"declaration":3188,"isOffset":false,"isSlot":false,"src":"19667:7:16","valueSize":1},{"declaration":3179,"isOffset":false,"isSlot":false,"src":"14938:5:16","valueSize":1},{"declaration":3179,"isOffset":false,"isSlot":false,"src":"16571:5:16","valueSize":1},{"declaration":3179,"isOffset":false,"isSlot":false,"src":"16981:5:16","valueSize":1},{"declaration":3179,"isOffset":false,"isSlot":false,"src":"17410:5:16","valueSize":1},{"declaration":3179,"isOffset":false,"isSlot":false,"src":"17805:5:16","valueSize":1}],"flags":["memory-safe"],"id":3208,"nodeType":"InlineAssembly","src":"13222:6662:16"}]},"documentation":{"id":3176,"nodeType":"StructuredDocumentation","src":"11523:1311:16","text":" @notice The function attempts to call the permit function on a given ERC20 token.\n @dev The function is designed to support a variety of permit functions, namely: IERC20Permit, IDaiLikePermit, and IPermit2.\n It accommodates both Compact and Full formats of these permit types.\n Please note, it is expected that the `expiration` parameter for the compact Permit2 and the `deadline` parameter \n for the compact Permit are to be incremented by one before invoking this function. This approach is motivated by\n gas efficiency considerations; as the unlimited expiration period is likely to be the most common scenario, and \n zeros are cheaper to pass in terms of gas cost. Thus, callers should increment the expiration or deadline by one\n before invocation for optimized performance.\n @param token The address of the ERC20 token on which to call the permit function.\n @param owner The owner of the tokens. This address should have signed the off-chain permit.\n @param spender The address which will be approved for transfer of tokens.\n @param permit The off-chain permit data, containing different fields depending on the type of permit function.\n @return success A boolean indicating whether the permit call was successful."},"id":3210,"implemented":true,"kind":"function","modifiers":[],"name":"tryPermit","nameLocation":"12848:9:16","nodeType":"FunctionDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"token","nameLocation":"12865:5:16","nodeType":"VariableDeclaration","scope":3210,"src":"12858:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3178,"nodeType":"UserDefinedTypeName","pathNode":{"id":3177,"name":"IERC20","nameLocations":["12858:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"12858:6:16"},"referencedDeclaration":3874,"src":"12858:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"owner","nameLocation":"12880:5:16","nodeType":"VariableDeclaration","scope":3210,"src":"12872:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3180,"name":"address","nodeType":"ElementaryTypeName","src":"12872:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3183,"mutability":"mutable","name":"spender","nameLocation":"12895:7:16","nodeType":"VariableDeclaration","scope":3210,"src":"12887:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3182,"name":"address","nodeType":"ElementaryTypeName","src":"12887:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3185,"mutability":"mutable","name":"permit","nameLocation":"12919:6:16","nodeType":"VariableDeclaration","scope":3210,"src":"12904:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3184,"name":"bytes","nodeType":"ElementaryTypeName","src":"12904:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12857:69:16"},"returnParameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"success","nameLocation":"12949:7:16","nodeType":"VariableDeclaration","scope":3210,"src":"12944:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3187,"name":"bool","nodeType":"ElementaryTypeName","src":"12944:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12943:14:16"},"scope":3293,"src":"12839:7051:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3226,"nodeType":"Block","src":"20764:620:16","statements":[{"AST":{"nodeType":"YulBlock","src":"20799:579:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20856:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20874:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20868:5:16"},"nodeType":"YulFunctionCall","src":"20868:11:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"20860:4:16","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20900:4:16"},{"name":"selector","nodeType":"YulIdentifier","src":"20906:8:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20893:6:16"},"nodeType":"YulFunctionCall","src":"20893:22:16"},"nodeType":"YulExpressionStatement","src":"20893:22:16"},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20939:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"20945:4:16","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20935:3:16"},"nodeType":"YulFunctionCall","src":"20935:15:16"},{"name":"to","nodeType":"YulIdentifier","src":"20952:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20928:6:16"},"nodeType":"YulFunctionCall","src":"20928:27:16"},"nodeType":"YulExpressionStatement","src":"20928:27:16"},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20979:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"20985:4:16","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20975:3:16"},"nodeType":"YulFunctionCall","src":"20975:15:16"},{"name":"amount","nodeType":"YulIdentifier","src":"20992:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20968:6:16"},"nodeType":"YulFunctionCall","src":"20968:31:16"},"nodeType":"YulExpressionStatement","src":"20968:31:16"},{"nodeType":"YulAssignment","src":"21012:55:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"21028:3:16"},"nodeType":"YulFunctionCall","src":"21028:5:16"},{"name":"token","nodeType":"YulIdentifier","src":"21035:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"21042:1:16","type":"","value":"0"},{"name":"data","nodeType":"YulIdentifier","src":"21045:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"21051:4:16","type":"","value":"0x44"},{"kind":"number","nodeType":"YulLiteral","src":"21057:3:16","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"21062:4:16","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"21023:4:16"},"nodeType":"YulFunctionCall","src":"21023:44:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"21012:7:16"}]},{"body":{"nodeType":"YulBlock","src":"21091:277:16","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"21156:76:16","statements":[{"nodeType":"YulAssignment","src":"21178:36:16","value":{"arguments":[{"arguments":[{"name":"token","nodeType":"YulIdentifier","src":"21204:5:16"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"21192:11:16"},"nodeType":"YulFunctionCall","src":"21192:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"21212:1:16","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21189:2:16"},"nodeType":"YulFunctionCall","src":"21189:25:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"21178:7:16"}]}]},"nodeType":"YulCase","src":"21149:83:16","value":{"kind":"number","nodeType":"YulLiteral","src":"21154:1:16","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"21257:97:16","statements":[{"nodeType":"YulAssignment","src":"21279:57:16","value":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"21297:14:16"},"nodeType":"YulFunctionCall","src":"21297:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"21315:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21294:2:16"},"nodeType":"YulFunctionCall","src":"21294:24:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21329:1:16","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21323:5:16"},"nodeType":"YulFunctionCall","src":"21323:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"21333:1:16","type":"","value":"1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21320:2:16"},"nodeType":"YulFunctionCall","src":"21320:15:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21290:3:16"},"nodeType":"YulFunctionCall","src":"21290:46:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"21279:7:16"}]}]},"nodeType":"YulCase","src":"21249:105:16","value":"default"}],"expression":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"21116:14:16"},"nodeType":"YulFunctionCall","src":"21116:16:16"},"nodeType":"YulSwitch","src":"21109:245:16"}]},"condition":{"name":"success","nodeType":"YulIdentifier","src":"21083:7:16"},"nodeType":"YulIf","src":"21080:288:16"}]},"evmVersion":"london","externalReferences":[{"declaration":3220,"isOffset":false,"isSlot":false,"src":"20992:6:16","valueSize":1},{"declaration":3216,"isOffset":false,"isSlot":false,"src":"20906:8:16","valueSize":1},{"declaration":3223,"isOffset":false,"isSlot":false,"src":"21012:7:16","valueSize":1},{"declaration":3223,"isOffset":false,"isSlot":false,"src":"21083:7:16","valueSize":1},{"declaration":3223,"isOffset":false,"isSlot":false,"src":"21178:7:16","valueSize":1},{"declaration":3223,"isOffset":false,"isSlot":false,"src":"21279:7:16","valueSize":1},{"declaration":3218,"isOffset":false,"isSlot":false,"src":"20952:2:16","valueSize":1},{"declaration":3214,"isOffset":false,"isSlot":false,"src":"21035:5:16","valueSize":1},{"declaration":3214,"isOffset":false,"isSlot":false,"src":"21204:5:16","valueSize":1}],"flags":["memory-safe"],"id":3225,"nodeType":"InlineAssembly","src":"20774:604:16"}]},"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"19896:716:16","text":" @dev Executes a low level call to a token contract, making it resistant to reversion and erroneous boolean returns.\n @param token The IERC20 token contract on which the call will be made.\n @param selector The function signature that is to be called on the token contract.\n @param to The address to which the token amount will be transferred.\n @param amount The token amount to be transferred.\n @return success A boolean indicating if the call was successful. Returns 'true' on success and 'false' on failure. \n In case of success but no returned data, validates that the contract code exists.\n In case of returned data, ensures that it's a boolean `true`."},"id":3227,"implemented":true,"kind":"function","modifiers":[],"name":"_makeCall","nameLocation":"20626:9:16","nodeType":"FunctionDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"token","nameLocation":"20652:5:16","nodeType":"VariableDeclaration","scope":3227,"src":"20645:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3213,"nodeType":"UserDefinedTypeName","pathNode":{"id":3212,"name":"IERC20","nameLocations":["20645:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"20645:6:16"},"referencedDeclaration":3874,"src":"20645:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"selector","nameLocation":"20674:8:16","nodeType":"VariableDeclaration","scope":3227,"src":"20667:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3215,"name":"bytes4","nodeType":"ElementaryTypeName","src":"20667:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"to","nameLocation":"20700:2:16","nodeType":"VariableDeclaration","scope":3227,"src":"20692:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3217,"name":"address","nodeType":"ElementaryTypeName","src":"20692:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"amount","nameLocation":"20720:6:16","nodeType":"VariableDeclaration","scope":3227,"src":"20712:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"20712:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20635:97:16"},"returnParameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"success","nameLocation":"20755:7:16","nodeType":"VariableDeclaration","scope":3227,"src":"20750:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3222,"name":"bool","nodeType":"ElementaryTypeName","src":"20750:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20749:14:16"},"scope":3293,"src":"20617:767:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3248,"nodeType":"Block","src":"21718:421:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3236,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"21732:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21741:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21732:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3247,"nodeType":"IfStatement","src":"21728:405:16","trueBody":{"id":3246,"nodeType":"Block","src":"21744:389:16","statements":[{"assignments":[3240],"declarations":[{"constant":false,"id":3240,"mutability":"mutable","name":"selector","nameLocation":"21765:8:16","nodeType":"VariableDeclaration","scope":3246,"src":"21758:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3239,"name":"bytes4","nodeType":"ElementaryTypeName","src":"21758:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":3244,"initialValue":{"expression":{"expression":{"id":3241,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"21776:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$1653_$","typeString":"type(contract IWETH)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21782:7:16","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"21776:13:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$__$returns$__$","typeString":"function IWETH.deposit() payable"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21790:8:16","memberName":"selector","nodeType":"MemberAccess","src":"21776:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"21758:40:16"},{"AST":{"nodeType":"YulBlock","src":"21837:286:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21905:1:16","type":"","value":"0"},{"name":"selector","nodeType":"YulIdentifier","src":"21908:8:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21898:6:16"},"nodeType":"YulFunctionCall","src":"21898:19:16"},"nodeType":"YulExpressionStatement","src":"21898:19:16"},{"body":{"nodeType":"YulBlock","src":"21983:126:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22020:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22023:1:16","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22026:14:16"},"nodeType":"YulFunctionCall","src":"22026:16:16"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"22005:14:16"},"nodeType":"YulFunctionCall","src":"22005:38:16"},"nodeType":"YulExpressionStatement","src":"22005:38:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22071:1:16","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22074:14:16"},"nodeType":"YulFunctionCall","src":"22074:16:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22064:6:16"},"nodeType":"YulFunctionCall","src":"22064:27:16"},"nodeType":"YulExpressionStatement","src":"22064:27:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"21949:3:16"},"nodeType":"YulFunctionCall","src":"21949:5:16"},{"name":"weth","nodeType":"YulIdentifier","src":"21956:4:16"},{"name":"amount","nodeType":"YulIdentifier","src":"21962:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"21970:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21973:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21976:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21979:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"21944:4:16"},"nodeType":"YulFunctionCall","src":"21944:37:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21937:6:16"},"nodeType":"YulFunctionCall","src":"21937:45:16"},"nodeType":"YulIf","src":"21934:175:16"}]},"evmVersion":"london","externalReferences":[{"declaration":3233,"isOffset":false,"isSlot":false,"src":"21962:6:16","valueSize":1},{"declaration":3240,"isOffset":false,"isSlot":false,"src":"21908:8:16","valueSize":1},{"declaration":3231,"isOffset":false,"isSlot":false,"src":"21956:4:16","valueSize":1}],"flags":["memory-safe"],"id":3245,"nodeType":"InlineAssembly","src":"21812:311:16"}]}}]},"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"21390:265:16","text":" @notice Safely deposits a specified amount of Ether into the IWETH contract. Consumes less gas then regular `IWETH.deposit`.\n @param weth The IWETH token contract.\n @param amount The amount of Ether to deposit into the IWETH contract."},"id":3249,"implemented":true,"kind":"function","modifiers":[],"name":"safeDeposit","nameLocation":"21669:11:16","nodeType":"FunctionDefinition","parameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"weth","nameLocation":"21687:4:16","nodeType":"VariableDeclaration","scope":3249,"src":"21681:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$1653","typeString":"contract IWETH"},"typeName":{"id":3230,"nodeType":"UserDefinedTypeName","pathNode":{"id":3229,"name":"IWETH","nameLocations":["21681:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"21681:5:16"},"referencedDeclaration":1653,"src":"21681:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$1653","typeString":"contract IWETH"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"amount","nameLocation":"21701:6:16","nodeType":"VariableDeclaration","scope":3249,"src":"21693:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"21693:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21680:28:16"},"returnParameters":{"id":3235,"nodeType":"ParameterList","parameters":[],"src":"21718:0:16"},"scope":3293,"src":"21660:479:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3265,"nodeType":"Block","src":"22563:426:16","statements":[{"assignments":[3259],"declarations":[{"constant":false,"id":3259,"mutability":"mutable","name":"selector","nameLocation":"22580:8:16","nodeType":"VariableDeclaration","scope":3265,"src":"22573:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3258,"name":"bytes4","nodeType":"ElementaryTypeName","src":"22573:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":3263,"initialValue":{"expression":{"expression":{"id":3260,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"22591:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$1653_$","typeString":"type(contract IWETH)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22597:8:16","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":1652,"src":"22591:14:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_uint256_$returns$__$","typeString":"function IWETH.withdraw(uint256)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22606:8:16","memberName":"selector","nodeType":"MemberAccess","src":"22591:23:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"22573:41:16"},{"AST":{"nodeType":"YulBlock","src":"22649:334:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22714:1:16","type":"","value":"0"},{"name":"selector","nodeType":"YulIdentifier","src":"22717:8:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22707:6:16"},"nodeType":"YulFunctionCall","src":"22707:19:16"},"nodeType":"YulExpressionStatement","src":"22707:19:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22746:1:16","type":"","value":"4"},{"name":"amount","nodeType":"YulIdentifier","src":"22749:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22739:6:16"},"nodeType":"YulFunctionCall","src":"22739:17:16"},"nodeType":"YulExpressionStatement","src":"22739:17:16"},{"body":{"nodeType":"YulBlock","src":"22816:157:16","statements":[{"nodeType":"YulVariableDeclaration","src":"22834:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22851:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22845:5:16"},"nodeType":"YulFunctionCall","src":"22845:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"22838:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22888:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"22893:1:16","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22896:14:16"},"nodeType":"YulFunctionCall","src":"22896:16:16"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"22873:14:16"},"nodeType":"YulFunctionCall","src":"22873:40:16"},"nodeType":"YulExpressionStatement","src":"22873:40:16"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22937:3:16"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22942:14:16"},"nodeType":"YulFunctionCall","src":"22942:16:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22930:6:16"},"nodeType":"YulFunctionCall","src":"22930:29:16"},"nodeType":"YulExpressionStatement","src":"22930:29:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"22784:3:16"},"nodeType":"YulFunctionCall","src":"22784:5:16"},{"name":"weth","nodeType":"YulIdentifier","src":"22791:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"22797:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22800:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22803:4:16","type":"","value":"0x24"},{"kind":"number","nodeType":"YulLiteral","src":"22809:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22812:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"22779:4:16"},"nodeType":"YulFunctionCall","src":"22779:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22772:6:16"},"nodeType":"YulFunctionCall","src":"22772:43:16"},"nodeType":"YulIf","src":"22769:204:16"}]},"evmVersion":"london","externalReferences":[{"declaration":3255,"isOffset":false,"isSlot":false,"src":"22749:6:16","valueSize":1},{"declaration":3259,"isOffset":false,"isSlot":false,"src":"22717:8:16","valueSize":1},{"declaration":3253,"isOffset":false,"isSlot":false,"src":"22791:4:16","valueSize":1}],"flags":["memory-safe"],"id":3264,"nodeType":"InlineAssembly","src":"22624:359:16"}]},"documentation":{"id":3250,"nodeType":"StructuredDocumentation","src":"22145:354:16","text":" @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract. Consumes less gas then regular `IWETH.withdraw`.\n @dev Uses inline assembly to interact with the IWETH contract.\n @param weth The IWETH token contract.\n @param amount The amount of wrapped Ether to withdraw from the IWETH contract."},"id":3266,"implemented":true,"kind":"function","modifiers":[],"name":"safeWithdraw","nameLocation":"22513:12:16","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"weth","nameLocation":"22532:4:16","nodeType":"VariableDeclaration","scope":3266,"src":"22526:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$1653","typeString":"contract IWETH"},"typeName":{"id":3252,"nodeType":"UserDefinedTypeName","pathNode":{"id":3251,"name":"IWETH","nameLocations":["22526:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"22526:5:16"},"referencedDeclaration":1653,"src":"22526:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$1653","typeString":"contract IWETH"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"amount","nameLocation":"22546:6:16","nodeType":"VariableDeclaration","scope":3266,"src":"22538:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"22538:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22525:28:16"},"returnParameters":{"id":3257,"nodeType":"ParameterList","parameters":[],"src":"22563:0:16"},"scope":3293,"src":"22504:485:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3291,"nodeType":"Block","src":"23444:436:16","statements":[{"expression":{"arguments":[{"id":3278,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"23467:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$1653","typeString":"contract IWETH"}},{"id":3279,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"23473:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$1653","typeString":"contract IWETH"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3277,"name":"safeWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"23454:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IWETH_$1653_$_t_uint256_$returns$__$","typeString":"function (contract IWETH,uint256)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23454:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3281,"nodeType":"ExpressionStatement","src":"23454:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3282,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"23494:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3285,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23508:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$3293","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$3293","typeString":"library SafeERC20"}],"id":3284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23500:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3283,"name":"address","nodeType":"ElementaryTypeName","src":"23500:7:16","typeDescriptions":{}}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23500:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23494:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3290,"nodeType":"IfStatement","src":"23490:384:16","trueBody":{"id":3289,"nodeType":"Block","src":"23515:359:16","statements":[{"AST":{"nodeType":"YulBlock","src":"23554:310:16","statements":[{"body":{"nodeType":"YulBlock","src":"23677:173:16","statements":[{"nodeType":"YulVariableDeclaration","src":"23699:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23716:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23710:5:16"},"nodeType":"YulFunctionCall","src":"23710:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"23703:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"23757:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"23762:1:16","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"23765:14:16"},"nodeType":"YulFunctionCall","src":"23765:16:16"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"23742:14:16"},"nodeType":"YulFunctionCall","src":"23742:40:16"},"nodeType":"YulExpressionStatement","src":"23742:40:16"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"23810:3:16"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"23815:14:16"},"nodeType":"YulFunctionCall","src":"23815:16:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23803:6:16"},"nodeType":"YulFunctionCall","src":"23803:29:16"},"nodeType":"YulExpressionStatement","src":"23803:29:16"}]},"condition":{"arguments":[{"arguments":[{"name":"_RAW_CALL_GAS_LIMIT","nodeType":"YulIdentifier","src":"23631:19:16"},{"name":"to","nodeType":"YulIdentifier","src":"23652:2:16"},{"name":"amount","nodeType":"YulIdentifier","src":"23656:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"23664:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23667:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23670:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23673:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"23626:4:16"},"nodeType":"YulFunctionCall","src":"23626:49:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23619:6:16"},"nodeType":"YulFunctionCall","src":"23619:57:16"},"nodeType":"YulIf","src":"23616:234:16"}]},"evmVersion":"london","externalReferences":[{"declaration":2819,"isOffset":false,"isSlot":false,"src":"23631:19:16","valueSize":1},{"declaration":3272,"isOffset":false,"isSlot":false,"src":"23656:6:16","valueSize":1},{"declaration":3274,"isOffset":false,"isSlot":false,"src":"23652:2:16","valueSize":1}],"flags":["memory-safe"],"id":3288,"nodeType":"InlineAssembly","src":"23529:335:16"}]}}]},"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"22995:371:16","text":" @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract to a specified recipient.\n Consumes less gas then regular `IWETH.withdraw`.\n @param weth The IWETH token contract.\n @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\n @param to The recipient of the withdrawn Ether."},"id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"safeWithdrawTo","nameLocation":"23380:14:16","nodeType":"FunctionDefinition","parameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"weth","nameLocation":"23401:4:16","nodeType":"VariableDeclaration","scope":3292,"src":"23395:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$1653","typeString":"contract IWETH"},"typeName":{"id":3269,"nodeType":"UserDefinedTypeName","pathNode":{"id":3268,"name":"IWETH","nameLocations":["23395:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"23395:5:16"},"referencedDeclaration":1653,"src":"23395:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$1653","typeString":"contract IWETH"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"amount","nameLocation":"23415:6:16","nodeType":"VariableDeclaration","scope":3292,"src":"23407:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"23407:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3274,"mutability":"mutable","name":"to","nameLocation":"23431:2:16","nodeType":"VariableDeclaration","scope":3292,"src":"23423:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3273,"name":"address","nodeType":"ElementaryTypeName","src":"23423:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23394:40:16"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[],"src":"23444:0:16"},"scope":3293,"src":"23371:509:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3294,"src":"730:23152:16","usedErrors":[2798,2800,2802,2804,2806,2808,2810]}],"src":"33:23850:16"},"id":16},"contracts/libraries/StringUtil.sol":{"ast":{"absolutePath":"contracts/libraries/StringUtil.sol","exportedSymbols":{"StringUtil":[3337]},"id":3338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3295,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"StringUtil","contractDependencies":[],"contractKind":"library","documentation":{"id":3296,"nodeType":"StructuredDocumentation","src":"58:56:17","text":"@title Library with gas-efficient string operations"},"fullyImplemented":true,"id":3337,"linearizedBaseContracts":[3337],"name":"StringUtil","nameLocation":"122:10:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3310,"nodeType":"Block","src":"207:54:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"247:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3304,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"230:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"234:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"230:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"230:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3303,"name":"toHex","nodeType":"Identifier","overloadedDeclarations":[3311,3326,3336],"referencedDeclaration":3336,"src":"224:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"224:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3302,"id":3309,"nodeType":"Return","src":"217:37:17"}]},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"toHex","nameLocation":"148:5:17","nodeType":"FunctionDefinition","parameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"value","nameLocation":"162:5:17","nodeType":"VariableDeclaration","scope":3311,"src":"154:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"154:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"153:15:17"},"returnParameters":{"id":3302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3311,"src":"192:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3300,"name":"string","nodeType":"ElementaryTypeName","src":"192:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"191:15:17"},"scope":3337,"src":"139:122:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3325,"nodeType":"Block","src":"335:54:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"375:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3319,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"358:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"362:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"358:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"358:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3318,"name":"toHex","nodeType":"Identifier","overloadedDeclarations":[3311,3326,3336],"referencedDeclaration":3336,"src":"352:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"352:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3317,"id":3324,"nodeType":"Return","src":"345:37:17"}]},"id":3326,"implemented":true,"kind":"function","modifiers":[],"name":"toHex","nameLocation":"276:5:17","nodeType":"FunctionDefinition","parameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"value","nameLocation":"290:5:17","nodeType":"VariableDeclaration","scope":3326,"src":"282:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3312,"name":"address","nodeType":"ElementaryTypeName","src":"282:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"281:15:17"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3326,"src":"320:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3315,"name":"string","nodeType":"ElementaryTypeName","src":"320:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"319:15:17"},"scope":3337,"src":"267:122:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3335,"nodeType":"Block","src":"621:3053:17","statements":[{"AST":{"nodeType":"YulBlock","src":"656:3012:17","statements":[{"body":{"nodeType":"YulBlock","src":"748:1840:17","statements":[{"nodeType":"YulAssignment","src":"766:239:17","value":{"arguments":[{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"804:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"811:66:17","type":"","value":"0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"800:3:17"},"nodeType":"YulFunctionCall","src":"800:78:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"904:2:17","type":"","value":"64"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"912:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"919:66:17","type":"","value":"0x0000000000000000FFFFFFFFFFFFFFFF00000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"908:3:17"},"nodeType":"YulFunctionCall","src":"908:78:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"900:3:17"},"nodeType":"YulFunctionCall","src":"900:87:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"776:2:17"},"nodeType":"YulFunctionCall","src":"776:229:17"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"766:6:17"}]},{"nodeType":"YulAssignment","src":"1022:241:17","value":{"arguments":[{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"1060:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1068:66:17","type":"","value":"0xFFFFFFFF000000000000000000000000FFFFFFFF000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1056:3:17"},"nodeType":"YulFunctionCall","src":"1056:79:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1161:2:17","type":"","value":"32"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"1169:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1177:66:17","type":"","value":"0x00000000FFFFFFFF000000000000000000000000FFFFFFFF0000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1165:3:17"},"nodeType":"YulFunctionCall","src":"1165:79:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1157:3:17"},"nodeType":"YulFunctionCall","src":"1157:88:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1032:2:17"},"nodeType":"YulFunctionCall","src":"1032:231:17"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"1022:6:17"}]},{"nodeType":"YulAssignment","src":"1280:241:17","value":{"arguments":[{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"1318:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1326:66:17","type":"","value":"0xFFFF000000000000FFFF000000000000FFFF000000000000FFFF000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1314:3:17"},"nodeType":"YulFunctionCall","src":"1314:79:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1419:2:17","type":"","value":"16"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"1427:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1435:66:17","type":"","value":"0x0000FFFF000000000000FFFF000000000000FFFF000000000000FFFF00000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1423:3:17"},"nodeType":"YulFunctionCall","src":"1423:79:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1415:3:17"},"nodeType":"YulFunctionCall","src":"1415:88:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1290:2:17"},"nodeType":"YulFunctionCall","src":"1290:231:17"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"1280:6:17"}]},{"nodeType":"YulAssignment","src":"1538:240:17","value":{"arguments":[{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"1576:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1584:66:17","type":"","value":"0xFF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1572:3:17"},"nodeType":"YulFunctionCall","src":"1572:79:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1677:1:17","type":"","value":"8"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"1684:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1692:66:17","type":"","value":"0x00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:17"},"nodeType":"YulFunctionCall","src":"1680:79:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1673:3:17"},"nodeType":"YulFunctionCall","src":"1673:87:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1548:2:17"},"nodeType":"YulFunctionCall","src":"1548:230:17"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"1538:6:17"}]},{"nodeType":"YulAssignment","src":"1795:248:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1833:1:17","type":"","value":"4"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"1840:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1848:66:17","type":"","value":"0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1836:3:17"},"nodeType":"YulFunctionCall","src":"1836:79:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1829:3:17"},"nodeType":"YulFunctionCall","src":"1829:87:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1942:1:17","type":"","value":"8"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"1949:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1957:66:17","type":"","value":"0x0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1945:3:17"},"nodeType":"YulFunctionCall","src":"1945:79:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1938:3:17"},"nodeType":"YulFunctionCall","src":"1938:87:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1805:2:17"},"nodeType":"YulFunctionCall","src":"1805:238:17"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"1795:6:17"}]},{"nodeType":"YulAssignment","src":"2060:514:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2099:66:17","type":"","value":"0x3030303030303030303030303030303030303030303030303030303030303030"},{"name":"output","nodeType":"YulIdentifier","src":"2167:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2095:3:17"},"nodeType":"YulFunctionCall","src":"2095:79:17"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2262:1:17","type":"","value":"4"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"2269:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2277:66:17","type":"","value":"0x0606060606060606060606060606060606060606060606060606060606060606"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2265:3:17"},"nodeType":"YulFunctionCall","src":"2265:79:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2258:3:17"},"nodeType":"YulFunctionCall","src":"2258:87:17"},{"kind":"number","nodeType":"YulLiteral","src":"2375:66:17","type":"","value":"0x0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2225:3:17"},"nodeType":"YulFunctionCall","src":"2225:242:17"},{"kind":"number","nodeType":"YulLiteral","src":"2493:1:17","type":"","value":"7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2196:3:17"},"nodeType":"YulFunctionCall","src":"2196:360:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2070:3:17"},"nodeType":"YulFunctionCall","src":"2070:504:17"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"2060:6:17"}]}]},"name":"_toHex16","nodeType":"YulFunctionDefinition","parameters":[{"name":"input","nodeType":"YulTypedName","src":"731:5:17","type":""}],"returnVariables":[{"name":"output","nodeType":"YulTypedName","src":"741:6:17","type":""}],"src":"713:1875:17"},{"nodeType":"YulAssignment","src":"2602:21:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2618:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2612:5:17"},"nodeType":"YulFunctionCall","src":"2612:11:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2602:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"2636:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2656:4:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2650:5:17"},"nodeType":"YulFunctionCall","src":"2650:11:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2640:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2674:34:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2698:1:17","type":"","value":"1"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2694:3:17"},"nodeType":"YulFunctionCall","src":"2694:14:17"},"variables":[{"name":"resultLength","nodeType":"YulTypedName","src":"2678:12:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2721:30:17","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"2738:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2746:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2734:3:17"},"nodeType":"YulFunctionCall","src":"2734:17:17"},"variables":[{"name":"toPtr","nodeType":"YulTypedName","src":"2725:5:17","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2813:4:17","type":"","value":"0x40"},{"arguments":[{"name":"toPtr","nodeType":"YulIdentifier","src":"2823:5:17"},{"name":"resultLength","nodeType":"YulIdentifier","src":"2830:12:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2819:3:17"},"nodeType":"YulFunctionCall","src":"2819:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2806:6:17"},"nodeType":"YulFunctionCall","src":"2806:38:17"},"nodeType":"YulExpressionStatement","src":"2806:38:17"},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"2896:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2904:1:17","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:17"},"nodeType":"YulFunctionCall","src":"2892:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"2908:6:17","type":"","value":"0x3078"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2885:6:17"},"nodeType":"YulFunctionCall","src":"2885:30:17"},"nodeType":"YulExpressionStatement","src":"2885:30:17"},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3062:6:17"},{"arguments":[{"name":"resultLength","nodeType":"YulIdentifier","src":"3074:12:17"},{"kind":"number","nodeType":"YulLiteral","src":"3088:1:17","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3070:3:17"},"nodeType":"YulFunctionCall","src":"3070:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3055:6:17"},"nodeType":"YulFunctionCall","src":"3055:36:17"},"nodeType":"YulExpressionStatement","src":"3055:36:17"},{"body":{"nodeType":"YulBlock","src":"3331:327:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3349:29:17","value":{"arguments":[{"name":"fromPtr","nodeType":"YulIdentifier","src":"3370:7:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3364:5:17"},"nodeType":"YulFunctionCall","src":"3364:14:17"},"variables":[{"name":"rawData","nodeType":"YulTypedName","src":"3353:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3395:32:17","value":{"arguments":[{"name":"rawData","nodeType":"YulIdentifier","src":"3419:7:17"}],"functionName":{"name":"_toHex16","nodeType":"YulIdentifier","src":"3410:8:17"},"nodeType":"YulFunctionCall","src":"3410:17:17"},"variables":[{"name":"hexData","nodeType":"YulTypedName","src":"3399:7:17","type":""}]},{"expression":{"arguments":[{"name":"toPtr","nodeType":"YulIdentifier","src":"3451:5:17"},{"name":"hexData","nodeType":"YulIdentifier","src":"3458:7:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3444:6:17"},"nodeType":"YulFunctionCall","src":"3444:22:17"},"nodeType":"YulExpressionStatement","src":"3444:22:17"},{"nodeType":"YulAssignment","src":"3483:25:17","value":{"arguments":[{"name":"toPtr","nodeType":"YulIdentifier","src":"3496:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3503:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3492:3:17"},"nodeType":"YulFunctionCall","src":"3492:16:17"},"variableNames":[{"name":"toPtr","nodeType":"YulIdentifier","src":"3483:5:17"}]},{"nodeType":"YulAssignment","src":"3525:38:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3549:3:17","type":"","value":"128"},{"name":"rawData","nodeType":"YulIdentifier","src":"3554:7:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3545:3:17"},"nodeType":"YulFunctionCall","src":"3545:17:17"}],"functionName":{"name":"_toHex16","nodeType":"YulIdentifier","src":"3536:8:17"},"nodeType":"YulFunctionCall","src":"3536:27:17"},"variableNames":[{"name":"hexData","nodeType":"YulIdentifier","src":"3525:7:17"}]},{"expression":{"arguments":[{"name":"toPtr","nodeType":"YulIdentifier","src":"3587:5:17"},{"name":"hexData","nodeType":"YulIdentifier","src":"3594:7:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3580:6:17"},"nodeType":"YulFunctionCall","src":"3580:22:17"},"nodeType":"YulExpressionStatement","src":"3580:22:17"},{"nodeType":"YulAssignment","src":"3619:25:17","value":{"arguments":[{"name":"toPtr","nodeType":"YulIdentifier","src":"3632:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3639:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3628:3:17"},"nodeType":"YulFunctionCall","src":"3628:16:17"},"variableNames":[{"name":"toPtr","nodeType":"YulIdentifier","src":"3619:5:17"}]}]},"condition":{"arguments":[{"name":"fromPtr","nodeType":"YulIdentifier","src":"3252:7:17"},{"name":"endPtr","nodeType":"YulIdentifier","src":"3261:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3249:2:17"},"nodeType":"YulFunctionCall","src":"3249:19:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3269:61:17","statements":[{"nodeType":"YulAssignment","src":"3287:29:17","value":{"arguments":[{"name":"fromPtr","nodeType":"YulIdentifier","src":"3302:7:17"},{"kind":"number","nodeType":"YulLiteral","src":"3311:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3298:3:17"},"nodeType":"YulFunctionCall","src":"3298:18:17"},"variableNames":[{"name":"fromPtr","nodeType":"YulIdentifier","src":"3287:7:17"}]}]},"pre":{"nodeType":"YulBlock","src":"3135:113:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3153:30:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3172:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3178:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3168:3:17"},"nodeType":"YulFunctionCall","src":"3168:15:17"},"variables":[{"name":"fromPtr","nodeType":"YulTypedName","src":"3157:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3200:34:17","value":{"arguments":[{"name":"fromPtr","nodeType":"YulIdentifier","src":"3218:7:17"},{"name":"length","nodeType":"YulIdentifier","src":"3227:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3214:3:17"},"nodeType":"YulFunctionCall","src":"3214:20:17"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"3204:6:17","type":""}]}]},"src":"3131:527:17"}]},"evmVersion":"london","externalReferences":[{"declaration":3329,"isOffset":false,"isSlot":false,"src":"2656:4:17","valueSize":1},{"declaration":3329,"isOffset":false,"isSlot":false,"src":"3172:4:17","valueSize":1},{"declaration":3332,"isOffset":false,"isSlot":false,"src":"2602:6:17","valueSize":1},{"declaration":3332,"isOffset":false,"isSlot":false,"src":"2738:6:17","valueSize":1},{"declaration":3332,"isOffset":false,"isSlot":false,"src":"2896:6:17","valueSize":1},{"declaration":3332,"isOffset":false,"isSlot":false,"src":"3062:6:17","valueSize":1}],"flags":["memory-safe"],"id":3334,"nodeType":"InlineAssembly","src":"631:3037:17"}]},"documentation":{"id":3327,"nodeType":"StructuredDocumentation","src":"395:142:17","text":"@dev this is the assembly adaptation of highly optimized toHex16 code from Mikhail Vladimirov\n https://stackoverflow.com/a/69266989"},"id":3336,"implemented":true,"kind":"function","modifiers":[],"name":"toHex","nameLocation":"551:5:17","nodeType":"FunctionDefinition","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"data","nameLocation":"570:4:17","nodeType":"VariableDeclaration","scope":3336,"src":"557:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3328,"name":"bytes","nodeType":"ElementaryTypeName","src":"557:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"556:19:17"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"result","nameLocation":"613:6:17","nodeType":"VariableDeclaration","scope":3336,"src":"599:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3331,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"598:22:17"},"scope":3337,"src":"542:3132:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3338,"src":"114:3562:17","usedErrors":[]}],"src":"33:3644:17"},"id":17},"contracts/libraries/UniERC20.sol":{"ast":{"absolutePath":"contracts/libraries/UniERC20.sol","exportedSymbols":{"IDaiLikePermit":[1554],"IERC20":[3874],"IERC20Metadata":[3899],"IERC20MetadataUppercase":[1567],"IERC20Permit":[3935],"IPermit2":[1627],"IWETH":[1653],"RevertReasonForwarder":[2666],"SafeERC20":[3293],"StringUtil":[3337],"UniERC20":[3782]},"id":3783,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3339,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:18"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3783,"sourceUnit":3875,"src":"58:56:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":3341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3783,"sourceUnit":3900,"src":"115:75:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC20MetadataUppercase.sol","file":"../interfaces/IERC20MetadataUppercase.sol","id":3342,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3783,"sourceUnit":1568,"src":"191:51:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/SafeERC20.sol","file":"./SafeERC20.sol","id":3343,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3783,"sourceUnit":3294,"src":"243:25:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/StringUtil.sol","file":"./StringUtil.sol","id":3344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3783,"sourceUnit":3338,"src":"269:26:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UniERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":3345,"nodeType":"StructuredDocumentation","src":"297:117:18","text":"@title Library, which allows usage of ETH as ERC20 and ERC20 itself. Uses SafeERC20 library for ERC20 interface."},"fullyImplemented":true,"id":3782,"linearizedBaseContracts":[3782],"name":"UniERC20","nameLocation":"422:8:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3349,"libraryName":{"id":3346,"name":"SafeERC20","nameLocations":["443:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":3293,"src":"443:9:18"},"nodeType":"UsingForDirective","src":"437:27:18","typeName":{"id":3348,"nodeType":"UserDefinedTypeName","pathNode":{"id":3347,"name":"IERC20","nameLocations":["457:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"457:6:18"},"referencedDeclaration":3874,"src":"457:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}}},{"errorSelector":"f4d678b8","id":3351,"name":"InsufficientBalance","nameLocation":"476:19:18","nodeType":"ErrorDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[],"src":"495:2:18"},"src":"470:28:18"},{"errorSelector":"4ca17a99","id":3353,"name":"ApproveCalledOnETH","nameLocation":"509:18:18","nodeType":"ErrorDefinition","parameters":{"id":3352,"nodeType":"ParameterList","parameters":[],"src":"527:2:18"},"src":"503:27:18"},{"errorSelector":"e2f844a0","id":3355,"name":"NotEnoughValue","nameLocation":"541:14:18","nodeType":"ErrorDefinition","parameters":{"id":3354,"nodeType":"ParameterList","parameters":[],"src":"555:2:18"},"src":"535:23:18"},{"errorSelector":"2a9c363d","id":3357,"name":"FromIsNotSender","nameLocation":"569:15:18","nodeType":"ErrorDefinition","parameters":{"id":3356,"nodeType":"ParameterList","parameters":[],"src":"584:2:18"},"src":"563:24:18"},{"errorSelector":"57ca390a","id":3359,"name":"ToIsNotThis","nameLocation":"598:11:18","nodeType":"ErrorDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[],"src":"609:2:18"},"src":"592:20:18"},{"errorSelector":"b12d13eb","id":3361,"name":"ETHTransferFailed","nameLocation":"623:17:18","nodeType":"ErrorDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[],"src":"640:2:18"},"src":"617:26:18"},{"constant":true,"id":3364,"mutability":"constant","name":"_RAW_CALL_GAS_LIMIT","nameLocation":"674:19:18","nodeType":"VariableDeclaration","scope":3782,"src":"649:51:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"649:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35303030","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"696:4:18","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"visibility":"private"},{"constant":true,"id":3370,"mutability":"constant","name":"_ETH_ADDRESS","nameLocation":"730:12:18","nodeType":"VariableDeclaration","scope":3782,"src":"706:89:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3366,"nodeType":"UserDefinedTypeName","pathNode":{"id":3365,"name":"IERC20","nameLocations":["706:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"706:6:18"},"referencedDeclaration":3874,"src":"706:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"value":{"arguments":[{"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:42:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3367,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"745:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3874_$","typeString":"type(contract IERC20)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"745:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"private"},{"constant":true,"id":3379,"mutability":"constant","name":"_ZERO_ADDRESS","nameLocation":"825:13:18","nodeType":"VariableDeclaration","scope":3782,"src":"801:58:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3372,"nodeType":"UserDefinedTypeName","pathNode":{"id":3371,"name":"IERC20","nameLocations":["801:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"801:6:18"},"referencedDeclaration":3874,"src":"801:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"value":{"arguments":[{"arguments":[{"hexValue":"30","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"856:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"848:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3374,"name":"address","nodeType":"ElementaryTypeName","src":"848:7:18","typeDescriptions":{}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"848:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3373,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"841:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3874_$","typeString":"type(contract IERC20)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"841:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"private"},{"body":{"id":3397,"nodeType":"Block","src":"969:73:18","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"987:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3389,"name":"_ZERO_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"996:13:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"src":"987:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"1013:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3392,"name":"_ETH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"1022:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"src":"1013:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"987:47:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"986:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3387,"id":3396,"nodeType":"Return","src":"979:56:18"}]},"documentation":{"id":3380,"nodeType":"StructuredDocumentation","src":"866:40:18","text":"@dev Returns true if `token` is ETH."},"id":3398,"implemented":true,"kind":"function","modifiers":[],"name":"isETH","nameLocation":"920:5:18","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"token","nameLocation":"933:5:18","nodeType":"VariableDeclaration","scope":3398,"src":"926:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3382,"nodeType":"UserDefinedTypeName","pathNode":{"id":3381,"name":"IERC20","nameLocations":["926:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"926:6:18"},"referencedDeclaration":3874,"src":"926:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"925:14:18"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3398,"src":"963:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3385,"name":"bool","nodeType":"ElementaryTypeName","src":"963:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"962:6:18"},"scope":3782,"src":"911:131:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3423,"nodeType":"Block","src":"1187:143:18","statements":[{"condition":{"arguments":[{"id":3410,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"1207:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}],"id":3409,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"1201:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$3874_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1201:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3421,"nodeType":"Block","src":"1268:56:18","statements":[{"expression":{"arguments":[{"id":3418,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"1305:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3416,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"1289:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1295:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"1289:15:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3408,"id":3420,"nodeType":"Return","src":"1282:31:18"}]},"id":3422,"nodeType":"IfStatement","src":"1197:127:18","trueBody":{"id":3415,"nodeType":"Block","src":"1215:47:18","statements":[{"expression":{"expression":{"id":3412,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"1236:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1244:7:18","memberName":"balance","nodeType":"MemberAccess","src":"1236:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3408,"id":3414,"nodeType":"Return","src":"1229:22:18"}]}}]},"documentation":{"id":3399,"nodeType":"StructuredDocumentation","src":"1048:49:18","text":"@dev Returns `account` ERC20 `token` balance."},"id":3424,"implemented":true,"kind":"function","modifiers":[],"name":"uniBalanceOf","nameLocation":"1111:12:18","nodeType":"FunctionDefinition","parameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"token","nameLocation":"1131:5:18","nodeType":"VariableDeclaration","scope":3424,"src":"1124:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3401,"nodeType":"UserDefinedTypeName","pathNode":{"id":3400,"name":"IERC20","nameLocations":["1124:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"1124:6:18"},"referencedDeclaration":3874,"src":"1124:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"account","nameLocation":"1146:7:18","nodeType":"VariableDeclaration","scope":3424,"src":"1138:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3403,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1123:31:18"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3424,"src":"1178:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1178:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1177:9:18"},"scope":3782,"src":"1102:228:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"1560:454:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"1574:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1583:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1574:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3479,"nodeType":"IfStatement","src":"1570:438:18","trueBody":{"id":3478,"nodeType":"Block","src":"1586:422:18","statements":[{"condition":{"arguments":[{"id":3439,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"1610:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}],"id":3438,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"1604:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$3874_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1604:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3476,"nodeType":"Block","src":"1935:63:18","statements":[{"expression":{"arguments":[{"id":3472,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"1972:2:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3473,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"1976:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3469,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"1953:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1959:12:18","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":2969,"src":"1953:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3874_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1953:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3475,"nodeType":"ExpressionStatement","src":"1953:30:18"}]},"id":3477,"nodeType":"IfStatement","src":"1600:398:18","trueBody":{"id":3468,"nodeType":"Block","src":"1618:311:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3443,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1648:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_UniERC20_$3782","typeString":"library UniERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniERC20_$3782","typeString":"library UniERC20"}],"id":3442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1640:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3441,"name":"address","nodeType":"ElementaryTypeName","src":"1640:7:18","typeDescriptions":{}}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1654:7:18","memberName":"balance","nodeType":"MemberAccess","src":"1640:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3446,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"1664:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1640:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3451,"nodeType":"IfStatement","src":"1636:64:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3448,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"1679:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3450,"nodeType":"RevertStatement","src":"1672:28:18"}},{"assignments":[3453,null],"declarations":[{"constant":false,"id":3453,"mutability":"mutable","name":"success","nameLocation":"1791:7:18","nodeType":"VariableDeclaration","scope":3468,"src":"1786:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3452,"name":"bool","nodeType":"ElementaryTypeName","src":"1786:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3461,"initialValue":{"arguments":[{"hexValue":"","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1853:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"1804:2:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1807:4:18","memberName":"call","nodeType":"MemberAccess","src":"1804:7:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":3456,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"1819:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3457,"name":"_RAW_CALL_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"1832:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1804:48:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1804:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1785:71:18"},{"condition":{"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1878:8:18","subExpression":{"id":3462,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"1879:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3467,"nodeType":"IfStatement","src":"1874:40:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3464,"name":"ETHTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"1895:17:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3466,"nodeType":"RevertStatement","src":"1888:26:18"}}]}}]}}]},"documentation":{"id":3425,"nodeType":"StructuredDocumentation","src":"1336:109:18","text":"@dev `token` transfer `to` `amount`.\n Note that this function does nothing in case of zero amount."},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"uniTransfer","nameLocation":"1459:11:18","nodeType":"FunctionDefinition","parameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3428,"mutability":"mutable","name":"token","nameLocation":"1487:5:18","nodeType":"VariableDeclaration","scope":3481,"src":"1480:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3427,"nodeType":"UserDefinedTypeName","pathNode":{"id":3426,"name":"IERC20","nameLocations":["1480:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"1480:6:18"},"referencedDeclaration":3874,"src":"1480:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"to","nameLocation":"1518:2:18","nodeType":"VariableDeclaration","scope":3481,"src":"1502:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3429,"name":"address","nodeType":"ElementaryTypeName","src":"1502:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3432,"mutability":"mutable","name":"amount","nameLocation":"1538:6:18","nodeType":"VariableDeclaration","scope":3481,"src":"1530:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1530:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1470:80:18"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[],"src":"1560:0:18"},"scope":3782,"src":"1450:564:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3565,"nodeType":"Block","src":"2277:777:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"2291:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2300:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2291:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3564,"nodeType":"IfStatement","src":"2287:761:18","trueBody":{"id":3563,"nodeType":"Block","src":"2303:745:18","statements":[{"condition":{"arguments":[{"id":3498,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"2327:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}],"id":3497,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"2321:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$3874_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3561,"nodeType":"Block","src":"2965:73:18","statements":[{"expression":{"arguments":[{"id":3556,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"3006:4:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3557,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"3012:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3558,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"3016:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3553,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"2983:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:16:18","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2902,"src":"2983:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3874_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2983:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3560,"nodeType":"ExpressionStatement","src":"2983:40:18"}]},"id":3562,"nodeType":"IfStatement","src":"2317:721:18","trueBody":{"id":3552,"nodeType":"Block","src":"2335:624:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3500,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2357:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2361:5:18","memberName":"value","nodeType":"MemberAccess","src":"2357:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3502,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"2369:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2357:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3507,"nodeType":"IfStatement","src":"2353:47:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3504,"name":"NotEnoughValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"2384:14:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2384:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3506,"nodeType":"RevertStatement","src":"2377:23:18"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3508,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"2422:4:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3509,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2430:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2434:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2430:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2422:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3515,"nodeType":"IfStatement","src":"2418:48:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3512,"name":"FromIsNotSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2449:15:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3514,"nodeType":"RevertStatement","src":"2442:24:18"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"2488:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3519,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2502:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_UniERC20_$3782","typeString":"library UniERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniERC20_$3782","typeString":"library UniERC20"}],"id":3518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2494:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3517,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:18","typeDescriptions":{}}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2494:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2488:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3525,"nodeType":"IfStatement","src":"2484:45:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3522,"name":"ToIsNotThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"2516:11:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2516:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3524,"nodeType":"RevertStatement","src":"2509:20:18"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3526,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2551:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2555:5:18","memberName":"value","nodeType":"MemberAccess","src":"2551:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3528,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"2563:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3551,"nodeType":"IfStatement","src":"2547:398:18","trueBody":{"id":3550,"nodeType":"Block","src":"2571:374:18","statements":[{"id":3549,"nodeType":"UncheckedBlock","src":"2642:285:18","statements":[{"assignments":[3531,null],"declarations":[{"constant":false,"id":3531,"mutability":"mutable","name":"success","nameLocation":"2759:7:18","nodeType":"VariableDeclaration","scope":3549,"src":"2754:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3530,"name":"bool","nodeType":"ElementaryTypeName","src":"2754:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3542,"initialValue":{"arguments":[{"hexValue":"","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2835:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3532,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"2772:4:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2777:4:18","memberName":"call","nodeType":"MemberAccess","src":"2772:9:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3534,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2789:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2793:5:18","memberName":"value","nodeType":"MemberAccess","src":"2789:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3536,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"2801:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2789:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3538,"name":"_RAW_CALL_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"2814:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2772:62:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2753:85:18"},{"condition":{"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2868:8:18","subExpression":{"id":3543,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"2869:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3548,"nodeType":"IfStatement","src":"2864:40:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3545,"name":"ETHTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"2885:17:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3547,"nodeType":"RevertStatement","src":"2878:26:18"}}]}]}}]}}]}}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"2020:116:18","text":"@dev `token` transfer `from` `to` `amount`.\n Note that this function does nothing in case of zero amount."},"id":3566,"implemented":true,"kind":"function","modifiers":[],"name":"uniTransferFrom","nameLocation":"2150:15:18","nodeType":"FunctionDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"token","nameLocation":"2182:5:18","nodeType":"VariableDeclaration","scope":3566,"src":"2175:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3484,"nodeType":"UserDefinedTypeName","pathNode":{"id":3483,"name":"IERC20","nameLocations":["2175:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"2175:6:18"},"referencedDeclaration":3874,"src":"2175:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"from","nameLocation":"2213:4:18","nodeType":"VariableDeclaration","scope":3566,"src":"2197:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3486,"name":"address","nodeType":"ElementaryTypeName","src":"2197:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"to","nameLocation":"2235:2:18","nodeType":"VariableDeclaration","scope":3566,"src":"2227:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3488,"name":"address","nodeType":"ElementaryTypeName","src":"2227:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"amount","nameLocation":"2255:6:18","nodeType":"VariableDeclaration","scope":3566,"src":"2247:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:102:18"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[],"src":"2277:0:18"},"scope":3782,"src":"2141:913:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3585,"nodeType":"Block","src":"3188:114:18","statements":[{"expression":{"arguments":[{"id":3576,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"3216:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"expression":{"expression":{"id":3577,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"3223:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$3899_$","typeString":"type(contract IERC20Metadata)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3238:6:18","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":3892,"src":"3223:21:18","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_string_memory_ptr_$","typeString":"function IERC20Metadata.symbol() view returns (string memory)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3245:8:18","memberName":"selector","nodeType":"MemberAccess","src":"3223:30:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"expression":{"expression":{"id":3580,"name":"IERC20MetadataUppercase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"3255:23:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20MetadataUppercase_$1567_$","typeString":"type(contract IERC20MetadataUppercase)"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3279:6:18","memberName":"SYMBOL","nodeType":"MemberAccess","referencedDeclaration":1566,"src":"3255:30:18","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_string_memory_ptr_$","typeString":"function IERC20MetadataUppercase.SYMBOL() view returns (string memory)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3286:8:18","memberName":"selector","nodeType":"MemberAccess","src":"3255:39:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3575,"name":"_uniDecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"3205:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$3874_$_t_bytes4_$_t_bytes4_$returns$_t_string_memory_ptr_$","typeString":"function (contract IERC20,bytes4,bytes4) view returns (string memory)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3205:90:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3574,"id":3584,"nodeType":"Return","src":"3198:97:18"}]},"documentation":{"id":3567,"nodeType":"StructuredDocumentation","src":"3060:52:18","text":"@dev Returns `token` symbol from ERC20 metadata."},"id":3586,"implemented":true,"kind":"function","modifiers":[],"name":"uniSymbol","nameLocation":"3126:9:18","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"token","nameLocation":"3143:5:18","nodeType":"VariableDeclaration","scope":3586,"src":"3136:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3569,"nodeType":"UserDefinedTypeName","pathNode":{"id":3568,"name":"IERC20","nameLocations":["3136:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"3136:6:18"},"referencedDeclaration":3874,"src":"3136:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"3135:14:18"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3586,"src":"3173:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3572,"name":"string","nodeType":"ElementaryTypeName","src":"3173:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3172:15:18"},"scope":3782,"src":"3117:185:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3605,"nodeType":"Block","src":"3432:110:18","statements":[{"expression":{"arguments":[{"id":3596,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"3460:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},{"expression":{"expression":{"id":3597,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"3467:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$3899_$","typeString":"type(contract IERC20Metadata)"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3482:4:18","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":3886,"src":"3467:19:18","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_string_memory_ptr_$","typeString":"function IERC20Metadata.name() view returns (string memory)"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3487:8:18","memberName":"selector","nodeType":"MemberAccess","src":"3467:28:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"expression":{"expression":{"id":3600,"name":"IERC20MetadataUppercase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"3497:23:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20MetadataUppercase_$1567_$","typeString":"type(contract IERC20MetadataUppercase)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3521:4:18","memberName":"NAME","nodeType":"MemberAccess","referencedDeclaration":1561,"src":"3497:28:18","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_string_memory_ptr_$","typeString":"function IERC20MetadataUppercase.NAME() view returns (string memory)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3526:8:18","memberName":"selector","nodeType":"MemberAccess","src":"3497:37:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3595,"name":"_uniDecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"3449:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$3874_$_t_bytes4_$_t_bytes4_$returns$_t_string_memory_ptr_$","typeString":"function (contract IERC20,bytes4,bytes4) view returns (string memory)"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3449:86:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3594,"id":3604,"nodeType":"Return","src":"3442:93:18"}]},"documentation":{"id":3587,"nodeType":"StructuredDocumentation","src":"3308:50:18","text":"@dev Returns `token` name from ERC20 metadata."},"id":3606,"implemented":true,"kind":"function","modifiers":[],"name":"uniName","nameLocation":"3372:7:18","nodeType":"FunctionDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"token","nameLocation":"3387:5:18","nodeType":"VariableDeclaration","scope":3606,"src":"3380:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3589,"nodeType":"UserDefinedTypeName","pathNode":{"id":3588,"name":"IERC20","nameLocations":["3380:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"3380:6:18"},"referencedDeclaration":3874,"src":"3380:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"3379:14:18"},"returnParameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3606,"src":"3417:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3592,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3416:15:18"},"scope":3782,"src":"3363:179:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3631,"nodeType":"Block","src":"3728:103:18","statements":[{"condition":{"arguments":[{"id":3618,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"3748:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}],"id":3617,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3742:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$3874_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3742:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3623,"nodeType":"IfStatement","src":"3738:45:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3620,"name":"ApproveCalledOnETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"3763:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3763:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3622,"nodeType":"RevertStatement","src":"3756:27:18"}},{"expression":{"arguments":[{"id":3627,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"3813:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3628,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"3817:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3624,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"3794:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3800:12:18","memberName":"forceApprove","nodeType":"MemberAccess","referencedDeclaration":3016,"src":"3794:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3874_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3874_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3794:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3630,"nodeType":"ExpressionStatement","src":"3794:30:18"}]},"documentation":{"id":3607,"nodeType":"StructuredDocumentation","src":"3548:74:18","text":"@dev Reverts if `token` is ETH, otherwise performs ERC20 forceApprove."},"id":3632,"implemented":true,"kind":"function","modifiers":[],"name":"uniApprove","nameLocation":"3636:10:18","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"token","nameLocation":"3663:5:18","nodeType":"VariableDeclaration","scope":3632,"src":"3656:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3609,"nodeType":"UserDefinedTypeName","pathNode":{"id":3608,"name":"IERC20","nameLocations":["3656:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"3656:6:18"},"referencedDeclaration":3874,"src":"3656:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"to","nameLocation":"3686:2:18","nodeType":"VariableDeclaration","scope":3632,"src":"3678:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3611,"name":"address","nodeType":"ElementaryTypeName","src":"3678:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"amount","nameLocation":"3706:6:18","nodeType":"VariableDeclaration","scope":3632,"src":"3698:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3698:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3646:72:18"},"returnParameters":{"id":3616,"nodeType":"ParameterList","parameters":[],"src":"3728:0:18"},"scope":3782,"src":"3627:204:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3780,"nodeType":"Block","src":"4168:1710:18","statements":[{"condition":{"arguments":[{"id":3646,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"4188:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}],"id":3645,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"4182:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$3874_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4182:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3651,"nodeType":"IfStatement","src":"4178:55:18","trueBody":{"id":3650,"nodeType":"Block","src":"4196:37:18","statements":[{"expression":{"hexValue":"455448","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4217:5:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4","typeString":"literal_string \"ETH\""},"value":"ETH"},"functionReturnParameters":3644,"id":3649,"nodeType":"Return","src":"4210:12:18"}]}},{"assignments":[3653,3655],"declarations":[{"constant":false,"id":3653,"mutability":"mutable","name":"success","nameLocation":"4249:7:18","nodeType":"VariableDeclaration","scope":3780,"src":"4244:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3652,"name":"bool","nodeType":"ElementaryTypeName","src":"4244:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3655,"mutability":"mutable","name":"data","nameLocation":"4271:4:18","nodeType":"VariableDeclaration","scope":3780,"src":"4258:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3654,"name":"bytes","nodeType":"ElementaryTypeName","src":"4258:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3668,"initialValue":{"arguments":[{"arguments":[{"id":3665,"name":"lowerCaseSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"4353:17:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3663,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4330:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4334:18:18","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4330:22:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3658,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"4287:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}],"id":3657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4279:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3656,"name":"address","nodeType":"ElementaryTypeName","src":"4279:7:18","typeDescriptions":{}}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4294:10:18","memberName":"staticcall","nodeType":"MemberAccess","src":"4279:25:18","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"3230303030","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:5:18","typeDescriptions":{"typeIdentifier":"t_rational_20000_by_1","typeString":"int_const 20000"},"value":"20000"}],"src":"4279:37:18","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:102:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4243:138:18"},{"condition":{"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4395:8:18","subExpression":{"id":3669,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"4396:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3689,"nodeType":"IfStatement","src":"4391:137:18","trueBody":{"id":3688,"nodeType":"Block","src":"4405:123:18","statements":[{"expression":{"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3671,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"4420:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3672,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"4429:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3673,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4419:15:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3683,"name":"upperCaseSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"4498:17:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3681,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4475:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4479:18:18","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4475:22:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3676,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"4445:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}],"id":3675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4437:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3674,"name":"address","nodeType":"ElementaryTypeName","src":"4437:7:18","typeDescriptions":{}}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4437:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4452:10:18","memberName":"staticcall","nodeType":"MemberAccess","src":"4437:25:18","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"3230303030","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4468:5:18","typeDescriptions":{"typeIdentifier":"t_rational_20000_by_1","typeString":"int_const 20000"},"value":"20000"}],"src":"4437:37:18","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4437:80:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"4419:98:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3687,"nodeType":"ExpressionStatement","src":"4419:98:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"4542:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3691,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"4553:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4558:6:18","memberName":"length","nodeType":"MemberAccess","src":"4553:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783430","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4568:4:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"4553:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4542:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3726,"nodeType":"IfStatement","src":"4538:811:18","trueBody":{"id":3725,"nodeType":"Block","src":"4574:775:18","statements":[{"assignments":[3697,3699],"declarations":[{"constant":false,"id":3697,"mutability":"mutable","name":"offset","nameLocation":"4597:6:18","nodeType":"VariableDeclaration","scope":3725,"src":"4589:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3699,"mutability":"mutable","name":"len","nameLocation":"4613:3:18","nodeType":"VariableDeclaration","scope":3725,"src":"4605:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"4605:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3709,"initialValue":{"arguments":[{"id":3702,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"4631:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4638:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"4638:7:18","typeDescriptions":{}}},{"id":3706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4647:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"4647:7:18","typeDescriptions":{}}}],"id":3707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4637:18:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(uint256))"}],"expression":{"id":3700,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4620:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4624:6:18","memberName":"decode","nodeType":"MemberAccess","src":"4620:10:18","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4620:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4588:68:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"5098:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783230","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5108:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5098:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3713,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"5116:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5121:6:18","memberName":"length","nodeType":"MemberAccess","src":"5116:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30783430","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5131:4:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3716,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"5138:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5116:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5098:43:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"IfStatement","src":"5094:245:18","trueBody":{"id":3723,"nodeType":"Block","src":"5143:196:18","statements":[{"AST":{"nodeType":"YulBlock","src":"5186:108:18","statements":[{"nodeType":"YulAssignment","src":"5251:25:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5265:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"5271:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5261:3:18"},"nodeType":"YulFunctionCall","src":"5261:15:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5251:6:18"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3655,"isOffset":false,"isSlot":false,"src":"5265:4:18","valueSize":1},{"declaration":3643,"isOffset":false,"isSlot":false,"src":"5251:6:18","valueSize":1}],"flags":["memory-safe"],"id":3720,"nodeType":"InlineAssembly","src":"5161:133:18"},{"expression":{"id":3721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"5318:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3644,"id":3722,"nodeType":"Return","src":"5311:13:18"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3727,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"5362:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3728,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"5373:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5378:6:18","memberName":"length","nodeType":"MemberAccess","src":"5373:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5388:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5373:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5362:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3771,"nodeType":"IfStatement","src":"5358:464:18","trueBody":{"id":3770,"nodeType":"Block","src":"5392:430:18","statements":[{"assignments":[3734],"declarations":[{"constant":false,"id":3734,"mutability":"mutable","name":"len","nameLocation":"5414:3:18","nodeType":"VariableDeclaration","scope":3770,"src":"5406:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"5406:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3736,"initialValue":{"hexValue":"30","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5420:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5406:15:18"},{"body":{"id":3757,"nodeType":"Block","src":"5503:88:18","statements":[{"id":3756,"nodeType":"UncheckedBlock","src":"5521:56:18","statements":[{"expression":{"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5553:5:18","subExpression":{"id":3753,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"5553:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3755,"nodeType":"ExpressionStatement","src":"5553:5:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3737,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"5442:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3738,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"5448:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5453:6:18","memberName":"length","nodeType":"MemberAccess","src":"5448:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5442:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3741,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"5463:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3743,"indexExpression":{"id":3742,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"5468:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5463:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5476:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5463:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5442:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3747,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"5484:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3749,"indexExpression":{"id":3748,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"5489:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5484:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30783745","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5497:4:18","typeDescriptions":{"typeIdentifier":"t_rational_126_by_1","typeString":"int_const 126"},"value":"0x7E"},"src":"5484:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5442:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3758,"nodeType":"WhileStatement","src":"5435:156:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"5609:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5615:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5609:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3769,"nodeType":"IfStatement","src":"5605:207:18","trueBody":{"id":3768,"nodeType":"Block","src":"5618:194:18","statements":[{"AST":{"nodeType":"YulBlock","src":"5661:100:18","statements":[{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5733:4:18"},{"name":"len","nodeType":"YulIdentifier","src":"5739:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5726:6:18"},"nodeType":"YulFunctionCall","src":"5726:17:18"},"nodeType":"YulExpressionStatement","src":"5726:17:18"}]},"evmVersion":"london","externalReferences":[{"declaration":3655,"isOffset":false,"isSlot":false,"src":"5733:4:18","valueSize":1},{"declaration":3734,"isOffset":false,"isSlot":false,"src":"5739:3:18","valueSize":1}],"flags":["memory-safe"],"id":3762,"nodeType":"InlineAssembly","src":"5636:125:18"},{"expression":{"arguments":[{"id":3765,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"5792:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5785:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3763,"name":"string","nodeType":"ElementaryTypeName","src":"5785:6:18","typeDescriptions":{}}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3644,"id":3767,"nodeType":"Return","src":"5778:19:18"}]}}]}},{"expression":{"arguments":[{"arguments":[{"id":3776,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"5864:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}],"id":3775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5856:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3774,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:18","typeDescriptions":{}}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5856:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3772,"name":"StringUtil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"5839:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringUtil_$3337_$","typeString":"type(library StringUtil)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5850:5:18","memberName":"toHex","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"5839:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5839:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3644,"id":3779,"nodeType":"Return","src":"5832:39:18"}]},"documentation":{"id":3633,"nodeType":"StructuredDocumentation","src":"3837:166:18","text":"@dev 20K gas is provided to account for possible implementations of name/symbol\n (token implementation might be behind proxy or store the value in storage)"},"id":3781,"implemented":true,"kind":"function","modifiers":[],"name":"_uniDecode","nameLocation":"4017:10:18","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"token","nameLocation":"4044:5:18","nodeType":"VariableDeclaration","scope":3781,"src":"4037:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"},"typeName":{"id":3635,"nodeType":"UserDefinedTypeName","pathNode":{"id":3634,"name":"IERC20","nameLocations":["4037:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"4037:6:18"},"referencedDeclaration":3874,"src":"4037:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3874","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3638,"mutability":"mutable","name":"lowerCaseSelector","nameLocation":"4066:17:18","nodeType":"VariableDeclaration","scope":3781,"src":"4059:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3637,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4059:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"upperCaseSelector","nameLocation":"4100:17:18","nodeType":"VariableDeclaration","scope":3781,"src":"4093:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3639,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4093:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4027:96:18"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"result","nameLocation":"4160:6:18","nodeType":"VariableDeclaration","scope":3781,"src":"4146:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3642,"name":"string","nodeType":"ElementaryTypeName","src":"4146:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4145:22:18"},"scope":3782,"src":"4008:1870:18","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":3783,"src":"414:5466:18","usedErrors":[3351,3353,3355,3357,3359,3361]}],"src":"33:5848:18"},"id":18},"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[3796]},"id":3797,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3784,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1271","contractDependencies":[],"contractKind":"interface","documentation":{"id":3785,"nodeType":"StructuredDocumentation","src":"117:189:19","text":" @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"},"fullyImplemented":false,"id":3796,"linearizedBaseContracts":[3796],"name":"IERC1271","nameLocation":"317:8:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3786,"nodeType":"StructuredDocumentation","src":"332:220:19","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":3795,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"566:16:19","nodeType":"FunctionDefinition","parameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"hash","nameLocation":"591:4:19","nodeType":"VariableDeclaration","scope":3795,"src":"583:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"583:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"signature","nameLocation":"610:9:19","nodeType":"VariableDeclaration","scope":3795,"src":"597:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3789,"name":"bytes","nodeType":"ElementaryTypeName","src":"597:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"582:38:19"},"returnParameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"magicValue","nameLocation":"651:10:19","nodeType":"VariableDeclaration","scope":3795,"src":"644:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3792,"name":"bytes4","nodeType":"ElementaryTypeName","src":"644:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"643:19:19"},"scope":3796,"src":"557:106:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3797,"src":"307:358:19","usedErrors":[]}],"src":"92:574:19"},"id":19},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3874]},"id":3875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3798,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":3799,"nodeType":"StructuredDocumentation","src":"131:70:20","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":3874,"linearizedBaseContracts":[3874],"name":"IERC20","nameLocation":"212:6:20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3800,"nodeType":"StructuredDocumentation","src":"225:158:20","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3808,"name":"Transfer","nameLocation":"394:8:20","nodeType":"EventDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:20","nodeType":"VariableDeclaration","scope":3808,"src":"403:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3801,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3804,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:20","nodeType":"VariableDeclaration","scope":3808,"src":"425:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3803,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3806,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:20","nodeType":"VariableDeclaration","scope":3808,"src":"445:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:20"},"src":"388:72:20"},{"anonymous":false,"documentation":{"id":3809,"nodeType":"StructuredDocumentation","src":"466:148:20","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3817,"name":"Approval","nameLocation":"625:8:20","nodeType":"EventDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:20","nodeType":"VariableDeclaration","scope":3817,"src":"634:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3810,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3813,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:20","nodeType":"VariableDeclaration","scope":3817,"src":"657:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3812,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3815,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:20","nodeType":"VariableDeclaration","scope":3817,"src":"682:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:20"},"src":"619:78:20"},{"documentation":{"id":3818,"nodeType":"StructuredDocumentation","src":"703:66:20","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":3823,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:20","nodeType":"FunctionDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[],"src":"794:2:20"},"returnParameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3823,"src":"820:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:20"},"scope":3874,"src":"774:55:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3824,"nodeType":"StructuredDocumentation","src":"835:72:20","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":3831,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:20","nodeType":"FunctionDefinition","parameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"account","nameLocation":"939:7:20","nodeType":"VariableDeclaration","scope":3831,"src":"931:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3825,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:20"},"returnParameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3831,"src":"971:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:20"},"scope":3874,"src":"912:68:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3832,"nodeType":"StructuredDocumentation","src":"986:202:20","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3841,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:20","nodeType":"FunctionDefinition","parameters":{"id":3837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"to","nameLocation":"1219:2:20","nodeType":"VariableDeclaration","scope":3841,"src":"1211:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3833,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3836,"mutability":"mutable","name":"amount","nameLocation":"1231:6:20","nodeType":"VariableDeclaration","scope":3841,"src":"1223:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:20"},"returnParameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3841,"src":"1257:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3838,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:20"},"scope":3874,"src":"1193:70:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3842,"nodeType":"StructuredDocumentation","src":"1269:264:20","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3851,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:20","nodeType":"FunctionDefinition","parameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"owner","nameLocation":"1565:5:20","nodeType":"VariableDeclaration","scope":3851,"src":"1557:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3843,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"spender","nameLocation":"1580:7:20","nodeType":"VariableDeclaration","scope":3851,"src":"1572:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3845,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:20"},"returnParameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3851,"src":"1612:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:20"},"scope":3874,"src":"1538:83:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3852,"nodeType":"StructuredDocumentation","src":"1627:642:20","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3861,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:20","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"spender","nameLocation":"2299:7:20","nodeType":"VariableDeclaration","scope":3861,"src":"2291:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3853,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"amount","nameLocation":"2316:6:20","nodeType":"VariableDeclaration","scope":3861,"src":"2308:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:20"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"2342:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3858,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:20"},"scope":3874,"src":"2274:74:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3862,"nodeType":"StructuredDocumentation","src":"2354:287:20","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3873,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:20","nodeType":"FunctionDefinition","parameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"from","nameLocation":"2676:4:20","nodeType":"VariableDeclaration","scope":3873,"src":"2668:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3863,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"to","nameLocation":"2690:2:20","nodeType":"VariableDeclaration","scope":3873,"src":"2682:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3865,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"amount","nameLocation":"2702:6:20","nodeType":"VariableDeclaration","scope":3873,"src":"2694:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:20"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3873,"src":"2728:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3870,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:20"},"scope":3874,"src":"2646:88:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3875,"src":"202:2534:20","usedErrors":[]}],"src":"106:2631:20"},"id":20},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[3874],"IERC20Metadata":[3899]},"id":3900,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3876,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:21"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3877,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3900,"sourceUnit":3875,"src":"135:23:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3879,"name":"IERC20","nameLocations":["305:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"305:6:21"},"id":3880,"nodeType":"InheritanceSpecifier","src":"305:6:21"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3878,"nodeType":"StructuredDocumentation","src":"160:116:21","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":3899,"linearizedBaseContracts":[3899,3874],"name":"IERC20Metadata","nameLocation":"287:14:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"318:54:21","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":3886,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:21","nodeType":"FunctionDefinition","parameters":{"id":3882,"nodeType":"ParameterList","parameters":[],"src":"390:2:21"},"returnParameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3886,"src":"416:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3883,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:21"},"scope":3899,"src":"377:54:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3887,"nodeType":"StructuredDocumentation","src":"437:56:21","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":3892,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:21","nodeType":"FunctionDefinition","parameters":{"id":3888,"nodeType":"ParameterList","parameters":[],"src":"513:2:21"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3892,"src":"539:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3889,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:21"},"scope":3899,"src":"498:56:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3893,"nodeType":"StructuredDocumentation","src":"560:65:21","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":3898,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:21","nodeType":"FunctionDefinition","parameters":{"id":3894,"nodeType":"ParameterList","parameters":[],"src":"647:2:21"},"returnParameters":{"id":3897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3898,"src":"673:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3895,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:21"},"scope":3899,"src":"630:50:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3900,"src":"277:405:21","usedErrors":[]}],"src":"110:573:21"},"id":21},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[3935]},"id":3936,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3901,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":3902,"nodeType":"StructuredDocumentation","src":"148:480:22","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":3935,"linearizedBaseContracts":[3935],"name":"IERC20Permit","nameLocation":"639:12:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3903,"nodeType":"StructuredDocumentation","src":"658:792:22","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":3920,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:22","nodeType":"FunctionDefinition","parameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"owner","nameLocation":"1488:5:22","nodeType":"VariableDeclaration","scope":3920,"src":"1480:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3904,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3907,"mutability":"mutable","name":"spender","nameLocation":"1511:7:22","nodeType":"VariableDeclaration","scope":3920,"src":"1503:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3906,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"value","nameLocation":"1536:5:22","nodeType":"VariableDeclaration","scope":3920,"src":"1528:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:22","nodeType":"VariableDeclaration","scope":3920,"src":"1551:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3913,"mutability":"mutable","name":"v","nameLocation":"1583:1:22","nodeType":"VariableDeclaration","scope":3920,"src":"1577:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3912,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"r","nameLocation":"1602:1:22","nodeType":"VariableDeclaration","scope":3920,"src":"1594:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"s","nameLocation":"1621:1:22","nodeType":"VariableDeclaration","scope":3920,"src":"1613:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:22"},"returnParameters":{"id":3919,"nodeType":"ParameterList","parameters":[],"src":"1637:0:22"},"scope":3935,"src":"1455:183:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3921,"nodeType":"StructuredDocumentation","src":"1644:294:22","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":3928,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:22","nodeType":"FunctionDefinition","parameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"owner","nameLocation":"1967:5:22","nodeType":"VariableDeclaration","scope":3928,"src":"1959:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3922,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:22"},"returnParameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3928,"src":"1997:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:22"},"scope":3935,"src":"1943:63:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3929,"nodeType":"StructuredDocumentation","src":"2012:128:22","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":3934,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:22","nodeType":"FunctionDefinition","parameters":{"id":3930,"nodeType":"ParameterList","parameters":[],"src":"2223:2:22"},"returnParameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3934,"src":"2249:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:22"},"scope":3935,"src":"2198:60:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3936,"src":"629:1631:22","usedErrors":[]}],"src":"123:2138:22"},"id":22},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[3935]},"id":3939,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3937,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:23"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":3938,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3939,"sourceUnit":3936,"src":"219:28:23","symbolAliases":[],"unitAlias":""}],"src":"129:119:23"},"id":23},"lib/solmate/src/auth/Owned.sol":{"ast":{"absolutePath":"lib/solmate/src/auth/Owned.sol","exportedSymbols":{"Owned":[3998]},"id":3999,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3940,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:24"},{"abstract":true,"baseContracts":[],"canonicalName":"Owned","contractDependencies":[],"contractKind":"contract","documentation":{"id":3941,"nodeType":"StructuredDocumentation","src":"68:147:24","text":"@notice Simple single owner authorization mixin.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)"},"fullyImplemented":true,"id":3998,"linearizedBaseContracts":[3998],"name":"Owned","nameLocation":"233:5:24","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":3947,"name":"OwnershipTransferred","nameLocation":"430:20:24","nodeType":"EventDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"467:4:24","nodeType":"VariableDeclaration","scope":3947,"src":"451:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3942,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3945,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"489:8:24","nodeType":"VariableDeclaration","scope":3947,"src":"473:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3944,"name":"address","nodeType":"ElementaryTypeName","src":"473:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"450:48:24"},"src":"424:75:24"},{"constant":false,"functionSelector":"8da5cb5b","id":3949,"mutability":"mutable","name":"owner","nameLocation":"705:5:24","nodeType":"VariableDeclaration","scope":3998,"src":"690:20:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3948,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":3960,"nodeType":"Block","src":"746:73:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3952,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"764:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"768:6:24","memberName":"sender","nodeType":"MemberAccess","src":"764:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3954,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"778:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"764:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"554e415554484f52495a4544","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"785:14:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528","typeString":"literal_string \"UNAUTHORIZED\""},"value":"UNAUTHORIZED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528","typeString":"literal_string \"UNAUTHORIZED\""}],"id":3951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"756:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"756:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3958,"nodeType":"ExpressionStatement","src":"756:44:24"},{"id":3959,"nodeType":"PlaceholderStatement","src":"811:1:24"}]},"id":3961,"name":"onlyOwner","nameLocation":"726:9:24","nodeType":"ModifierDefinition","parameters":{"id":3950,"nodeType":"ParameterList","parameters":[],"src":"735:2:24"},"src":"717:102:24","virtual":true,"visibility":"internal"},{"body":{"id":3978,"nodeType":"Block","src":"1035:87:24","statements":[{"expression":{"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3966,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"1045:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3967,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"1053:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1045:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3969,"nodeType":"ExpressionStatement","src":"1045:14:24"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1104:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1096:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3971,"name":"address","nodeType":"ElementaryTypeName","src":"1096:7:24","typeDescriptions":{}}},"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3975,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"1108:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3970,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"1075:20:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1075:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3977,"nodeType":"EmitStatement","src":"1070:45:24"}]},"id":3979,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"_owner","nameLocation":"1027:6:24","nodeType":"VariableDeclaration","scope":3979,"src":"1019:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3962,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1018:16:24"},"returnParameters":{"id":3965,"nodeType":"ParameterList","parameters":[],"src":"1035:0:24"},"scope":3998,"src":"1007:115:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3996,"nodeType":"Block","src":"1382:91:24","statements":[{"expression":{"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3986,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"1392:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3987,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"1400:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1392:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3989,"nodeType":"ExpressionStatement","src":"1392:16:24"},{"eventCall":{"arguments":[{"expression":{"id":3991,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1445:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1449:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1445:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3993,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"1457:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3990,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"1424:20:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1424:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3995,"nodeType":"EmitStatement","src":"1419:47:24"}]},"functionSelector":"f2fde38b","id":3997,"implemented":true,"kind":"function","modifiers":[{"id":3984,"kind":"modifierInvocation","modifierName":{"id":3983,"name":"onlyOwner","nameLocations":["1372:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":3961,"src":"1372:9:24"},"nodeType":"ModifierInvocation","src":"1372:9:24"}],"name":"transferOwnership","nameLocation":"1321:17:24","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"newOwner","nameLocation":"1347:8:24","nodeType":"VariableDeclaration","scope":3997,"src":"1339:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3980,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1338:18:24"},"returnParameters":{"id":3985,"nodeType":"ParameterList","parameters":[],"src":"1382:0:24"},"scope":3998,"src":"1312:161:24","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":3999,"src":"215:1260:24","usedErrors":[]}],"src":"42:1434:24"},"id":24},"lib/solmate/src/tokens/ERC20.sol":{"ast":{"absolutePath":"lib/solmate/src/tokens/ERC20.sol","exportedSymbols":{"ERC20":[4386]},"id":4387,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":4000,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:25"},{"abstract":true,"baseContracts":[],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"68:406:25","text":"@notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it."},"fullyImplemented":true,"id":4386,"linearizedBaseContracts":[4386],"name":"ERC20","nameLocation":"492:5:25","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":4009,"name":"Transfer","nameLocation":"689:8:25","nodeType":"EventDefinition","parameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"714:4:25","nodeType":"VariableDeclaration","scope":4009,"src":"698:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4002,"name":"address","nodeType":"ElementaryTypeName","src":"698:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4005,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"736:2:25","nodeType":"VariableDeclaration","scope":4009,"src":"720:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"720:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4007,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"748:6:25","nodeType":"VariableDeclaration","scope":4009,"src":"740:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"697:58:25"},"src":"683:73:25"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":4017,"name":"Approval","nameLocation":"768:8:25","nodeType":"EventDefinition","parameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4011,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"793:5:25","nodeType":"VariableDeclaration","scope":4017,"src":"777:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4010,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4013,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"816:7:25","nodeType":"VariableDeclaration","scope":4017,"src":"800:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4012,"name":"address","nodeType":"ElementaryTypeName","src":"800:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4015,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"833:6:25","nodeType":"VariableDeclaration","scope":4017,"src":"825:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"825:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"776:64:25"},"src":"762:79:25"},{"constant":false,"functionSelector":"06fdde03","id":4019,"mutability":"mutable","name":"name","nameLocation":"1045:4:25","nodeType":"VariableDeclaration","scope":4386,"src":"1031:18:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4018,"name":"string","nodeType":"ElementaryTypeName","src":"1031:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":4021,"mutability":"mutable","name":"symbol","nameLocation":"1070:6:25","nodeType":"VariableDeclaration","scope":4386,"src":"1056:20:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4020,"name":"string","nodeType":"ElementaryTypeName","src":"1056:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":4023,"mutability":"immutable","name":"decimals","nameLocation":"1106:8:25","nodeType":"VariableDeclaration","scope":4386,"src":"1083:31:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4022,"name":"uint8","nodeType":"ElementaryTypeName","src":"1083:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"18160ddd","id":4025,"mutability":"mutable","name":"totalSupply","nameLocation":"1319:11:25","nodeType":"VariableDeclaration","scope":4386,"src":"1304:26:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"70a08231","id":4029,"mutability":"mutable","name":"balanceOf","nameLocation":"1372:9:25","nodeType":"VariableDeclaration","scope":4386,"src":"1337:44:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4028,"keyType":{"id":4026,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1337:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":4027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1356:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":4035,"mutability":"mutable","name":"allowance","nameLocation":"1443:9:25","nodeType":"VariableDeclaration","scope":4386,"src":"1388:64:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":4034,"keyType":{"id":4030,"name":"address","nodeType":"ElementaryTypeName","src":"1396:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1388:47:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":4033,"keyType":{"id":4031,"name":"address","nodeType":"ElementaryTypeName","src":"1415:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1407:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1426:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":4037,"mutability":"immutable","name":"INITIAL_CHAIN_ID","nameLocation":"1670:16:25","nodeType":"VariableDeclaration","scope":4386,"src":"1643:43:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4039,"mutability":"immutable","name":"INITIAL_DOMAIN_SEPARATOR","nameLocation":"1720:24:25","nodeType":"VariableDeclaration","scope":4386,"src":"1693:51:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1693:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"functionSelector":"7ecebe00","id":4043,"mutability":"mutable","name":"nonces","nameLocation":"1786:6:25","nodeType":"VariableDeclaration","scope":4386,"src":"1751:41:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4042,"keyType":{"id":4040,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1751:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":4074,"nodeType":"Block","src":"2084:189:25","statements":[{"expression":{"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4052,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"2094:4:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4053,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"2101:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2094:12:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4055,"nodeType":"ExpressionStatement","src":"2094:12:25"},{"expression":{"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4056,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"2116:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4057,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"2125:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2116:16:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4059,"nodeType":"ExpressionStatement","src":"2116:16:25"},{"expression":{"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"2142:8:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4061,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"2153:9:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2142:20:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4063,"nodeType":"ExpressionStatement","src":"2142:20:25"},{"expression":{"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"INITIAL_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"2173:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4065,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2192:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2198:7:25","memberName":"chainid","nodeType":"MemberAccess","src":"2192:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4068,"nodeType":"ExpressionStatement","src":"2173:32:25"},{"expression":{"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4069,"name":"INITIAL_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"2215:24:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4070,"name":"computeDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"2242:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2242:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2215:51:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4073,"nodeType":"ExpressionStatement","src":"2215:51:25"}]},"id":4075,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4045,"mutability":"mutable","name":"_name","nameLocation":"2016:5:25","nodeType":"VariableDeclaration","scope":4075,"src":"2002:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4044,"name":"string","nodeType":"ElementaryTypeName","src":"2002:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4047,"mutability":"mutable","name":"_symbol","nameLocation":"2045:7:25","nodeType":"VariableDeclaration","scope":4075,"src":"2031:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4046,"name":"string","nodeType":"ElementaryTypeName","src":"2031:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4049,"mutability":"mutable","name":"_decimals","nameLocation":"2068:9:25","nodeType":"VariableDeclaration","scope":4075,"src":"2062:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4048,"name":"uint8","nodeType":"ElementaryTypeName","src":"2062:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1992:91:25"},"returnParameters":{"id":4051,"nodeType":"ParameterList","parameters":[],"src":"2084:0:25"},"scope":4386,"src":"1981:292:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4102,"nodeType":"Block","src":"2541:131:25","statements":[{"expression":{"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4084,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"2551:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4088,"indexExpression":{"expression":{"id":4085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2561:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2565:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2561:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2551:21:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4089,"indexExpression":{"id":4087,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"2573:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2551:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4090,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"2584:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4092,"nodeType":"ExpressionStatement","src":"2551:39:25"},{"eventCall":{"arguments":[{"expression":{"id":4094,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2615:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2619:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2615:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4096,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"2627:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4097,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"2636:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4093,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"2606:8:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4099,"nodeType":"EmitStatement","src":"2601:42:25"},{"expression":{"hexValue":"74727565","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2661:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4083,"id":4101,"nodeType":"Return","src":"2654:11:25"}]},"functionSelector":"095ea7b3","id":4103,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2470:7:25","nodeType":"FunctionDefinition","parameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"spender","nameLocation":"2486:7:25","nodeType":"VariableDeclaration","scope":4103,"src":"2478:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4076,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4079,"mutability":"mutable","name":"amount","nameLocation":"2503:6:25","nodeType":"VariableDeclaration","scope":4103,"src":"2495:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4078,"name":"uint256","nodeType":"ElementaryTypeName","src":"2495:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2477:33:25"},"returnParameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4103,"src":"2535:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4081,"name":"bool","nodeType":"ElementaryTypeName","src":"2535:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2534:6:25"},"scope":4386,"src":"2461:211:25","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4135,"nodeType":"Block","src":"2754:297:25","statements":[{"expression":{"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4112,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"2764:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4115,"indexExpression":{"expression":{"id":4113,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2774:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2778:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2774:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2764:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4116,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"2789:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2764:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4118,"nodeType":"ExpressionStatement","src":"2764:31:25"},{"id":4125,"nodeType":"UncheckedBlock","src":"2917:58:25","statements":[{"expression":{"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4119,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"2941:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4121,"indexExpression":{"id":4120,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2951:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2941:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4122,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"2958:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2941:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4124,"nodeType":"ExpressionStatement","src":"2941:23:25"}]},{"eventCall":{"arguments":[{"expression":{"id":4127,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2999:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2999:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4129,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"3011:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4130,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"3015:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4126,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"2990:8:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2990:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4132,"nodeType":"EmitStatement","src":"2985:37:25"},{"expression":{"hexValue":"74727565","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3040:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4111,"id":4134,"nodeType":"Return","src":"3033:11:25"}]},"functionSelector":"a9059cbb","id":4136,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2687:8:25","nodeType":"FunctionDefinition","parameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"to","nameLocation":"2704:2:25","nodeType":"VariableDeclaration","scope":4136,"src":"2696:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4104,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4107,"mutability":"mutable","name":"amount","nameLocation":"2716:6:25","nodeType":"VariableDeclaration","scope":4136,"src":"2708:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"2708:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2695:28:25"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4136,"src":"2748:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4109,"name":"bool","nodeType":"ElementaryTypeName","src":"2748:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2747:6:25"},"scope":4386,"src":"2678:373:25","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4196,"nodeType":"Block","src":"3181:468:25","statements":[{"assignments":[4148],"declarations":[{"constant":false,"id":4148,"mutability":"mutable","name":"allowed","nameLocation":"3199:7:25","nodeType":"VariableDeclaration","scope":4196,"src":"3191:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"3191:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4155,"initialValue":{"baseExpression":{"baseExpression":{"id":4149,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"3209:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4151,"indexExpression":{"id":4150,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"3219:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3209:15:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4154,"indexExpression":{"expression":{"id":4152,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3225:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3229:6:25","memberName":"sender","nodeType":"MemberAccess","src":"3225:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3209:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3191:45:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4156,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"3287:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":4159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3303:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4157,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3298:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3298:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3312:3:25","memberName":"max","nodeType":"MemberAccess","src":"3298:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3287:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4174,"nodeType":"IfStatement","src":"3283:80:25","trueBody":{"expression":{"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4163,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"3317:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4167,"indexExpression":{"id":4164,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"3327:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3317:15:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4168,"indexExpression":{"expression":{"id":4165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3333:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3337:6:25","memberName":"sender","nodeType":"MemberAccess","src":"3333:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3317:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4169,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"3347:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4170,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"3357:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3347:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3317:46:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4173,"nodeType":"ExpressionStatement","src":"3317:46:25"}},{"expression":{"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4175,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"3374:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4177,"indexExpression":{"id":4176,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"3384:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3374:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4178,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"3393:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3374:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4180,"nodeType":"ExpressionStatement","src":"3374:25:25"},{"id":4187,"nodeType":"UncheckedBlock","src":"3521:58:25","statements":[{"expression":{"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4181,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"3545:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4183,"indexExpression":{"id":4182,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"3555:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3545:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4184,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"3562:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3545:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4186,"nodeType":"ExpressionStatement","src":"3545:23:25"}]},{"eventCall":{"arguments":[{"id":4189,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"3603:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4190,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"3609:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4191,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"3613:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4188,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"3594:8:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4193,"nodeType":"EmitStatement","src":"3589:31:25"},{"expression":{"hexValue":"74727565","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3638:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4146,"id":4195,"nodeType":"Return","src":"3631:11:25"}]},"functionSelector":"23b872dd","id":4197,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3066:12:25","nodeType":"FunctionDefinition","parameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"from","nameLocation":"3096:4:25","nodeType":"VariableDeclaration","scope":4197,"src":"3088:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4137,"name":"address","nodeType":"ElementaryTypeName","src":"3088:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4140,"mutability":"mutable","name":"to","nameLocation":"3118:2:25","nodeType":"VariableDeclaration","scope":4197,"src":"3110:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4139,"name":"address","nodeType":"ElementaryTypeName","src":"3110:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"amount","nameLocation":"3138:6:25","nodeType":"VariableDeclaration","scope":4197,"src":"3130:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"3130:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3078:72:25"},"returnParameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4197,"src":"3175:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4144,"name":"bool","nodeType":"ElementaryTypeName","src":"3175:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3174:6:25"},"scope":4386,"src":"3057:592:25","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4283,"nodeType":"Block","src":"4027:1294:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4215,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"4045:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4216,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4057:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4063:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"4057:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4045:27:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5045524d49545f444541444c494e455f45585049524544","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4074:25:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","typeString":"literal_string \"PERMIT_DEADLINE_EXPIRED\""},"value":"PERMIT_DEADLINE_EXPIRED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","typeString":"literal_string \"PERMIT_DEADLINE_EXPIRED\""}],"id":4214,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4037:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:63:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4221,"nodeType":"ExpressionStatement","src":"4037:63:25"},{"id":4276,"nodeType":"UncheckedBlock","src":"4241:1027:25","statements":[{"assignments":[4223],"declarations":[{"constant":false,"id":4223,"mutability":"mutable","name":"recoveredAddress","nameLocation":"4273:16:25","nodeType":"VariableDeclaration","scope":4276,"src":"4265:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4222,"name":"address","nodeType":"ElementaryTypeName","src":"4265:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4253,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"1901","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4392:10:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"arguments":[],"expression":{"argumentTypes":[],"id":4229,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"4428:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4428:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4602:84:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":4234,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4555:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4555:165:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4237,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"4754:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4238,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"4793:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"4834:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4873:15:25","subExpression":{"baseExpression":{"id":4240,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"4873:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4242,"indexExpression":{"id":4241,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"4880:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4873:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4244,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"4922:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4232,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4511:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4515:6:25","memberName":"encode","nodeType":"MemberAccess","src":"4511:10:25","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4511:449:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4231,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4472:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4472:514:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4226,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4350:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4354:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"4350:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4350:658:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4225,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4319:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:707:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4249,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"5044:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4250,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"5063:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4251,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"5082:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4224,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"4292:9:25","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:805:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4265:832:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4255,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"5120:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5148:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5140:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4256,"name":"address","nodeType":"ElementaryTypeName","src":"5140:7:25","typeDescriptions":{}}},"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5120:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4261,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"5154:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4262,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"5174:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5154:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5120:59:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5349474e4552","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5181:16:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","typeString":"literal_string \"INVALID_SIGNER\""},"value":"INVALID_SIGNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","typeString":"literal_string \"INVALID_SIGNER\""}],"id":4254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5112:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:86:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4267,"nodeType":"ExpressionStatement","src":"5112:86:25"},{"expression":{"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4268,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"5213:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4271,"indexExpression":{"id":4269,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"5223:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5213:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4272,"indexExpression":{"id":4270,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"5241:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5213:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"5252:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5213:44:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4275,"nodeType":"ExpressionStatement","src":"5213:44:25"}]},{"eventCall":{"arguments":[{"id":4278,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"5292:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4279,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"5299:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"5308:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4277,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"5283:8:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5283:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4282,"nodeType":"EmitStatement","src":"5278:36:25"}]},"functionSelector":"d505accf","id":4284,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3847:6:25","nodeType":"FunctionDefinition","parameters":{"id":4212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"owner","nameLocation":"3871:5:25","nodeType":"VariableDeclaration","scope":4284,"src":"3863:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4198,"name":"address","nodeType":"ElementaryTypeName","src":"3863:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"spender","nameLocation":"3894:7:25","nodeType":"VariableDeclaration","scope":4284,"src":"3886:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4200,"name":"address","nodeType":"ElementaryTypeName","src":"3886:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4203,"mutability":"mutable","name":"value","nameLocation":"3919:5:25","nodeType":"VariableDeclaration","scope":4284,"src":"3911:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4202,"name":"uint256","nodeType":"ElementaryTypeName","src":"3911:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4205,"mutability":"mutable","name":"deadline","nameLocation":"3942:8:25","nodeType":"VariableDeclaration","scope":4284,"src":"3934:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3934:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4207,"mutability":"mutable","name":"v","nameLocation":"3966:1:25","nodeType":"VariableDeclaration","scope":4284,"src":"3960:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4206,"name":"uint8","nodeType":"ElementaryTypeName","src":"3960:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4209,"mutability":"mutable","name":"r","nameLocation":"3985:1:25","nodeType":"VariableDeclaration","scope":4284,"src":"3977:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3977:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"s","nameLocation":"4004:1:25","nodeType":"VariableDeclaration","scope":4284,"src":"3996:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3996:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3853:158:25"},"returnParameters":{"id":4213,"nodeType":"ParameterList","parameters":[],"src":"4027:0:25"},"scope":4386,"src":"3838:1483:25","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4298,"nodeType":"Block","src":"5393:111:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4289,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5410:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5416:7:25","memberName":"chainid","nodeType":"MemberAccess","src":"5410:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4291,"name":"INITIAL_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"5427:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5410:33:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4294,"name":"computeDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"5473:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5473:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5410:87:25","trueExpression":{"id":4293,"name":"INITIAL_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"5446:24:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4288,"id":4297,"nodeType":"Return","src":"5403:94:25"}]},"functionSelector":"3644e515","id":4299,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"5336:16:25","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[],"src":"5352:2:25"},"returnParameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4299,"src":"5384:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5384:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5383:9:25"},"scope":4386,"src":"5327:177:25","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4328,"nodeType":"Block","src":"5584:372:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5682:84:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4307,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5672:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5672:95:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":4313,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"5805:4:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":4312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4311,"name":"bytes","nodeType":"ElementaryTypeName","src":"5799:5:25","typeDescriptions":{}}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":4310,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5789:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"31","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5843:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":4316,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5833:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5833:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4319,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5869:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5875:7:25","memberName":"chainid","nodeType":"MemberAccess","src":"5869:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4323,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5912:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$4386","typeString":"contract ERC20"}],"id":4322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5904:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4321,"name":"address","nodeType":"ElementaryTypeName","src":"5904:7:25","typeDescriptions":{}}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5904:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4305,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5640:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5644:6:25","memberName":"encode","nodeType":"MemberAccess","src":"5640:10:25","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5640:295:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4304,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5613:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:336:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4303,"id":4327,"nodeType":"Return","src":"5594:355:25"}]},"id":4329,"implemented":true,"kind":"function","modifiers":[],"name":"computeDomainSeparator","nameLocation":"5519:22:25","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[],"src":"5541:2:25"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4329,"src":"5575:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5575:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5574:9:25"},"scope":4386,"src":"5510:446:25","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4356,"nodeType":"Block","src":"6210:265:25","statements":[{"expression":{"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4336,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"6220:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4337,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"6235:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6220:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4339,"nodeType":"ExpressionStatement","src":"6220:21:25"},{"id":4346,"nodeType":"UncheckedBlock","src":"6363:58:25","statements":[{"expression":{"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4340,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"6387:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4342,"indexExpression":{"id":4341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"6397:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6387:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4343,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"6404:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6387:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4345,"nodeType":"ExpressionStatement","src":"6387:23:25"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6453:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6445:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4348,"name":"address","nodeType":"ElementaryTypeName","src":"6445:7:25","typeDescriptions":{}}},"id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6445:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4352,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"6457:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4353,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"6461:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4347,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"6436:8:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6436:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4355,"nodeType":"EmitStatement","src":"6431:37:25"}]},"id":4357,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6159:5:25","nodeType":"FunctionDefinition","parameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"to","nameLocation":"6173:2:25","nodeType":"VariableDeclaration","scope":4357,"src":"6165:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4330,"name":"address","nodeType":"ElementaryTypeName","src":"6165:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"amount","nameLocation":"6185:6:25","nodeType":"VariableDeclaration","scope":4357,"src":"6177:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6164:28:25"},"returnParameters":{"id":4335,"nodeType":"ParameterList","parameters":[],"src":"6210:0:25"},"scope":4386,"src":"6150:325:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4384,"nodeType":"Block","src":"6543:266:25","statements":[{"expression":{"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4364,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"6553:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4366,"indexExpression":{"id":4365,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"6563:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6553:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4367,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"6572:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6553:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4369,"nodeType":"ExpressionStatement","src":"6553:25:25"},{"id":4374,"nodeType":"UncheckedBlock","src":"6697:56:25","statements":[{"expression":{"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4370,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"6721:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4371,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"6736:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6721:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4373,"nodeType":"ExpressionStatement","src":"6721:21:25"}]},{"eventCall":{"arguments":[{"id":4376,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"6777:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6783:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4377,"name":"address","nodeType":"ElementaryTypeName","src":"6783:7:25","typeDescriptions":{}}},"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6783:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4381,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"6795:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4375,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"6768:8:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6768:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4383,"nodeType":"EmitStatement","src":"6763:39:25"}]},"id":4385,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"6490:5:25","nodeType":"FunctionDefinition","parameters":{"id":4362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4359,"mutability":"mutable","name":"from","nameLocation":"6504:4:25","nodeType":"VariableDeclaration","scope":4385,"src":"6496:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4358,"name":"address","nodeType":"ElementaryTypeName","src":"6496:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4361,"mutability":"mutable","name":"amount","nameLocation":"6518:6:25","nodeType":"VariableDeclaration","scope":4385,"src":"6510:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4360,"name":"uint256","nodeType":"ElementaryTypeName","src":"6510:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6495:30:25"},"returnParameters":{"id":4363,"nodeType":"ParameterList","parameters":[],"src":"6543:0:25"},"scope":4386,"src":"6481:328:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4387,"src":"474:6337:25","usedErrors":[]}],"src":"42:6770:25"},"id":25}},"contracts":{"contracts/IVerifier.sol":{"IDepositVerifier":{"abi":[{"inputs":[{"internalType":"uint256[5]","name":"_publicInputs","type":"uint256[5]"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"verify","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"verify(uint256[5],bytes)":"839ded65"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"_publicInputs\",\"type\":\"uint256[5]\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVerifier.sol\":\"IDepositVerifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/IVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IDepositVerifier {\\n    function verify(\\n        uint256[5] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface IWithdrawVerifier {\\n    function verify(\\n        uint256[5] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface ISwapVerifier {\\n    function verify(\\n        uint256[4] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface IFinalizeVerifier {\\n    function verify(\\n        uint256[3] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x9abb94139f2ce3b43e24529956ac86e8c9bfaf956526375b7bfdf8fa767fcfa8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IFinalizeVerifier":{"abi":[{"inputs":[{"internalType":"uint256[3]","name":"_publicInputs","type":"uint256[3]"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"verify","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"verify(uint256[3],bytes)":"7509e379"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"_publicInputs\",\"type\":\"uint256[3]\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVerifier.sol\":\"IFinalizeVerifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/IVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IDepositVerifier {\\n    function verify(\\n        uint256[5] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface IWithdrawVerifier {\\n    function verify(\\n        uint256[5] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface ISwapVerifier {\\n    function verify(\\n        uint256[4] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface IFinalizeVerifier {\\n    function verify(\\n        uint256[3] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x9abb94139f2ce3b43e24529956ac86e8c9bfaf956526375b7bfdf8fa767fcfa8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"ISwapVerifier":{"abi":[{"inputs":[{"internalType":"uint256[4]","name":"_publicInputs","type":"uint256[4]"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"verify","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"verify(uint256[4],bytes)":"404568b5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"_publicInputs\",\"type\":\"uint256[4]\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVerifier.sol\":\"ISwapVerifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/IVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IDepositVerifier {\\n    function verify(\\n        uint256[5] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface IWithdrawVerifier {\\n    function verify(\\n        uint256[5] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface ISwapVerifier {\\n    function verify(\\n        uint256[4] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface IFinalizeVerifier {\\n    function verify(\\n        uint256[3] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x9abb94139f2ce3b43e24529956ac86e8c9bfaf956526375b7bfdf8fa767fcfa8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IWithdrawVerifier":{"abi":[{"inputs":[{"internalType":"uint256[5]","name":"_publicInputs","type":"uint256[5]"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"verify","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"verify(uint256[5],bytes)":"839ded65"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"_publicInputs\",\"type\":\"uint256[5]\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVerifier.sol\":\"IWithdrawVerifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/IVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IDepositVerifier {\\n    function verify(\\n        uint256[5] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface IWithdrawVerifier {\\n    function verify(\\n        uint256[5] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface ISwapVerifier {\\n    function verify(\\n        uint256[4] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface IFinalizeVerifier {\\n    function verify(\\n        uint256[3] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x9abb94139f2ce3b43e24529956ac86e8c9bfaf956526375b7bfdf8fa767fcfa8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MerkleTree.sol":{"IHasher":{"abi":[{"inputs":[{"internalType":"uint256","name":"in_xL","type":"uint256"},{"internalType":"uint256","name":"in_xR","type":"uint256"}],"name":"MiMCSponge","outputs":[{"internalType":"uint256","name":"xL","type":"uint256"},{"internalType":"uint256","name":"xR","type":"uint256"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"MiMCSponge(uint256,uint256)":"f47d33b5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"in_xL\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"in_xR\",\"type\":\"uint256\"}],\"name\":\"MiMCSponge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xL\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xR\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MerkleTree.sol\":\"IHasher\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/MerkleTree.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHasher {\\n    function MiMCSponge(\\n        uint256 in_xL,\\n        uint256 in_xR\\n    ) external pure returns (uint256 xL, uint256 xR);\\n}\\n\\ncontract MerkleTree {\\n    uint256 public constant FIELD_SIZE =\\n        21888242871839275222246405745257275088548364400416034343698204186575808495617;\\n    uint256 public constant ZERO_VALUE =\\n        21663839004416932945382355908790599225266501822907911457504978515578255421292; // = keccak256(\\\"tornado\\\") % FIELD_SIZE\\n    IHasher public immutable hasher;\\n\\n    uint32 public levels;\\n\\n    // the following variables are made public for easier testing and debugging and\\n    // are not supposed to be accessed in regular code\\n\\n    // filledSubtrees and roots could be bytes32[size], but using mappings makes it cheaper because\\n    // it removes index range check on every interaction\\n    mapping(uint256 => bytes32) public filledSubtrees;\\n    bytes32 public root;\\n    uint32 public nextIndex = 0;\\n\\n    constructor(uint32 _levels, IHasher _hasher) {\\n        require(_levels > 0, \\\"_levels should be greater than zero\\\");\\n        require(_levels < 32, \\\"_levels should be less than 32\\\");\\n        levels = _levels;\\n        hasher = _hasher;\\n\\n        for (uint32 i = 0; i < _levels; i++) {\\n            filledSubtrees[i] = zeros(i);\\n        }\\n\\n        root = zeros(_levels - 1);\\n    }\\n\\n    /**\\n    @dev Hash 2 tree leaves, returns MiMC(_left, _right)\\n  */\\n    function hashLeftRight(\\n        IHasher _hasher,\\n        bytes32 _left,\\n        bytes32 _right\\n    ) public pure returns (bytes32) {\\n        require(\\n            uint256(_left) < FIELD_SIZE,\\n            \\\"_left should be inside the field\\\"\\n        );\\n        require(\\n            uint256(_right) < FIELD_SIZE,\\n            \\\"_right should be inside the field\\\"\\n        );\\n        uint256 R = uint256(_left);\\n        uint256 C = 0;\\n        (R, C) = _hasher.MiMCSponge(R, C);\\n        R = addmod(R, uint256(_right), FIELD_SIZE);\\n        (R, C) = _hasher.MiMCSponge(R, C);\\n        return bytes32(R);\\n    }\\n\\n    function _insert(bytes32 _leaf) internal returns (uint32 index) {\\n        uint32 _nextIndex = nextIndex;\\n        require(\\n            _nextIndex != uint32(2) ** levels,\\n            \\\"Merkle tree is full. No more leaves can be added\\\"\\n        );\\n        uint32 currentIndex = _nextIndex;\\n        bytes32 currentLevelHash = _leaf;\\n        bytes32 left;\\n        bytes32 right;\\n\\n        for (uint32 i = 0; i < levels; i++) {\\n            if (currentIndex % 2 == 0) {\\n                left = currentLevelHash;\\n                right = zeros(i);\\n                filledSubtrees[i] = currentLevelHash;\\n            } else {\\n                left = filledSubtrees[i];\\n                right = currentLevelHash;\\n            }\\n            currentLevelHash = hashLeftRight(hasher, left, right);\\n            currentIndex /= 2;\\n        }\\n\\n        nextIndex = _nextIndex + 1;\\n        return _nextIndex;\\n    }\\n\\n    /// @dev provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\\n    function zeros(uint256 i) public pure returns (bytes32) {\\n        if (i == 0)\\n            return\\n                bytes32(\\n                    0x2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c\\n                );\\n        else if (i == 1)\\n            return\\n                bytes32(\\n                    0x256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d\\n                );\\n        else if (i == 2)\\n            return\\n                bytes32(\\n                    0x1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200\\n                );\\n        else if (i == 3)\\n            return\\n                bytes32(\\n                    0x20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb\\n                );\\n        else if (i == 4)\\n            return\\n                bytes32(\\n                    0x0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9\\n                );\\n        else if (i == 5)\\n            return\\n                bytes32(\\n                    0x24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959\\n                );\\n        else if (i == 6)\\n            return\\n                bytes32(\\n                    0x1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c\\n                );\\n        else if (i == 7)\\n            return\\n                bytes32(\\n                    0x19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4\\n                );\\n        else if (i == 8)\\n            return\\n                bytes32(\\n                    0x261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80\\n                );\\n        else if (i == 9)\\n            return\\n                bytes32(\\n                    0x0058459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007\\n                );\\n        else if (i == 10)\\n            return\\n                bytes32(\\n                    0x1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30\\n                );\\n        else if (i == 11)\\n            return\\n                bytes32(\\n                    0x1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5\\n                );\\n        else if (i == 12)\\n            return\\n                bytes32(\\n                    0x0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f\\n                );\\n        else if (i == 13)\\n            return\\n                bytes32(\\n                    0x1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd\\n                );\\n        else if (i == 14)\\n            return\\n                bytes32(\\n                    0x133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108\\n                );\\n        else if (i == 15)\\n            return\\n                bytes32(\\n                    0x13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6\\n                );\\n        else if (i == 16)\\n            return\\n                bytes32(\\n                    0x1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854\\n                );\\n        else if (i == 17)\\n            return\\n                bytes32(\\n                    0x0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea\\n                );\\n        else if (i == 18)\\n            return\\n                bytes32(\\n                    0x24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d\\n                );\\n        else if (i == 19)\\n            return\\n                bytes32(\\n                    0x198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05\\n                );\\n        else if (i == 20)\\n            return\\n                bytes32(\\n                    0x29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4\\n                );\\n        else if (i == 21)\\n            return\\n                bytes32(\\n                    0x19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967\\n                );\\n        else if (i == 22)\\n            return\\n                bytes32(\\n                    0x1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453\\n                );\\n        else if (i == 23)\\n            return\\n                bytes32(\\n                    0x10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48\\n                );\\n        else if (i == 24)\\n            return\\n                bytes32(\\n                    0x0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1\\n                );\\n        else if (i == 25)\\n            return\\n                bytes32(\\n                    0x019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c\\n                );\\n        else if (i == 26)\\n            return\\n                bytes32(\\n                    0x2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99\\n                );\\n        else if (i == 27)\\n            return\\n                bytes32(\\n                    0x2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354\\n                );\\n        else if (i == 28)\\n            return\\n                bytes32(\\n                    0x002df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d\\n                );\\n        else if (i == 29)\\n            return\\n                bytes32(\\n                    0x104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427\\n                );\\n        else if (i == 30)\\n            return\\n                bytes32(\\n                    0x1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb\\n                );\\n        else if (i == 31)\\n            return\\n                bytes32(\\n                    0x2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc\\n                );\\n        else revert(\\\"Index out of bounds\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x08e1b84cb095fc445a4c89f9b9ffb32329ffbc2abf247cf47cdedf15e81e054f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"MerkleTree":{"abi":[{"inputs":[{"internalType":"uint32","name":"_levels","type":"uint32"},{"internalType":"contract IHasher","name":"_hasher","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"FIELD_SIZE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ZERO_VALUE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"filledSubtrees","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IHasher","name":"_hasher","type":"address"},{"internalType":"bytes32","name":"_left","type":"bytes32"},{"internalType":"bytes32","name":"_right","type":"bytes32"}],"name":"hashLeftRight","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"hasher","outputs":[{"internalType":"contract IHasher","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"levels","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextIndex","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"root","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"i","type":"uint256"}],"name":"zeros","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"hashLeftRight(address,bytes32,bytes32)":{"details":"Hash 2 tree leaves, returns MiMC(_left, _right)"},"zeros(uint256)":{"details":"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_142":{"entryPoint":null,"id":142,"parameterSlots":2,"returnSlots":0},"@zeros_628":{"entryPoint":475,"id":628,"parameterSlots":1,"returnSlots":1},"abi_decode_t_contract$_IHasher_$63_fromMemory":{"entryPoint":2404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":2283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32t_contract$_IHasher_$63_fromMemory":{"entryPoint":2427,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254_to_t_string_memory_ptr_fromStack":{"entryPoint":2708,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d_to_t_string_memory_ptr_fromStack":{"entryPoint":2594,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack":{"entryPoint":2981,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2747,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2633,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3020,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2498,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint32":{"entryPoint":2877,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2338,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IHasher_$63":{"entryPoint":2358,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2306,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":2241,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint32":{"entryPoint":2828,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2781,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2236,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254":{"entryPoint":2667,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d":{"entryPoint":2515,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367":{"entryPoint":2940,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IHasher_$63":{"entryPoint":2378,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":2257,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5653:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"378:49:26","statements":[{"nodeType":"YulAssignment","src":"388:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:22:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:93:26"},{"body":{"nodeType":"YulBlock","src":"475:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"531:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"540:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"543:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"533:6:26"},"nodeType":"YulFunctionCall","src":"533:12:26"},"nodeType":"YulExpressionStatement","src":"533:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"522:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"505:16:26"},"nodeType":"YulFunctionCall","src":"505:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"495:2:26"},"nodeType":"YulFunctionCall","src":"495:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"488:6:26"},"nodeType":"YulFunctionCall","src":"488:42:26"},"nodeType":"YulIf","src":"485:62:26"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"468:5:26","type":""}],"src":"433:120:26"},{"body":{"nodeType":"YulBlock","src":"621:79:26","statements":[{"nodeType":"YulAssignment","src":"631:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"646:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"640:5:26"},"nodeType":"YulFunctionCall","src":"640:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"631:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:26"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"662:25:26"},"nodeType":"YulFunctionCall","src":"662:32:26"},"nodeType":"YulExpressionStatement","src":"662:32:26"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"599:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"607:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"615:5:26","type":""}],"src":"559:141:26"},{"body":{"nodeType":"YulBlock","src":"751:81:26","statements":[{"nodeType":"YulAssignment","src":"761:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"776:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"783:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"772:3:26"},"nodeType":"YulFunctionCall","src":"772:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"761:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"733:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"743:7:26","type":""}],"src":"706:126:26"},{"body":{"nodeType":"YulBlock","src":"883:51:26","statements":[{"nodeType":"YulAssignment","src":"893:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"904:17:26"},"nodeType":"YulFunctionCall","src":"904:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"893:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"865:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"875:7:26","type":""}],"src":"838:96:26"},{"body":{"nodeType":"YulBlock","src":"999:51:26","statements":[{"nodeType":"YulAssignment","src":"1009:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1038:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1020:17:26"},"nodeType":"YulFunctionCall","src":"1020:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1009:7:26"}]}]},"name":"cleanup_t_contract$_IHasher_$63","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"981:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"991:7:26","type":""}],"src":"940:110:26"},{"body":{"nodeType":"YulBlock","src":"1113:93:26","statements":[{"body":{"nodeType":"YulBlock","src":"1184:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1193:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1196:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1186:6:26"},"nodeType":"YulFunctionCall","src":"1186:12:26"},"nodeType":"YulExpressionStatement","src":"1186:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1136:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:26"}],"functionName":{"name":"cleanup_t_contract$_IHasher_$63","nodeType":"YulIdentifier","src":"1143:31:26"},"nodeType":"YulFunctionCall","src":"1143:38:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1133:2:26"},"nodeType":"YulFunctionCall","src":"1133:49:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1126:6:26"},"nodeType":"YulFunctionCall","src":"1126:57:26"},"nodeType":"YulIf","src":"1123:77:26"}]},"name":"validator_revert_t_contract$_IHasher_$63","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1106:5:26","type":""}],"src":"1056:150:26"},{"body":{"nodeType":"YulBlock","src":"1289:94:26","statements":[{"nodeType":"YulAssignment","src":"1299:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1314:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1308:5:26"},"nodeType":"YulFunctionCall","src":"1308:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1299:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1371:5:26"}],"functionName":{"name":"validator_revert_t_contract$_IHasher_$63","nodeType":"YulIdentifier","src":"1330:40:26"},"nodeType":"YulFunctionCall","src":"1330:47:26"},"nodeType":"YulExpressionStatement","src":"1330:47:26"}]},"name":"abi_decode_t_contract$_IHasher_$63_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1267:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1275:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1283:5:26","type":""}],"src":"1212:171:26"},{"body":{"nodeType":"YulBlock","src":"1496:426:26","statements":[{"body":{"nodeType":"YulBlock","src":"1542:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1544:77:26"},"nodeType":"YulFunctionCall","src":"1544:79:26"},"nodeType":"YulExpressionStatement","src":"1544:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1517:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1526:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1513:3:26"},"nodeType":"YulFunctionCall","src":"1513:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1538:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1509:3:26"},"nodeType":"YulFunctionCall","src":"1509:32:26"},"nodeType":"YulIf","src":"1506:119:26"},{"nodeType":"YulBlock","src":"1635:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1650:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1664:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1654:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1679:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1724:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1735:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1720:3:26"},"nodeType":"YulFunctionCall","src":"1720:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1744:7:26"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"1689:30:26"},"nodeType":"YulFunctionCall","src":"1689:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1679:6:26"}]}]},{"nodeType":"YulBlock","src":"1772:143:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1787:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1801:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1791:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1817:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1877:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1888:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1873:3:26"},"nodeType":"YulFunctionCall","src":"1873:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1897:7:26"}],"functionName":{"name":"abi_decode_t_contract$_IHasher_$63_fromMemory","nodeType":"YulIdentifier","src":"1827:45:26"},"nodeType":"YulFunctionCall","src":"1827:78:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1817:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint32t_contract$_IHasher_$63_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1458:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1469:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1481:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1489:6:26","type":""}],"src":"1389:533:26"},{"body":{"nodeType":"YulBlock","src":"2024:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2041:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2046:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2034:6:26"},"nodeType":"YulFunctionCall","src":"2034:19:26"},"nodeType":"YulExpressionStatement","src":"2034:19:26"},{"nodeType":"YulAssignment","src":"2062:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2081:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2086:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2077:3:26"},"nodeType":"YulFunctionCall","src":"2077:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2062:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1996:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"2001:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2012:11:26","type":""}],"src":"1928:169:26"},{"body":{"nodeType":"YulBlock","src":"2209:116:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2231:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2239:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2227:3:26"},"nodeType":"YulFunctionCall","src":"2227:14:26"},{"hexValue":"5f6c6576656c732073686f756c642062652067726561746572207468616e207a","kind":"string","nodeType":"YulLiteral","src":"2243:34:26","type":"","value":"_levels should be greater than z"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2220:6:26"},"nodeType":"YulFunctionCall","src":"2220:58:26"},"nodeType":"YulExpressionStatement","src":"2220:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2299:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2307:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2295:3:26"},"nodeType":"YulFunctionCall","src":"2295:15:26"},{"hexValue":"65726f","kind":"string","nodeType":"YulLiteral","src":"2312:5:26","type":"","value":"ero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2288:6:26"},"nodeType":"YulFunctionCall","src":"2288:30:26"},"nodeType":"YulExpressionStatement","src":"2288:30:26"}]},"name":"store_literal_in_memory_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2201:6:26","type":""}],"src":"2103:222:26"},{"body":{"nodeType":"YulBlock","src":"2477:220:26","statements":[{"nodeType":"YulAssignment","src":"2487:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2553:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2558:2:26","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2494:58:26"},"nodeType":"YulFunctionCall","src":"2494:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2487:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2659:3:26"}],"functionName":{"name":"store_literal_in_memory_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d","nodeType":"YulIdentifier","src":"2570:88:26"},"nodeType":"YulFunctionCall","src":"2570:93:26"},"nodeType":"YulExpressionStatement","src":"2570:93:26"},{"nodeType":"YulAssignment","src":"2672:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2683:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2688:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2679:3:26"},"nodeType":"YulFunctionCall","src":"2679:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2672:3:26"}]}]},"name":"abi_encode_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2465:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2473:3:26","type":""}],"src":"2331:366:26"},{"body":{"nodeType":"YulBlock","src":"2874:248:26","statements":[{"nodeType":"YulAssignment","src":"2884:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2896:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2907:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:26"},"nodeType":"YulFunctionCall","src":"2892:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2884:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2931:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2942:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2927:3:26"},"nodeType":"YulFunctionCall","src":"2927:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2950:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2956:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2946:3:26"},"nodeType":"YulFunctionCall","src":"2946:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2920:6:26"},"nodeType":"YulFunctionCall","src":"2920:47:26"},"nodeType":"YulExpressionStatement","src":"2920:47:26"},{"nodeType":"YulAssignment","src":"2976:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3110:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2984:124:26"},"nodeType":"YulFunctionCall","src":"2984:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2976:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2854:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2869:4:26","type":""}],"src":"2703:419:26"},{"body":{"nodeType":"YulBlock","src":"3234:74:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3256:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3264:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3252:3:26"},"nodeType":"YulFunctionCall","src":"3252:14:26"},{"hexValue":"5f6c6576656c732073686f756c64206265206c657373207468616e203332","kind":"string","nodeType":"YulLiteral","src":"3268:32:26","type":"","value":"_levels should be less than 32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3245:6:26"},"nodeType":"YulFunctionCall","src":"3245:56:26"},"nodeType":"YulExpressionStatement","src":"3245:56:26"}]},"name":"store_literal_in_memory_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3226:6:26","type":""}],"src":"3128:180:26"},{"body":{"nodeType":"YulBlock","src":"3460:220:26","statements":[{"nodeType":"YulAssignment","src":"3470:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3536:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3541:2:26","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3477:58:26"},"nodeType":"YulFunctionCall","src":"3477:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3470:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3642:3:26"}],"functionName":{"name":"store_literal_in_memory_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254","nodeType":"YulIdentifier","src":"3553:88:26"},"nodeType":"YulFunctionCall","src":"3553:93:26"},"nodeType":"YulExpressionStatement","src":"3553:93:26"},{"nodeType":"YulAssignment","src":"3655:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3666:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3671:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3662:3:26"},"nodeType":"YulFunctionCall","src":"3662:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3655:3:26"}]}]},"name":"abi_encode_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3448:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3456:3:26","type":""}],"src":"3314:366:26"},{"body":{"nodeType":"YulBlock","src":"3857:248:26","statements":[{"nodeType":"YulAssignment","src":"3867:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3879:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3890:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3875:3:26"},"nodeType":"YulFunctionCall","src":"3875:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3867:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3914:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3925:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3910:3:26"},"nodeType":"YulFunctionCall","src":"3910:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3933:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3939:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3929:3:26"},"nodeType":"YulFunctionCall","src":"3929:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3903:6:26"},"nodeType":"YulFunctionCall","src":"3903:47:26"},"nodeType":"YulExpressionStatement","src":"3903:47:26"},{"nodeType":"YulAssignment","src":"3959:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4093:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3967:124:26"},"nodeType":"YulFunctionCall","src":"3967:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3959:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3837:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3852:4:26","type":""}],"src":"3686:419:26"},{"body":{"nodeType":"YulBlock","src":"4139:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4156:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4159:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4149:6:26"},"nodeType":"YulFunctionCall","src":"4149:88:26"},"nodeType":"YulExpressionStatement","src":"4149:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4253:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4256:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4246:6:26"},"nodeType":"YulFunctionCall","src":"4246:15:26"},"nodeType":"YulExpressionStatement","src":"4246:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4277:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4280:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4270:6:26"},"nodeType":"YulFunctionCall","src":"4270:15:26"},"nodeType":"YulExpressionStatement","src":"4270:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4111:180:26"},{"body":{"nodeType":"YulBlock","src":"4339:133:26","statements":[{"nodeType":"YulAssignment","src":"4349:32:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"4358:16:26"},"nodeType":"YulFunctionCall","src":"4358:23:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4349:5:26"}]},{"body":{"nodeType":"YulBlock","src":"4415:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4417:16:26"},"nodeType":"YulFunctionCall","src":"4417:18:26"},"nodeType":"YulExpressionStatement","src":"4417:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4396:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4403:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4393:2:26"},"nodeType":"YulFunctionCall","src":"4393:21:26"},"nodeType":"YulIf","src":"4390:47:26"},{"nodeType":"YulAssignment","src":"4446:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4457:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4464:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4453:3:26"},"nodeType":"YulFunctionCall","src":"4453:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4446:3:26"}]}]},"name":"increment_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4325:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4335:3:26","type":""}],"src":"4297:175:26"},{"body":{"nodeType":"YulBlock","src":"4522:156:26","statements":[{"nodeType":"YulAssignment","src":"4532:24:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4554:1:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"4537:16:26"},"nodeType":"YulFunctionCall","src":"4537:19:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4532:1:26"}]},{"nodeType":"YulAssignment","src":"4565:24:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4587:1:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"4570:16:26"},"nodeType":"YulFunctionCall","src":"4570:19:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4565:1:26"}]},{"nodeType":"YulAssignment","src":"4598:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4610:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"4613:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4606:3:26"},"nodeType":"YulFunctionCall","src":"4606:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4598:4:26"}]},{"body":{"nodeType":"YulBlock","src":"4649:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4651:16:26"},"nodeType":"YulFunctionCall","src":"4651:18:26"},"nodeType":"YulExpressionStatement","src":"4651:18:26"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"4631:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"4637:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4628:2:26"},"nodeType":"YulFunctionCall","src":"4628:20:26"},"nodeType":"YulIf","src":"4625:46:26"}]},"name":"checked_sub_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4508:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"4511:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4517:4:26","type":""}],"src":"4478:200:26"},{"body":{"nodeType":"YulBlock","src":"4790:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4812:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4820:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4808:3:26"},"nodeType":"YulFunctionCall","src":"4808:14:26"},{"hexValue":"496e646578206f7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"4824:21:26","type":"","value":"Index out of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4801:6:26"},"nodeType":"YulFunctionCall","src":"4801:45:26"},"nodeType":"YulExpressionStatement","src":"4801:45:26"}]},"name":"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4782:6:26","type":""}],"src":"4684:169:26"},{"body":{"nodeType":"YulBlock","src":"5005:220:26","statements":[{"nodeType":"YulAssignment","src":"5015:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5081:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5086:2:26","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5022:58:26"},"nodeType":"YulFunctionCall","src":"5022:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5015:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5187:3:26"}],"functionName":{"name":"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","nodeType":"YulIdentifier","src":"5098:88:26"},"nodeType":"YulFunctionCall","src":"5098:93:26"},"nodeType":"YulExpressionStatement","src":"5098:93:26"},{"nodeType":"YulAssignment","src":"5200:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5211:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5216:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5207:3:26"},"nodeType":"YulFunctionCall","src":"5207:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5200:3:26"}]}]},"name":"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4993:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5001:3:26","type":""}],"src":"4859:366:26"},{"body":{"nodeType":"YulBlock","src":"5402:248:26","statements":[{"nodeType":"YulAssignment","src":"5412:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5424:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5435:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5420:3:26"},"nodeType":"YulFunctionCall","src":"5420:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5412:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5459:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5470:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5455:3:26"},"nodeType":"YulFunctionCall","src":"5455:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5478:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5484:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5474:3:26"},"nodeType":"YulFunctionCall","src":"5474:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5448:6:26"},"nodeType":"YulFunctionCall","src":"5448:47:26"},"nodeType":"YulExpressionStatement","src":"5448:47:26"},{"nodeType":"YulAssignment","src":"5504:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5638:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5512:124:26"},"nodeType":"YulFunctionCall","src":"5512:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5504:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5382:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5397:4:26","type":""}],"src":"5231:419:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IHasher_$63(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IHasher_$63(value) {\n        if iszero(eq(value, cleanup_t_contract$_IHasher_$63(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IHasher_$63_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IHasher_$63(value)\n    }\n\n    function abi_decode_tuple_t_uint32t_contract$_IHasher_$63_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IHasher_$63_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"_levels should be greater than z\")\n\n        mstore(add(memPtr, 32), \"ero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254(memPtr) {\n\n        mstore(add(memPtr, 0), \"_levels should be less than 32\")\n\n    }\n\n    function abi_encode_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint32(x, y) -> diff {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffff) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(memPtr) {\n\n        mstore(add(memPtr, 0), \"Index out of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C22 CODESIZE SUB DUP1 PUSH3 0x1C22 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x59 SWAP2 SWAP1 PUSH3 0x97B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH3 0xA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9C SWAP1 PUSH3 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH3 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE8 SWAP1 PUSH3 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 JUMPDEST DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0x1A7 JUMPI PUSH3 0x174 DUP2 PUSH4 0xFFFFFFFF AND PUSH3 0x1DB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH3 0x19E SWAP1 PUSH3 0xB0C JUMP JUMPDEST SWAP2 POP POP PUSH3 0x148 JUMP JUMPDEST POP PUSH3 0x1CD PUSH1 0x1 DUP4 PUSH3 0x1BB SWAP2 SWAP1 PUSH3 0xB3D JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH3 0x1DB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0xBEE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH3 0x211 JUMPI PUSH32 0x2FE54C60D3ACABF3343A35B6EBA15DB4821B340F76E741E2249685ED4899AF6C PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB PUSH3 0x246 JUMPI PUSH32 0x256A6135777EEE2FD26F54B8B7037A25439D5235CAEE224154186D2B8A52E31D PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH3 0x27B JUMPI PUSH32 0x1151949895E82AB19924DE92C40A3D6F7BCB60D92B00504B8199613683F0C200 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH3 0x2B0 JUMPI PUSH32 0x20121EE811489FF8D61F09FB89E313F14959A0F28BB428A20DBA6B0B068B3BDB PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH3 0x2E5 JUMPI PUSH32 0xA89CA6FFA14CC462CFEDB842C30ED221A50A3D6BF022A6A57DC82AB24C157C9 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x5 DUP3 SUB PUSH3 0x31A JUMPI PUSH32 0x24CA05C2B5CD42E890D6BE94C68D0689F4F21C9CEC9C0F13FE41D566DFB54959 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x6 DUP3 SUB PUSH3 0x34F JUMPI PUSH32 0x1CCB97C932565A92C60156BDBA2D08F3BF1377464E025CEE765679E604A7315C PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x7 DUP3 SUB PUSH3 0x384 JUMPI PUSH32 0x19156FBD7D1A8BF5CBA8909367DE1B624534EBAB4F0F79E003BCCDD1B182BDB4 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x8 DUP3 SUB PUSH3 0x3B9 JUMPI PUSH32 0x261AF8C1F0912E465744641409F622D466C3920AC6E5FF37E36604CB11DFFF80 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x9 DUP3 SUB PUSH3 0x3ED JUMPI PUSH31 0x58459724FF6CA5A1652FCBC3E82B93895CF08E975B19BEAB3F54C217D1C007 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0xA DUP3 SUB PUSH3 0x422 JUMPI PUSH32 0x1F04EF20DEE48D39984D8EABE768A70EAFA6310AD20849D4573C3C40C2AD1E30 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0xB DUP3 SUB PUSH3 0x457 JUMPI PUSH32 0x1BEA3DEC5DAB51567CE7E200A30F7BA6D4276AEAA53E2686F962A46C66D511E5 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0xC DUP3 SUB PUSH3 0x48C JUMPI PUSH32 0xEE0F941E2DA4B9E31C3CA97A40D8FA9CE68D97C084177071B3CB46CD3372F0F PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0xD DUP3 SUB PUSH3 0x4C1 JUMPI PUSH32 0x1CA9503E8935884501BBAF20BE14EB4C46B89772C97B96E3B2EBF3A36A948BBD PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0xE DUP3 SUB PUSH3 0x4F6 JUMPI PUSH32 0x133A80E30697CD55D8F7D4B0965B7BE24057BA5DC3DA898EE2187232446CB108 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0xF DUP3 SUB PUSH3 0x52B JUMPI PUSH32 0x13E6D8FC88839ED76E182C2A779AF5B2C0DA9DD18C90427A644F7E148A6253B6 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x10 DUP3 SUB PUSH3 0x560 JUMPI PUSH32 0x1EB16B057A477F4BC8F572EA6BEE39561098F78F15BFB3699DCBB7BD8DB61854 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x11 DUP3 SUB PUSH3 0x595 JUMPI PUSH32 0xDA2CB16A1CEAABF1C16B838F7A9E3F2A3A3088D9E0A6DEBAA748114620696EA PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x12 DUP3 SUB PUSH3 0x5CA JUMPI PUSH32 0x24A3B3D822420B14B5D8CB6C28A574F01E98EA9E940551D2EBD75CEE12649F9D PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x13 DUP3 SUB PUSH3 0x5FF JUMPI PUSH32 0x198622ACBD783D1B0D9064105B1FC8E4D8889DE95C4C519B3F635809FE6AFC05 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x14 DUP3 SUB PUSH3 0x634 JUMPI PUSH32 0x29D7ED391256CCC3EA596C86E933B89FF339D25EA8DDCED975AE2FE30B5296D4 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x15 DUP3 SUB PUSH3 0x669 JUMPI PUSH32 0x19BE59F2F0413CE78C0C3703A3A5451B1D7F39629FA33ABD11548A76065B2967 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x16 DUP3 SUB PUSH3 0x69E JUMPI PUSH32 0x1FF3F61797E538B70E619310D33F2A063E7EB59104E112E95738DA1254DC3453 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x17 DUP3 SUB PUSH3 0x6D3 JUMPI PUSH32 0x10C16AE9959CF8358980D9DD9616E48228737310A10E2B6B731C1A548F036C48 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x18 DUP3 SUB PUSH3 0x708 JUMPI PUSH32 0xBA433A63174A90AC20992E75E3095496812B652685B5E1A2EAE0B1BF4E8FCD1 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x19 DUP3 SUB PUSH3 0x73D JUMPI PUSH32 0x19DDB9DF2BC98D987D0DFECA9D2B643DEAFAB8F7036562E627C3667266A044C PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x1A DUP3 SUB PUSH3 0x772 JUMPI PUSH32 0x2D3C88B23175C5A5565DB928414C66D1912B11ACF974B2E644CAAAC04739CE99 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x1B DUP3 SUB PUSH3 0x7A7 JUMPI PUSH32 0x2EAB55F6AE4E66E32C5189EED5C470840863445760F5ED7E7B69B2A62600F354 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x1C DUP3 SUB PUSH3 0x7DB JUMPI PUSH31 0x2DF37A2642621802383CF952BF4DD1F32E05433BEEB1FD41031FB7EACE979D PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x1D DUP3 SUB PUSH3 0x810 JUMPI PUSH32 0x104AEB41435DB66C3E62FECCC1D6F5D98D0A0ED75D1374DB457CF462E3A1F427 PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x1E DUP3 SUB PUSH3 0x845 JUMPI PUSH32 0x1F3C6FD858E9A7D4B0D1F38E256A09D81D5A5E3C963987E2D4B814CFAB7C6EBB PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x1F DUP3 SUB PUSH3 0x87A JUMPI PUSH32 0x2C7A07D20DFF79D01FECEDC1134284A8D08436606C93693B67E333F671BF69CC PUSH1 0x0 SHL SWAP1 POP PUSH3 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8AE SWAP1 PUSH3 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x8DC DUP2 PUSH3 0x8C1 JUMP JUMPDEST DUP2 EQ PUSH3 0x8E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x8FC DUP2 PUSH3 0x8D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x92F DUP3 PUSH3 0x902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x943 DUP3 PUSH3 0x922 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x955 DUP2 PUSH3 0x936 JUMP JUMPDEST DUP2 EQ PUSH3 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x975 DUP2 PUSH3 0x94A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x995 JUMPI PUSH3 0x994 PUSH3 0x8BC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x9A5 DUP6 DUP3 DUP7 ADD PUSH3 0x8EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x9B8 DUP6 DUP3 DUP7 ADD PUSH3 0x964 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5F6C6576656C732073686F756C642062652067726561746572207468616E207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA31 PUSH1 0x23 DUP4 PUSH3 0x9C2 JUMP JUMPDEST SWAP2 POP PUSH3 0xA3E DUP3 PUSH3 0x9D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xA64 DUP2 PUSH3 0xA22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5F6C6576656C732073686F756C64206265206C657373207468616E2033320000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAA3 PUSH1 0x1E DUP4 PUSH3 0x9C2 JUMP JUMPDEST SWAP2 POP PUSH3 0xAB0 DUP3 PUSH3 0xA6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xAD6 DUP2 PUSH3 0xA94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xB19 DUP3 PUSH3 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH3 0xB32 JUMPI PUSH3 0xB31 PUSH3 0xADD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB4A DUP3 PUSH3 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH3 0xB57 DUP4 PUSH3 0x8C1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH3 0xB76 JUMPI PUSH3 0xB75 PUSH3 0xADD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xBB4 PUSH1 0x13 DUP4 PUSH3 0x9C2 JUMP JUMPDEST SWAP2 POP PUSH3 0xBC1 DUP3 PUSH3 0xB7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xBE7 DUP2 PUSH3 0xBA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1018 PUSH3 0xC0A PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xB01 ADD MSTORE PUSH2 0x1018 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEBF0C717 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xEBF0C717 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xEC732959 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xED33639F EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xF178E47C EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xFC7E9C6F EQ PUSH2 0x1BE JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x414A37BA EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x4ECF518B EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8EA3099E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xE8295588 EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0xADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP4 PUSH1 0x0 SHR LT PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP3 PUSH1 0x0 SHR LT PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF47D33B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x325 SWAP3 SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x341 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0xF07 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP1 PUSH2 0x39C JUMPI PUSH2 0x39B PUSH2 0xF47 JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x0 SHR DUP4 ADDMOD SWAP2 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF47D33B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DF SWAP3 SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0xF07 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH1 0x0 SHL SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x46A JUMPI PUSH32 0x2FE54C60D3ACABF3343A35B6EBA15DB4821B340F76E741E2249685ED4899AF6C PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB PUSH2 0x49D JUMPI PUSH32 0x256A6135777EEE2FD26F54B8B7037A25439D5235CAEE224154186D2B8A52E31D PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x4D0 JUMPI PUSH32 0x1151949895E82AB19924DE92C40A3D6F7BCB60D92B00504B8199613683F0C200 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x503 JUMPI PUSH32 0x20121EE811489FF8D61F09FB89E313F14959A0F28BB428A20DBA6B0B068B3BDB PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x536 JUMPI PUSH32 0xA89CA6FFA14CC462CFEDB842C30ED221A50A3D6BF022A6A57DC82AB24C157C9 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x5 DUP3 SUB PUSH2 0x569 JUMPI PUSH32 0x24CA05C2B5CD42E890D6BE94C68D0689F4F21C9CEC9C0F13FE41D566DFB54959 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x6 DUP3 SUB PUSH2 0x59C JUMPI PUSH32 0x1CCB97C932565A92C60156BDBA2D08F3BF1377464E025CEE765679E604A7315C PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x7 DUP3 SUB PUSH2 0x5CF JUMPI PUSH32 0x19156FBD7D1A8BF5CBA8909367DE1B624534EBAB4F0F79E003BCCDD1B182BDB4 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x8 DUP3 SUB PUSH2 0x602 JUMPI PUSH32 0x261AF8C1F0912E465744641409F622D466C3920AC6E5FF37E36604CB11DFFF80 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x9 DUP3 SUB PUSH2 0x634 JUMPI PUSH31 0x58459724FF6CA5A1652FCBC3E82B93895CF08E975B19BEAB3F54C217D1C007 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xA DUP3 SUB PUSH2 0x667 JUMPI PUSH32 0x1F04EF20DEE48D39984D8EABE768A70EAFA6310AD20849D4573C3C40C2AD1E30 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xB DUP3 SUB PUSH2 0x69A JUMPI PUSH32 0x1BEA3DEC5DAB51567CE7E200A30F7BA6D4276AEAA53E2686F962A46C66D511E5 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xC DUP3 SUB PUSH2 0x6CD JUMPI PUSH32 0xEE0F941E2DA4B9E31C3CA97A40D8FA9CE68D97C084177071B3CB46CD3372F0F PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xD DUP3 SUB PUSH2 0x700 JUMPI PUSH32 0x1CA9503E8935884501BBAF20BE14EB4C46B89772C97B96E3B2EBF3A36A948BBD PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xE DUP3 SUB PUSH2 0x733 JUMPI PUSH32 0x133A80E30697CD55D8F7D4B0965B7BE24057BA5DC3DA898EE2187232446CB108 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xF DUP3 SUB PUSH2 0x766 JUMPI PUSH32 0x13E6D8FC88839ED76E182C2A779AF5B2C0DA9DD18C90427A644F7E148A6253B6 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x10 DUP3 SUB PUSH2 0x799 JUMPI PUSH32 0x1EB16B057A477F4BC8F572EA6BEE39561098F78F15BFB3699DCBB7BD8DB61854 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x11 DUP3 SUB PUSH2 0x7CC JUMPI PUSH32 0xDA2CB16A1CEAABF1C16B838F7A9E3F2A3A3088D9E0A6DEBAA748114620696EA PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x12 DUP3 SUB PUSH2 0x7FF JUMPI PUSH32 0x24A3B3D822420B14B5D8CB6C28A574F01E98EA9E940551D2EBD75CEE12649F9D PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x13 DUP3 SUB PUSH2 0x832 JUMPI PUSH32 0x198622ACBD783D1B0D9064105B1FC8E4D8889DE95C4C519B3F635809FE6AFC05 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x14 DUP3 SUB PUSH2 0x865 JUMPI PUSH32 0x29D7ED391256CCC3EA596C86E933B89FF339D25EA8DDCED975AE2FE30B5296D4 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x15 DUP3 SUB PUSH2 0x898 JUMPI PUSH32 0x19BE59F2F0413CE78C0C3703A3A5451B1D7F39629FA33ABD11548A76065B2967 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x16 DUP3 SUB PUSH2 0x8CB JUMPI PUSH32 0x1FF3F61797E538B70E619310D33F2A063E7EB59104E112E95738DA1254DC3453 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x17 DUP3 SUB PUSH2 0x8FE JUMPI PUSH32 0x10C16AE9959CF8358980D9DD9616E48228737310A10E2B6B731C1A548F036C48 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x18 DUP3 SUB PUSH2 0x931 JUMPI PUSH32 0xBA433A63174A90AC20992E75E3095496812B652685B5E1A2EAE0B1BF4E8FCD1 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x19 DUP3 SUB PUSH2 0x964 JUMPI PUSH32 0x19DDB9DF2BC98D987D0DFECA9D2B643DEAFAB8F7036562E627C3667266A044C PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1A DUP3 SUB PUSH2 0x997 JUMPI PUSH32 0x2D3C88B23175C5A5565DB928414C66D1912B11ACF974B2E644CAAAC04739CE99 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1B DUP3 SUB PUSH2 0x9CA JUMPI PUSH32 0x2EAB55F6AE4E66E32C5189EED5C470840863445760F5ED7E7B69B2A62600F354 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1C DUP3 SUB PUSH2 0x9FC JUMPI PUSH31 0x2DF37A2642621802383CF952BF4DD1F32E05433BEEB1FD41031FB7EACE979D PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1D DUP3 SUB PUSH2 0xA2F JUMPI PUSH32 0x104AEB41435DB66C3E62FECCC1D6F5D98D0A0ED75D1374DB457CF462E3A1F427 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1E DUP3 SUB PUSH2 0xA62 JUMPI PUSH32 0x1F3C6FD858E9A7D4B0D1F38E256A09D81D5A5E3C963987E2D4B814CFAB7C6EBB PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1F DUP3 SUB PUSH2 0xA95 JUMPI PUSH32 0x2C7A07D20DFF79D01FECEDC1134284A8D08436606C93693B67E333F671BF69CC PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC7 SWAP1 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x2FE54C60D3ACABF3343A35B6EBA15DB4821B340F76E741E2249685ED4899AF6C DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB64 DUP2 PUSH2 0xB51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9E DUP2 PUSH2 0xB85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEF DUP3 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC01 DUP3 PUSH2 0xBE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC11 DUP2 PUSH2 0xBF6 JUMP JUMPDEST DUP2 EQ PUSH2 0xC1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC2E DUP2 PUSH2 0xC08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC47 DUP2 PUSH2 0xC34 JUMP JUMPDEST DUP2 EQ PUSH2 0xC52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC64 DUP2 PUSH2 0xC3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC83 JUMPI PUSH2 0xC82 PUSH2 0xBBF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC91 DUP7 DUP3 DUP8 ADD PUSH2 0xC1F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA2 DUP7 DUP3 DUP8 ADD PUSH2 0xC55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB3 DUP7 DUP3 DUP8 ADD PUSH2 0xC55 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xCC6 DUP2 PUSH2 0xC34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xB51 JUMP JUMPDEST DUP2 EQ PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD0D DUP2 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD28 PUSH2 0xBBF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP5 DUP3 DUP6 ADD PUSH2 0xCFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD65 PUSH2 0xD60 PUSH2 0xD5B DUP5 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST PUSH2 0xBC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD77 DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD89 DUP3 PUSH2 0xD6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD99 DUP2 PUSH2 0xD7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5F6C6566742073686F756C6420626520696E7369646520746865206669656C64 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE01 PUSH1 0x20 DUP4 PUSH2 0xDBA JUMP JUMPDEST SWAP2 POP PUSH2 0xE0C DUP3 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE30 DUP2 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5F72696768742073686F756C6420626520696E7369646520746865206669656C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE93 PUSH1 0x21 DUP4 PUSH2 0xDBA JUMP JUMPDEST SWAP2 POP PUSH2 0xE9E DUP3 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC2 DUP2 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEDE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0xEEB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF01 DUP2 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xBBF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2C DUP6 DUP3 DUP7 ADD PUSH2 0xEF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF3D DUP6 DUP3 DUP7 ADD PUSH2 0xEF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAC PUSH1 0x13 DUP4 PUSH2 0xDBA JUMP JUMPDEST SWAP2 POP PUSH2 0xFB7 DUP3 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFDB DUP2 PUSH2 0xF9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xD2 0xC7 MLOAD 0xAF PUSH6 0x7ADA721B82EB 0xDF CODECOPY SWAP6 PUSH8 0xECF705EC4659F893 0xCE RETURNDATASIZE 0xB5 SWAP8 SWAP7 PUSH2 0xD4A3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"205:8549:1:-:0;;;994:1;968:27;;;;;;;;;;;;;;;;;;;;1002:374;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1075:1;1065:7;:11;;;1057:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1144:2;1134:7;:12;;;1126:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1200:7;1191:6;;:16;;;;;;;;;;;;;;;;;;1226:7;1217:16;;;;;;;;;;1249:8;1244:90;1267:7;1263:11;;:1;:11;;;1244:90;;;1315:8;1321:1;1315:8;;:5;;;:8;;:::i;:::-;1295:14;:17;1310:1;1295:17;;;;;;;;;;;;;:28;;;;1276:3;;;;;:::i;:::-;;;;1244:90;;;;1351:18;1367:1;1357:7;:11;;;;:::i;:::-;1351:18;;:5;;;:18;;:::i;:::-;1344:4;:25;;;;1002:374;;205:8549;;3028:5724;3075:7;3103:1;3098;:6;3094:5651;;3170:66;3141:113;;3118:136;;;;3094:5651;3278:1;3273;:6;3269:5476;;3345:66;3316:113;;3293:136;;;;3269:5476;3453:1;3448;:6;3444:5301;;3520:66;3491:113;;3468:136;;;;3444:5301;3628:1;3623;:6;3619:5126;;3695:66;3666:113;;3643:136;;;;3619:5126;3803:1;3798;:6;3794:4951;;3870:66;3841:113;;3818:136;;;;3794:4951;3978:1;3973;:6;3969:4776;;4045:66;4016:113;;3993:136;;;;3969:4776;4153:1;4148;:6;4144:4601;;4220:66;4191:113;;4168:136;;;;4144:4601;4328:1;4323;:6;4319:4426;;4395:66;4366:113;;4343:136;;;;4319:4426;4503:1;4498;:6;4494:4251;;4570:66;4541:113;;4518:136;;;;4494:4251;4678:1;4673;:6;4669:4076;;4745:66;4716:113;;4693:136;;;;4669:4076;4853:2;4848:1;:7;4844:3901;;4921:66;4892:113;;4869:136;;;;4844:3901;5029:2;5024:1;:7;5020:3725;;5097:66;5068:113;;5045:136;;;;5020:3725;5205:2;5200:1;:7;5196:3549;;5273:66;5244:113;;5221:136;;;;5196:3549;5381:2;5376:1;:7;5372:3373;;5449:66;5420:113;;5397:136;;;;5372:3373;5557:2;5552:1;:7;5548:3197;;5625:66;5596:113;;5573:136;;;;5548:3197;5733:2;5728:1;:7;5724:3021;;5801:66;5772:113;;5749:136;;;;5724:3021;5909:2;5904:1;:7;5900:2845;;5977:66;5948:113;;5925:136;;;;5900:2845;6085:2;6080:1;:7;6076:2669;;6153:66;6124:113;;6101:136;;;;6076:2669;6261:2;6256:1;:7;6252:2493;;6329:66;6300:113;;6277:136;;;;6252:2493;6437:2;6432:1;:7;6428:2317;;6505:66;6476:113;;6453:136;;;;6428:2317;6613:2;6608:1;:7;6604:2141;;6681:66;6652:113;;6629:136;;;;6604:2141;6789:2;6784:1;:7;6780:1965;;6857:66;6828:113;;6805:136;;;;6780:1965;6965:2;6960:1;:7;6956:1789;;7033:66;7004:113;;6981:136;;;;6956:1789;7141:2;7136:1;:7;7132:1613;;7209:66;7180:113;;7157:136;;;;7132:1613;7317:2;7312:1;:7;7308:1437;;7385:66;7356:113;;7333:136;;;;7308:1437;7493:2;7488:1;:7;7484:1261;;7561:66;7532:113;;7509:136;;;;7484:1261;7669:2;7664:1;:7;7660:1085;;7737:66;7708:113;;7685:136;;;;7660:1085;7845:2;7840:1;:7;7836:909;;7913:66;7884:113;;7861:136;;;;7836:909;8021:2;8016:1;:7;8012:733;;8089:66;8060:113;;8037:136;;;;8012:733;8197:2;8192:1;:7;8188:557;;8265:66;8236:113;;8213:136;;;;8188:557;8373:2;8368:1;:7;8364:381;;8441:66;8412:113;;8389:136;;;;8364:381;8549:2;8544:1;:7;8540:205;;8617:66;8588:113;;8565:136;;;;8540:205;8716:29;;;;;;;;;;:::i;:::-;;;;;;;;3028:5724;;;;:::o;88:117:26:-;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:141::-;615:5;646:6;640:13;631:22;;662:32;688:5;662:32;:::i;:::-;559:141;;;;:::o;706:126::-;743:7;783:42;776:5;772:54;761:65;;706:126;;;:::o;838:96::-;875:7;904:24;922:5;904:24;:::i;:::-;893:35;;838:96;;;:::o;940:110::-;991:7;1020:24;1038:5;1020:24;:::i;:::-;1009:35;;940:110;;;:::o;1056:150::-;1143:38;1175:5;1143:38;:::i;:::-;1136:5;1133:49;1123:77;;1196:1;1193;1186:12;1123:77;1056:150;:::o;1212:171::-;1283:5;1314:6;1308:13;1299:22;;1330:47;1371:5;1330:47;:::i;:::-;1212:171;;;;:::o;1389:533::-;1481:6;1489;1538:2;1526:9;1517:7;1513:23;1509:32;1506:119;;;1544:79;;:::i;:::-;1506:119;1664:1;1689:63;1744:7;1735:6;1724:9;1720:22;1689:63;:::i;:::-;1679:73;;1635:127;1801:2;1827:78;1897:7;1888:6;1877:9;1873:22;1827:78;:::i;:::-;1817:88;;1772:143;1389:533;;;;;:::o;1928:169::-;2012:11;2046:6;2041:3;2034:19;2086:4;2081:3;2077:14;2062:29;;1928:169;;;;:::o;2103:222::-;2243:34;2239:1;2231:6;2227:14;2220:58;2312:5;2307:2;2299:6;2295:15;2288:30;2103:222;:::o;2331:366::-;2473:3;2494:67;2558:2;2553:3;2494:67;:::i;:::-;2487:74;;2570:93;2659:3;2570:93;:::i;:::-;2688:2;2683:3;2679:12;2672:19;;2331:366;;;:::o;2703:419::-;2869:4;2907:2;2896:9;2892:18;2884:26;;2956:9;2950:4;2946:20;2942:1;2931:9;2927:17;2920:47;2984:131;3110:4;2984:131;:::i;:::-;2976:139;;2703:419;;;:::o;3128:180::-;3268:32;3264:1;3256:6;3252:14;3245:56;3128:180;:::o;3314:366::-;3456:3;3477:67;3541:2;3536:3;3477:67;:::i;:::-;3470:74;;3553:93;3642:3;3553:93;:::i;:::-;3671:2;3666:3;3662:12;3655:19;;3314:366;;;:::o;3686:419::-;3852:4;3890:2;3879:9;3875:18;3867:26;;3939:9;3933:4;3929:20;3925:1;3914:9;3910:17;3903:47;3967:131;4093:4;3967:131;:::i;:::-;3959:139;;3686:419;;;:::o;4111:180::-;4159:77;4156:1;4149:88;4256:4;4253:1;4246:15;4280:4;4277:1;4270:15;4297:175;4335:3;4358:23;4375:5;4358:23;:::i;:::-;4349:32;;4403:10;4396:5;4393:21;4390:47;;4417:18;;:::i;:::-;4390:47;4464:1;4457:5;4453:13;4446:20;;4297:175;;;:::o;4478:200::-;4517:4;4537:19;4554:1;4537:19;:::i;:::-;4532:24;;4570:19;4587:1;4570:19;:::i;:::-;4565:24;;4613:1;4610;4606:9;4598:17;;4637:10;4631:4;4628:20;4625:46;;;4651:18;;:::i;:::-;4625:46;4478:200;;;;:::o;4684:169::-;4824:21;4820:1;4812:6;4808:14;4801:45;4684:169;:::o;4859:366::-;5001:3;5022:67;5086:2;5081:3;5022:67;:::i;:::-;5015:74;;5098:93;5187:3;5098:93;:::i;:::-;5216:2;5211:3;5207:12;5200:19;;4859:366;;;:::o;5231:419::-;5397:4;5435:2;5424:9;5420:18;5412:26;;5484:9;5478:4;5474:20;5470:1;5459:9;5455:17;5448:47;5512:131;5638:4;5512:131;:::i;:::-;5504:139;;5231:419;;;:::o;205:8549:1:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@FIELD_SIZE_66":{"entryPoint":476,"id":66,"parameterSlots":0,"returnSlots":0},"@ZERO_VALUE_69":{"entryPoint":2779,"id":69,"parameterSlots":0,"returnSlots":0},"@filledSubtrees_78":{"entryPoint":2851,"id":78,"parameterSlots":0,"returnSlots":0},"@hashLeftRight_223":{"entryPoint":532,"id":223,"parameterSlots":3,"returnSlots":1},"@hasher_72":{"entryPoint":2815,"id":72,"parameterSlots":0,"returnSlots":0},"@levels_74":{"entryPoint":512,"id":74,"parameterSlots":0,"returnSlots":0},"@nextIndex_83":{"entryPoint":2875,"id":83,"parameterSlots":0,"returnSlots":0},"@root_80":{"entryPoint":2773,"id":80,"parameterSlots":0,"returnSlots":0},"@zeros_628":{"entryPoint":1078,"id":628,"parameterSlots":1,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":3157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IHasher_$63":{"entryPoint":3103,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3326,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IHasher_$63t_bytes32t_bytes32":{"entryPoint":3178,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":3347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":3847,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3261,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IHasher_$63_to_t_address_fromStack":{"entryPoint":3472,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e_to_t_string_memory_ptr_fromStack":{"entryPoint":3572,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e_to_t_string_memory_ptr_fromStack":{"entryPoint":3718,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack":{"entryPoint":3999,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2907,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":2965,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":3276,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IHasher_$63__to_t_address__fromStack_reversed":{"entryPoint":3487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3607,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3753,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4034,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2922,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3785,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":2980,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3514,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3044,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3124,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IHasher_$63":{"entryPoint":3062,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3012,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2897,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":2949,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IHasher_$63_to_t_address":{"entryPoint":3454,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3436,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3402,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":3392,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x12":{"entryPoint":3911,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3007,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e":{"entryPoint":3531,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e":{"entryPoint":3639,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367":{"entryPoint":3958,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":3134,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IHasher_$63":{"entryPoint":3080,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3303,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9112:26","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:26","statements":[{"nodeType":"YulAssignment","src":"62:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:26","type":""}],"src":"7:77:26"},{"body":{"nodeType":"YulBlock","src":"155:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:26"},"nodeType":"YulFunctionCall","src":"177:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:26"},"nodeType":"YulFunctionCall","src":"165:37:26"},"nodeType":"YulExpressionStatement","src":"165:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:26","type":""}],"src":"90:118:26"},{"body":{"nodeType":"YulBlock","src":"312:124:26","statements":[{"nodeType":"YulAssignment","src":"322:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:26"},"nodeType":"YulFunctionCall","src":"330:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:26"},"nodeType":"YulFunctionCall","src":"411:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:26"},"nodeType":"YulFunctionCall","src":"358:71:26"},"nodeType":"YulExpressionStatement","src":"358:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:26","type":""}],"src":"214:222:26"},{"body":{"nodeType":"YulBlock","src":"486:49:26","statements":[{"nodeType":"YulAssignment","src":"496:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"511:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"518:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"507:3:26"},"nodeType":"YulFunctionCall","src":"507:22:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"496:7:26"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"468:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"478:7:26","type":""}],"src":"442:93:26"},{"body":{"nodeType":"YulBlock","src":"604:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"621:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"643:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"626:16:26"},"nodeType":"YulFunctionCall","src":"626:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"614:6:26"},"nodeType":"YulFunctionCall","src":"614:36:26"},"nodeType":"YulExpressionStatement","src":"614:36:26"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"592:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"599:3:26","type":""}],"src":"541:115:26"},{"body":{"nodeType":"YulBlock","src":"758:122:26","statements":[{"nodeType":"YulAssignment","src":"768:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"780:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"791:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"776:3:26"},"nodeType":"YulFunctionCall","src":"776:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"768:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"846:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"859:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"870:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"855:3:26"},"nodeType":"YulFunctionCall","src":"855:17:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"804:41:26"},"nodeType":"YulFunctionCall","src":"804:69:26"},"nodeType":"YulExpressionStatement","src":"804:69:26"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"730:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"742:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"753:4:26","type":""}],"src":"662:218:26"},{"body":{"nodeType":"YulBlock","src":"926:35:26","statements":[{"nodeType":"YulAssignment","src":"936:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"952:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"946:5:26"},"nodeType":"YulFunctionCall","src":"946:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"919:6:26","type":""}],"src":"886:75:26"},{"body":{"nodeType":"YulBlock","src":"1056:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1073:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1076:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1066:6:26"},"nodeType":"YulFunctionCall","src":"1066:12:26"},"nodeType":"YulExpressionStatement","src":"1066:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"967:117:26"},{"body":{"nodeType":"YulBlock","src":"1179:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1196:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1199:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1189:6:26"},"nodeType":"YulFunctionCall","src":"1189:12:26"},"nodeType":"YulExpressionStatement","src":"1189:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1090:117:26"},{"body":{"nodeType":"YulBlock","src":"1258:81:26","statements":[{"nodeType":"YulAssignment","src":"1268:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1290:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1279:3:26"},"nodeType":"YulFunctionCall","src":"1279:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1268:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1240:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1250:7:26","type":""}],"src":"1213:126:26"},{"body":{"nodeType":"YulBlock","src":"1390:51:26","statements":[{"nodeType":"YulAssignment","src":"1400:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1429:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1411:17:26"},"nodeType":"YulFunctionCall","src":"1411:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1400:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1372:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1382:7:26","type":""}],"src":"1345:96:26"},{"body":{"nodeType":"YulBlock","src":"1506:51:26","statements":[{"nodeType":"YulAssignment","src":"1516:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1545:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1527:17:26"},"nodeType":"YulFunctionCall","src":"1527:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1516:7:26"}]}]},"name":"cleanup_t_contract$_IHasher_$63","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1488:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1498:7:26","type":""}],"src":"1447:110:26"},{"body":{"nodeType":"YulBlock","src":"1620:93:26","statements":[{"body":{"nodeType":"YulBlock","src":"1691:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1700:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1703:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1693:6:26"},"nodeType":"YulFunctionCall","src":"1693:12:26"},"nodeType":"YulExpressionStatement","src":"1693:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1643:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1682:5:26"}],"functionName":{"name":"cleanup_t_contract$_IHasher_$63","nodeType":"YulIdentifier","src":"1650:31:26"},"nodeType":"YulFunctionCall","src":"1650:38:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1640:2:26"},"nodeType":"YulFunctionCall","src":"1640:49:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1633:6:26"},"nodeType":"YulFunctionCall","src":"1633:57:26"},"nodeType":"YulIf","src":"1630:77:26"}]},"name":"validator_revert_t_contract$_IHasher_$63","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1613:5:26","type":""}],"src":"1563:150:26"},{"body":{"nodeType":"YulBlock","src":"1785:101:26","statements":[{"nodeType":"YulAssignment","src":"1795:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1817:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1804:12:26"},"nodeType":"YulFunctionCall","src":"1804:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1795:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1874:5:26"}],"functionName":{"name":"validator_revert_t_contract$_IHasher_$63","nodeType":"YulIdentifier","src":"1833:40:26"},"nodeType":"YulFunctionCall","src":"1833:47:26"},"nodeType":"YulExpressionStatement","src":"1833:47:26"}]},"name":"abi_decode_t_contract$_IHasher_$63","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1763:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1771:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1779:5:26","type":""}],"src":"1719:167:26"},{"body":{"nodeType":"YulBlock","src":"1937:32:26","statements":[{"nodeType":"YulAssignment","src":"1947:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1958:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1947:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1919:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1929:7:26","type":""}],"src":"1892:77:26"},{"body":{"nodeType":"YulBlock","src":"2018:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"2075:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2084:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2077:6:26"},"nodeType":"YulFunctionCall","src":"2077:12:26"},"nodeType":"YulExpressionStatement","src":"2077:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2041:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2066:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2048:17:26"},"nodeType":"YulFunctionCall","src":"2048:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2038:2:26"},"nodeType":"YulFunctionCall","src":"2038:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2031:6:26"},"nodeType":"YulFunctionCall","src":"2031:43:26"},"nodeType":"YulIf","src":"2028:63:26"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2011:5:26","type":""}],"src":"1975:122:26"},{"body":{"nodeType":"YulBlock","src":"2155:87:26","statements":[{"nodeType":"YulAssignment","src":"2165:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2187:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2174:12:26"},"nodeType":"YulFunctionCall","src":"2174:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2230:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"2203:26:26"},"nodeType":"YulFunctionCall","src":"2203:33:26"},"nodeType":"YulExpressionStatement","src":"2203:33:26"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2133:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2141:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2149:5:26","type":""}],"src":"2103:139:26"},{"body":{"nodeType":"YulBlock","src":"2362:533:26","statements":[{"body":{"nodeType":"YulBlock","src":"2408:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2410:77:26"},"nodeType":"YulFunctionCall","src":"2410:79:26"},"nodeType":"YulExpressionStatement","src":"2410:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2383:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2392:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2379:3:26"},"nodeType":"YulFunctionCall","src":"2379:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2404:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2375:3:26"},"nodeType":"YulFunctionCall","src":"2375:32:26"},"nodeType":"YulIf","src":"2372:119:26"},{"nodeType":"YulBlock","src":"2501:131:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2516:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2530:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2520:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2545:77:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2594:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2605:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2590:3:26"},"nodeType":"YulFunctionCall","src":"2590:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2614:7:26"}],"functionName":{"name":"abi_decode_t_contract$_IHasher_$63","nodeType":"YulIdentifier","src":"2555:34:26"},"nodeType":"YulFunctionCall","src":"2555:67:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2545:6:26"}]}]},{"nodeType":"YulBlock","src":"2642:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2657:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2671:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2661:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2687:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2722:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2733:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2718:3:26"},"nodeType":"YulFunctionCall","src":"2718:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2742:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2697:20:26"},"nodeType":"YulFunctionCall","src":"2697:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2687:6:26"}]}]},{"nodeType":"YulBlock","src":"2770:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2785:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2799:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2789:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2815:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2850:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2861:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2846:3:26"},"nodeType":"YulFunctionCall","src":"2846:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2870:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2825:20:26"},"nodeType":"YulFunctionCall","src":"2825:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2815:6:26"}]}]}]},"name":"abi_decode_tuple_t_contract$_IHasher_$63t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2316:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2327:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2339:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2347:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2355:6:26","type":""}],"src":"2248:647:26"},{"body":{"nodeType":"YulBlock","src":"2966:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2983:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3006:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2988:17:26"},"nodeType":"YulFunctionCall","src":"2988:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2976:6:26"},"nodeType":"YulFunctionCall","src":"2976:37:26"},"nodeType":"YulExpressionStatement","src":"2976:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2954:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2961:3:26","type":""}],"src":"2901:118:26"},{"body":{"nodeType":"YulBlock","src":"3123:124:26","statements":[{"nodeType":"YulAssignment","src":"3133:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3145:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3156:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3141:3:26"},"nodeType":"YulFunctionCall","src":"3141:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3133:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3213:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3226:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3237:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3222:3:26"},"nodeType":"YulFunctionCall","src":"3222:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"3169:43:26"},"nodeType":"YulFunctionCall","src":"3169:71:26"},"nodeType":"YulExpressionStatement","src":"3169:71:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3095:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3107:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3118:4:26","type":""}],"src":"3025:222:26"},{"body":{"nodeType":"YulBlock","src":"3296:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"3353:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3362:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3365:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3355:6:26"},"nodeType":"YulFunctionCall","src":"3355:12:26"},"nodeType":"YulExpressionStatement","src":"3355:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3319:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3344:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3326:17:26"},"nodeType":"YulFunctionCall","src":"3326:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3316:2:26"},"nodeType":"YulFunctionCall","src":"3316:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3309:6:26"},"nodeType":"YulFunctionCall","src":"3309:43:26"},"nodeType":"YulIf","src":"3306:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3289:5:26","type":""}],"src":"3253:122:26"},{"body":{"nodeType":"YulBlock","src":"3433:87:26","statements":[{"nodeType":"YulAssignment","src":"3443:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3465:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3452:12:26"},"nodeType":"YulFunctionCall","src":"3452:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3443:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3508:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3481:26:26"},"nodeType":"YulFunctionCall","src":"3481:33:26"},"nodeType":"YulExpressionStatement","src":"3481:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3411:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3419:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3427:5:26","type":""}],"src":"3381:139:26"},{"body":{"nodeType":"YulBlock","src":"3592:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"3638:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3640:77:26"},"nodeType":"YulFunctionCall","src":"3640:79:26"},"nodeType":"YulExpressionStatement","src":"3640:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3613:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3622:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3609:3:26"},"nodeType":"YulFunctionCall","src":"3609:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3634:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3605:3:26"},"nodeType":"YulFunctionCall","src":"3605:32:26"},"nodeType":"YulIf","src":"3602:119:26"},{"nodeType":"YulBlock","src":"3731:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3746:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3760:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3750:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3775:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3810:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3821:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3806:3:26"},"nodeType":"YulFunctionCall","src":"3806:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3830:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3785:20:26"},"nodeType":"YulFunctionCall","src":"3785:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3775:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3562:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3573:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3585:6:26","type":""}],"src":"3526:329:26"},{"body":{"nodeType":"YulBlock","src":"3893:28:26","statements":[{"nodeType":"YulAssignment","src":"3903:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"3910:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3903:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3879:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3889:3:26","type":""}],"src":"3861:60:26"},{"body":{"nodeType":"YulBlock","src":"3987:82:26","statements":[{"nodeType":"YulAssignment","src":"3997:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4055:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4037:17:26"},"nodeType":"YulFunctionCall","src":"4037:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4028:8:26"},"nodeType":"YulFunctionCall","src":"4028:34:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4010:17:26"},"nodeType":"YulFunctionCall","src":"4010:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3997:9:26"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3967:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3977:9:26","type":""}],"src":"3927:142:26"},{"body":{"nodeType":"YulBlock","src":"4135:66:26","statements":[{"nodeType":"YulAssignment","src":"4145:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4189:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"4158:30:26"},"nodeType":"YulFunctionCall","src":"4158:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4145:9:26"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4115:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4125:9:26","type":""}],"src":"4075:126:26"},{"body":{"nodeType":"YulBlock","src":"4281:66:26","statements":[{"nodeType":"YulAssignment","src":"4291:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4335:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4304:30:26"},"nodeType":"YulFunctionCall","src":"4304:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4291:9:26"}]}]},"name":"convert_t_contract$_IHasher_$63_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4261:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4271:9:26","type":""}],"src":"4207:140:26"},{"body":{"nodeType":"YulBlock","src":"4432:80:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4449:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4499:5:26"}],"functionName":{"name":"convert_t_contract$_IHasher_$63_to_t_address","nodeType":"YulIdentifier","src":"4454:44:26"},"nodeType":"YulFunctionCall","src":"4454:51:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4442:6:26"},"nodeType":"YulFunctionCall","src":"4442:64:26"},"nodeType":"YulExpressionStatement","src":"4442:64:26"}]},"name":"abi_encode_t_contract$_IHasher_$63_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4420:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4427:3:26","type":""}],"src":"4353:159:26"},{"body":{"nodeType":"YulBlock","src":"4630:138:26","statements":[{"nodeType":"YulAssignment","src":"4640:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4652:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4663:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4648:3:26"},"nodeType":"YulFunctionCall","src":"4648:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4640:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4734:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4747:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4758:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4743:3:26"},"nodeType":"YulFunctionCall","src":"4743:17:26"}],"functionName":{"name":"abi_encode_t_contract$_IHasher_$63_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4676:57:26"},"nodeType":"YulFunctionCall","src":"4676:85:26"},"nodeType":"YulExpressionStatement","src":"4676:85:26"}]},"name":"abi_encode_tuple_t_contract$_IHasher_$63__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4602:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4614:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4625:4:26","type":""}],"src":"4518:250:26"},{"body":{"nodeType":"YulBlock","src":"4870:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4887:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4892:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4880:6:26"},"nodeType":"YulFunctionCall","src":"4880:19:26"},"nodeType":"YulExpressionStatement","src":"4880:19:26"},{"nodeType":"YulAssignment","src":"4908:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4927:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"4932:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4923:3:26"},"nodeType":"YulFunctionCall","src":"4923:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4908:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4842:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"4847:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4858:11:26","type":""}],"src":"4774:169:26"},{"body":{"nodeType":"YulBlock","src":"5055:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5077:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5085:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5073:3:26"},"nodeType":"YulFunctionCall","src":"5073:14:26"},{"hexValue":"5f6c6566742073686f756c6420626520696e7369646520746865206669656c64","kind":"string","nodeType":"YulLiteral","src":"5089:34:26","type":"","value":"_left should be inside the field"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5066:6:26"},"nodeType":"YulFunctionCall","src":"5066:58:26"},"nodeType":"YulExpressionStatement","src":"5066:58:26"}]},"name":"store_literal_in_memory_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5047:6:26","type":""}],"src":"4949:182:26"},{"body":{"nodeType":"YulBlock","src":"5283:220:26","statements":[{"nodeType":"YulAssignment","src":"5293:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5359:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5364:2:26","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5300:58:26"},"nodeType":"YulFunctionCall","src":"5300:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5293:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5465:3:26"}],"functionName":{"name":"store_literal_in_memory_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e","nodeType":"YulIdentifier","src":"5376:88:26"},"nodeType":"YulFunctionCall","src":"5376:93:26"},"nodeType":"YulExpressionStatement","src":"5376:93:26"},{"nodeType":"YulAssignment","src":"5478:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5489:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5494:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:26"},"nodeType":"YulFunctionCall","src":"5485:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5478:3:26"}]}]},"name":"abi_encode_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5271:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5279:3:26","type":""}],"src":"5137:366:26"},{"body":{"nodeType":"YulBlock","src":"5680:248:26","statements":[{"nodeType":"YulAssignment","src":"5690:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5702:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5713:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5698:3:26"},"nodeType":"YulFunctionCall","src":"5698:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5690:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5737:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5748:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5733:3:26"},"nodeType":"YulFunctionCall","src":"5733:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5756:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5762:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5752:3:26"},"nodeType":"YulFunctionCall","src":"5752:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5726:6:26"},"nodeType":"YulFunctionCall","src":"5726:47:26"},"nodeType":"YulExpressionStatement","src":"5726:47:26"},{"nodeType":"YulAssignment","src":"5782:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5916:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5790:124:26"},"nodeType":"YulFunctionCall","src":"5790:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5782:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5660:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5675:4:26","type":""}],"src":"5509:419:26"},{"body":{"nodeType":"YulBlock","src":"6040:114:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6062:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6070:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6058:3:26"},"nodeType":"YulFunctionCall","src":"6058:14:26"},{"hexValue":"5f72696768742073686f756c6420626520696e7369646520746865206669656c","kind":"string","nodeType":"YulLiteral","src":"6074:34:26","type":"","value":"_right should be inside the fiel"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6051:6:26"},"nodeType":"YulFunctionCall","src":"6051:58:26"},"nodeType":"YulExpressionStatement","src":"6051:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6130:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6138:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6126:3:26"},"nodeType":"YulFunctionCall","src":"6126:15:26"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"6143:3:26","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6119:6:26"},"nodeType":"YulFunctionCall","src":"6119:28:26"},"nodeType":"YulExpressionStatement","src":"6119:28:26"}]},"name":"store_literal_in_memory_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6032:6:26","type":""}],"src":"5934:220:26"},{"body":{"nodeType":"YulBlock","src":"6306:220:26","statements":[{"nodeType":"YulAssignment","src":"6316:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6382:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6387:2:26","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6323:58:26"},"nodeType":"YulFunctionCall","src":"6323:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6316:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6488:3:26"}],"functionName":{"name":"store_literal_in_memory_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e","nodeType":"YulIdentifier","src":"6399:88:26"},"nodeType":"YulFunctionCall","src":"6399:93:26"},"nodeType":"YulExpressionStatement","src":"6399:93:26"},{"nodeType":"YulAssignment","src":"6501:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6512:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6517:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6508:3:26"},"nodeType":"YulFunctionCall","src":"6508:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6501:3:26"}]}]},"name":"abi_encode_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6294:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6302:3:26","type":""}],"src":"6160:366:26"},{"body":{"nodeType":"YulBlock","src":"6703:248:26","statements":[{"nodeType":"YulAssignment","src":"6713:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6725:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6736:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6721:3:26"},"nodeType":"YulFunctionCall","src":"6721:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6713:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6760:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6771:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6756:3:26"},"nodeType":"YulFunctionCall","src":"6756:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6779:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6785:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6775:3:26"},"nodeType":"YulFunctionCall","src":"6775:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6749:6:26"},"nodeType":"YulFunctionCall","src":"6749:47:26"},"nodeType":"YulExpressionStatement","src":"6749:47:26"},{"nodeType":"YulAssignment","src":"6805:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6939:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6813:124:26"},"nodeType":"YulFunctionCall","src":"6813:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6805:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6683:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6698:4:26","type":""}],"src":"6532:419:26"},{"body":{"nodeType":"YulBlock","src":"7083:206:26","statements":[{"nodeType":"YulAssignment","src":"7093:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7105:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7116:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7101:3:26"},"nodeType":"YulFunctionCall","src":"7101:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7093:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7173:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7186:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7197:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7182:3:26"},"nodeType":"YulFunctionCall","src":"7182:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7129:43:26"},"nodeType":"YulFunctionCall","src":"7129:71:26"},"nodeType":"YulExpressionStatement","src":"7129:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7254:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7267:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7278:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7263:3:26"},"nodeType":"YulFunctionCall","src":"7263:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7210:43:26"},"nodeType":"YulFunctionCall","src":"7210:72:26"},"nodeType":"YulExpressionStatement","src":"7210:72:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7047:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7059:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7067:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7078:4:26","type":""}],"src":"6957:332:26"},{"body":{"nodeType":"YulBlock","src":"7358:80:26","statements":[{"nodeType":"YulAssignment","src":"7368:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7383:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7377:5:26"},"nodeType":"YulFunctionCall","src":"7377:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7368:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7426:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"7399:26:26"},"nodeType":"YulFunctionCall","src":"7399:33:26"},"nodeType":"YulExpressionStatement","src":"7399:33:26"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7336:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"7344:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7352:5:26","type":""}],"src":"7295:143:26"},{"body":{"nodeType":"YulBlock","src":"7538:413:26","statements":[{"body":{"nodeType":"YulBlock","src":"7584:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7586:77:26"},"nodeType":"YulFunctionCall","src":"7586:79:26"},"nodeType":"YulExpressionStatement","src":"7586:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7559:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7568:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7555:3:26"},"nodeType":"YulFunctionCall","src":"7555:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"7580:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7551:3:26"},"nodeType":"YulFunctionCall","src":"7551:32:26"},"nodeType":"YulIf","src":"7548:119:26"},{"nodeType":"YulBlock","src":"7677:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7692:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7706:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7696:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7721:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7767:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7778:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7763:3:26"},"nodeType":"YulFunctionCall","src":"7763:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7787:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7731:31:26"},"nodeType":"YulFunctionCall","src":"7731:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7721:6:26"}]}]},{"nodeType":"YulBlock","src":"7815:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7830:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7844:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7834:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7860:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7906:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7917:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7902:3:26"},"nodeType":"YulFunctionCall","src":"7902:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7926:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7870:31:26"},"nodeType":"YulFunctionCall","src":"7870:64:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7860:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7500:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7511:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7523:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7531:6:26","type":""}],"src":"7444:507:26"},{"body":{"nodeType":"YulBlock","src":"7985:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8002:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8005:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7995:6:26"},"nodeType":"YulFunctionCall","src":"7995:88:26"},"nodeType":"YulExpressionStatement","src":"7995:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8099:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8102:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8092:6:26"},"nodeType":"YulFunctionCall","src":"8092:15:26"},"nodeType":"YulExpressionStatement","src":"8092:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8123:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8126:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8116:6:26"},"nodeType":"YulFunctionCall","src":"8116:15:26"},"nodeType":"YulExpressionStatement","src":"8116:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7957:180:26"},{"body":{"nodeType":"YulBlock","src":"8249:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8271:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8279:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8267:3:26"},"nodeType":"YulFunctionCall","src":"8267:14:26"},{"hexValue":"496e646578206f7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"8283:21:26","type":"","value":"Index out of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8260:6:26"},"nodeType":"YulFunctionCall","src":"8260:45:26"},"nodeType":"YulExpressionStatement","src":"8260:45:26"}]},"name":"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8241:6:26","type":""}],"src":"8143:169:26"},{"body":{"nodeType":"YulBlock","src":"8464:220:26","statements":[{"nodeType":"YulAssignment","src":"8474:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8540:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8545:2:26","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8481:58:26"},"nodeType":"YulFunctionCall","src":"8481:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8474:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8646:3:26"}],"functionName":{"name":"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","nodeType":"YulIdentifier","src":"8557:88:26"},"nodeType":"YulFunctionCall","src":"8557:93:26"},"nodeType":"YulExpressionStatement","src":"8557:93:26"},{"nodeType":"YulAssignment","src":"8659:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8670:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8675:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8666:3:26"},"nodeType":"YulFunctionCall","src":"8666:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8659:3:26"}]}]},"name":"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8452:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8460:3:26","type":""}],"src":"8318:366:26"},{"body":{"nodeType":"YulBlock","src":"8861:248:26","statements":[{"nodeType":"YulAssignment","src":"8871:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8883:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8894:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8879:3:26"},"nodeType":"YulFunctionCall","src":"8879:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8871:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8918:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8929:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8914:3:26"},"nodeType":"YulFunctionCall","src":"8914:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8937:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"8943:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8933:3:26"},"nodeType":"YulFunctionCall","src":"8933:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8907:6:26"},"nodeType":"YulFunctionCall","src":"8907:47:26"},"nodeType":"YulExpressionStatement","src":"8907:47:26"},{"nodeType":"YulAssignment","src":"8963:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9097:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8971:124:26"},"nodeType":"YulFunctionCall","src":"8971:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8963:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8841:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8856:4:26","type":""}],"src":"8690:419:26"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IHasher_$63(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IHasher_$63(value) {\n        if iszero(eq(value, cleanup_t_contract$_IHasher_$63(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IHasher_$63(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IHasher_$63(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IHasher_$63t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IHasher_$63(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IHasher_$63_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IHasher_$63_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IHasher_$63_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IHasher_$63__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IHasher_$63_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e(memPtr) {\n\n        mstore(add(memPtr, 0), \"_left should be inside the field\")\n\n    }\n\n    function abi_encode_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e(memPtr) {\n\n        mstore(add(memPtr, 0), \"_right should be inside the fiel\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(memPtr) {\n\n        mstore(add(memPtr, 0), \"Index out of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"72":[{"length":32,"start":2817}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEBF0C717 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xEBF0C717 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xEC732959 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xED33639F EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xF178E47C EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xFC7E9C6F EQ PUSH2 0x1BE JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x414A37BA EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x4ECF518B EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8EA3099E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xE8295588 EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0xADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP4 PUSH1 0x0 SHR LT PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP3 PUSH1 0x0 SHR LT PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF47D33B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x325 SWAP3 SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x341 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0xF07 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP1 PUSH2 0x39C JUMPI PUSH2 0x39B PUSH2 0xF47 JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x0 SHR DUP4 ADDMOD SWAP2 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF47D33B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DF SWAP3 SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0xF07 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH1 0x0 SHL SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x46A JUMPI PUSH32 0x2FE54C60D3ACABF3343A35B6EBA15DB4821B340F76E741E2249685ED4899AF6C PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB PUSH2 0x49D JUMPI PUSH32 0x256A6135777EEE2FD26F54B8B7037A25439D5235CAEE224154186D2B8A52E31D PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x4D0 JUMPI PUSH32 0x1151949895E82AB19924DE92C40A3D6F7BCB60D92B00504B8199613683F0C200 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x503 JUMPI PUSH32 0x20121EE811489FF8D61F09FB89E313F14959A0F28BB428A20DBA6B0B068B3BDB PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x536 JUMPI PUSH32 0xA89CA6FFA14CC462CFEDB842C30ED221A50A3D6BF022A6A57DC82AB24C157C9 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x5 DUP3 SUB PUSH2 0x569 JUMPI PUSH32 0x24CA05C2B5CD42E890D6BE94C68D0689F4F21C9CEC9C0F13FE41D566DFB54959 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x6 DUP3 SUB PUSH2 0x59C JUMPI PUSH32 0x1CCB97C932565A92C60156BDBA2D08F3BF1377464E025CEE765679E604A7315C PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x7 DUP3 SUB PUSH2 0x5CF JUMPI PUSH32 0x19156FBD7D1A8BF5CBA8909367DE1B624534EBAB4F0F79E003BCCDD1B182BDB4 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x8 DUP3 SUB PUSH2 0x602 JUMPI PUSH32 0x261AF8C1F0912E465744641409F622D466C3920AC6E5FF37E36604CB11DFFF80 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x9 DUP3 SUB PUSH2 0x634 JUMPI PUSH31 0x58459724FF6CA5A1652FCBC3E82B93895CF08E975B19BEAB3F54C217D1C007 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xA DUP3 SUB PUSH2 0x667 JUMPI PUSH32 0x1F04EF20DEE48D39984D8EABE768A70EAFA6310AD20849D4573C3C40C2AD1E30 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xB DUP3 SUB PUSH2 0x69A JUMPI PUSH32 0x1BEA3DEC5DAB51567CE7E200A30F7BA6D4276AEAA53E2686F962A46C66D511E5 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xC DUP3 SUB PUSH2 0x6CD JUMPI PUSH32 0xEE0F941E2DA4B9E31C3CA97A40D8FA9CE68D97C084177071B3CB46CD3372F0F PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xD DUP3 SUB PUSH2 0x700 JUMPI PUSH32 0x1CA9503E8935884501BBAF20BE14EB4C46B89772C97B96E3B2EBF3A36A948BBD PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xE DUP3 SUB PUSH2 0x733 JUMPI PUSH32 0x133A80E30697CD55D8F7D4B0965B7BE24057BA5DC3DA898EE2187232446CB108 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0xF DUP3 SUB PUSH2 0x766 JUMPI PUSH32 0x13E6D8FC88839ED76E182C2A779AF5B2C0DA9DD18C90427A644F7E148A6253B6 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x10 DUP3 SUB PUSH2 0x799 JUMPI PUSH32 0x1EB16B057A477F4BC8F572EA6BEE39561098F78F15BFB3699DCBB7BD8DB61854 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x11 DUP3 SUB PUSH2 0x7CC JUMPI PUSH32 0xDA2CB16A1CEAABF1C16B838F7A9E3F2A3A3088D9E0A6DEBAA748114620696EA PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x12 DUP3 SUB PUSH2 0x7FF JUMPI PUSH32 0x24A3B3D822420B14B5D8CB6C28A574F01E98EA9E940551D2EBD75CEE12649F9D PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x13 DUP3 SUB PUSH2 0x832 JUMPI PUSH32 0x198622ACBD783D1B0D9064105B1FC8E4D8889DE95C4C519B3F635809FE6AFC05 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x14 DUP3 SUB PUSH2 0x865 JUMPI PUSH32 0x29D7ED391256CCC3EA596C86E933B89FF339D25EA8DDCED975AE2FE30B5296D4 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x15 DUP3 SUB PUSH2 0x898 JUMPI PUSH32 0x19BE59F2F0413CE78C0C3703A3A5451B1D7F39629FA33ABD11548A76065B2967 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x16 DUP3 SUB PUSH2 0x8CB JUMPI PUSH32 0x1FF3F61797E538B70E619310D33F2A063E7EB59104E112E95738DA1254DC3453 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x17 DUP3 SUB PUSH2 0x8FE JUMPI PUSH32 0x10C16AE9959CF8358980D9DD9616E48228737310A10E2B6B731C1A548F036C48 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x18 DUP3 SUB PUSH2 0x931 JUMPI PUSH32 0xBA433A63174A90AC20992E75E3095496812B652685B5E1A2EAE0B1BF4E8FCD1 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x19 DUP3 SUB PUSH2 0x964 JUMPI PUSH32 0x19DDB9DF2BC98D987D0DFECA9D2B643DEAFAB8F7036562E627C3667266A044C PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1A DUP3 SUB PUSH2 0x997 JUMPI PUSH32 0x2D3C88B23175C5A5565DB928414C66D1912B11ACF974B2E644CAAAC04739CE99 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1B DUP3 SUB PUSH2 0x9CA JUMPI PUSH32 0x2EAB55F6AE4E66E32C5189EED5C470840863445760F5ED7E7B69B2A62600F354 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1C DUP3 SUB PUSH2 0x9FC JUMPI PUSH31 0x2DF37A2642621802383CF952BF4DD1F32E05433BEEB1FD41031FB7EACE979D PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1D DUP3 SUB PUSH2 0xA2F JUMPI PUSH32 0x104AEB41435DB66C3E62FECCC1D6F5D98D0A0ED75D1374DB457CF462E3A1F427 PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1E DUP3 SUB PUSH2 0xA62 JUMPI PUSH32 0x1F3C6FD858E9A7D4B0D1F38E256A09D81D5A5E3C963987E2D4B814CFAB7C6EBB PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x1F DUP3 SUB PUSH2 0xA95 JUMPI PUSH32 0x2C7A07D20DFF79D01FECEDC1134284A8D08436606C93693B67E333F671BF69CC PUSH1 0x0 SHL SWAP1 POP PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC7 SWAP1 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x2FE54C60D3ACABF3343A35B6EBA15DB4821B340F76E741E2249685ED4899AF6C DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB64 DUP2 PUSH2 0xB51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9E DUP2 PUSH2 0xB85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEF DUP3 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC01 DUP3 PUSH2 0xBE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC11 DUP2 PUSH2 0xBF6 JUMP JUMPDEST DUP2 EQ PUSH2 0xC1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC2E DUP2 PUSH2 0xC08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC47 DUP2 PUSH2 0xC34 JUMP JUMPDEST DUP2 EQ PUSH2 0xC52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC64 DUP2 PUSH2 0xC3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC83 JUMPI PUSH2 0xC82 PUSH2 0xBBF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC91 DUP7 DUP3 DUP8 ADD PUSH2 0xC1F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA2 DUP7 DUP3 DUP8 ADD PUSH2 0xC55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB3 DUP7 DUP3 DUP8 ADD PUSH2 0xC55 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xCC6 DUP2 PUSH2 0xC34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xB51 JUMP JUMPDEST DUP2 EQ PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD0D DUP2 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD28 PUSH2 0xBBF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP5 DUP3 DUP6 ADD PUSH2 0xCFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD65 PUSH2 0xD60 PUSH2 0xD5B DUP5 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST PUSH2 0xBC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD77 DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD89 DUP3 PUSH2 0xD6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD99 DUP2 PUSH2 0xD7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5F6C6566742073686F756C6420626520696E7369646520746865206669656C64 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE01 PUSH1 0x20 DUP4 PUSH2 0xDBA JUMP JUMPDEST SWAP2 POP PUSH2 0xE0C DUP3 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE30 DUP2 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5F72696768742073686F756C6420626520696E7369646520746865206669656C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE93 PUSH1 0x21 DUP4 PUSH2 0xDBA JUMP JUMPDEST SWAP2 POP PUSH2 0xE9E DUP3 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC2 DUP2 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEDE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0xEEB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF01 DUP2 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xBBF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2C DUP6 DUP3 DUP7 ADD PUSH2 0xEF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF3D DUP6 DUP3 DUP7 ADD PUSH2 0xEF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAC PUSH1 0x13 DUP4 PUSH2 0xDBA JUMP JUMPDEST SWAP2 POP PUSH2 0xFB7 DUP3 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFDB DUP2 PUSH2 0xF9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xD2 0xC7 MLOAD 0xAF PUSH6 0x7ADA721B82EB 0xDF CODECOPY SWAP6 PUSH8 0xECF705EC4659F893 0xCE RETURNDATASIZE 0xB5 SWAP8 SWAP7 PUSH2 0xD4A3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"205:8549:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;231:122;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;564:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1452:596;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3028:5724;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;943:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;359:122;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;526:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;888:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;968:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:122;276:77;231:122;:::o;564:20::-;;;;;;;;;;;;:::o;1452:596::-;1574:7;276:77;1622:5;1614:14;;:27;1593:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;276:77;1738:6;1730:15;;:28;1709:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;1827:9;1847:5;1839:14;;1827:26;;1863:9;1895:7;:18;;;1914:1;1917;1895:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1886:33;;;;;;;;276:77;1933:38;;;;;:::i;:::-;;1951:6;1943:15;;1940:1;1933:38;1929:42;;1990:7;:18;;;2009:1;2012;1990:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1981:33;;;;;;;;2039:1;2031:10;;2024:17;;;;1452:596;;;;;:::o;3028:5724::-;3075:7;3103:1;3098;:6;3094:5651;;3170:66;3141:113;;3118:136;;;;3094:5651;3278:1;3273;:6;3269:5476;;3345:66;3316:113;;3293:136;;;;3269:5476;3453:1;3448;:6;3444:5301;;3520:66;3491:113;;3468:136;;;;3444:5301;3628:1;3623;:6;3619:5126;;3695:66;3666:113;;3643:136;;;;3619:5126;3803:1;3798;:6;3794:4951;;3870:66;3841:113;;3818:136;;;;3794:4951;3978:1;3973;:6;3969:4776;;4045:66;4016:113;;3993:136;;;;3969:4776;4153:1;4148;:6;4144:4601;;4220:66;4191:113;;4168:136;;;;4144:4601;4328:1;4323;:6;4319:4426;;4395:66;4366:113;;4343:136;;;;4319:4426;4503:1;4498;:6;4494:4251;;4570:66;4541:113;;4518:136;;;;4494:4251;4678:1;4673;:6;4669:4076;;4745:66;4716:113;;4693:136;;;;4669:4076;4853:2;4848:1;:7;4844:3901;;4921:66;4892:113;;4869:136;;;;4844:3901;5029:2;5024:1;:7;5020:3725;;5097:66;5068:113;;5045:136;;;;5020:3725;5205:2;5200:1;:7;5196:3549;;5273:66;5244:113;;5221:136;;;;5196:3549;5381:2;5376:1;:7;5372:3373;;5449:66;5420:113;;5397:136;;;;5372:3373;5557:2;5552:1;:7;5548:3197;;5625:66;5596:113;;5573:136;;;;5548:3197;5733:2;5728:1;:7;5724:3021;;5801:66;5772:113;;5749:136;;;;5724:3021;5909:2;5904:1;:7;5900:2845;;5977:66;5948:113;;5925:136;;;;5900:2845;6085:2;6080:1;:7;6076:2669;;6153:66;6124:113;;6101:136;;;;6076:2669;6261:2;6256:1;:7;6252:2493;;6329:66;6300:113;;6277:136;;;;6252:2493;6437:2;6432:1;:7;6428:2317;;6505:66;6476:113;;6453:136;;;;6428:2317;6613:2;6608:1;:7;6604:2141;;6681:66;6652:113;;6629:136;;;;6604:2141;6789:2;6784:1;:7;6780:1965;;6857:66;6828:113;;6805:136;;;;6780:1965;6965:2;6960:1;:7;6956:1789;;7033:66;7004:113;;6981:136;;;;6956:1789;7141:2;7136:1;:7;7132:1613;;7209:66;7180:113;;7157:136;;;;7132:1613;7317:2;7312:1;:7;7308:1437;;7385:66;7356:113;;7333:136;;;;7308:1437;7493:2;7488:1;:7;7484:1261;;7561:66;7532:113;;7509:136;;;;7484:1261;7669:2;7664:1;:7;7660:1085;;7737:66;7708:113;;7685:136;;;;7660:1085;7845:2;7840:1;:7;7836:909;;7913:66;7884:113;;7861:136;;;;7836:909;8021:2;8016:1;:7;8012:733;;8089:66;8060:113;;8037:136;;;;8012:733;8197:2;8192:1;:7;8188:557;;8265:66;8236:113;;8213:136;;;;8188:557;8373:2;8368:1;:7;8364:381;;8441:66;8412:113;;8389:136;;;;8364:381;8549:2;8544:1;:7;8540:205;;8617:66;8588:113;;8565:136;;;;8540:205;8716:29;;;;;;;;;;:::i;:::-;;;;;;;;3028:5724;;;;:::o;943:19::-;;;;:::o;359:122::-;404:77;359:122;:::o;526:31::-;;;:::o;888:49::-;;;;;;;;;;;;;;;;;:::o;968:27::-;;;;;;;;;;;;;:::o;7:77:26:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:93::-;478:7;518:10;511:5;507:22;496:33;;442:93;;;:::o;541:115::-;626:23;643:5;626:23;:::i;:::-;621:3;614:36;541:115;;:::o;662:218::-;753:4;791:2;780:9;776:18;768:26;;804:69;870:1;859:9;855:17;846:6;804:69;:::i;:::-;662:218;;;;:::o;967:117::-;1076:1;1073;1066:12;1213:126;1250:7;1290:42;1283:5;1279:54;1268:65;;1213:126;;;:::o;1345:96::-;1382:7;1411:24;1429:5;1411:24;:::i;:::-;1400:35;;1345:96;;;:::o;1447:110::-;1498:7;1527:24;1545:5;1527:24;:::i;:::-;1516:35;;1447:110;;;:::o;1563:150::-;1650:38;1682:5;1650:38;:::i;:::-;1643:5;1640:49;1630:77;;1703:1;1700;1693:12;1630:77;1563:150;:::o;1719:167::-;1779:5;1817:6;1804:20;1795:29;;1833:47;1874:5;1833:47;:::i;:::-;1719:167;;;;:::o;1892:77::-;1929:7;1958:5;1947:16;;1892:77;;;:::o;1975:122::-;2048:24;2066:5;2048:24;:::i;:::-;2041:5;2038:35;2028:63;;2087:1;2084;2077:12;2028:63;1975:122;:::o;2103:139::-;2149:5;2187:6;2174:20;2165:29;;2203:33;2230:5;2203:33;:::i;:::-;2103:139;;;;:::o;2248:647::-;2339:6;2347;2355;2404:2;2392:9;2383:7;2379:23;2375:32;2372:119;;;2410:79;;:::i;:::-;2372:119;2530:1;2555:67;2614:7;2605:6;2594:9;2590:22;2555:67;:::i;:::-;2545:77;;2501:131;2671:2;2697:53;2742:7;2733:6;2722:9;2718:22;2697:53;:::i;:::-;2687:63;;2642:118;2799:2;2825:53;2870:7;2861:6;2850:9;2846:22;2825:53;:::i;:::-;2815:63;;2770:118;2248:647;;;;;:::o;2901:118::-;2988:24;3006:5;2988:24;:::i;:::-;2983:3;2976:37;2901:118;;:::o;3025:222::-;3118:4;3156:2;3145:9;3141:18;3133:26;;3169:71;3237:1;3226:9;3222:17;3213:6;3169:71;:::i;:::-;3025:222;;;;:::o;3253:122::-;3326:24;3344:5;3326:24;:::i;:::-;3319:5;3316:35;3306:63;;3365:1;3362;3355:12;3306:63;3253:122;:::o;3381:139::-;3427:5;3465:6;3452:20;3443:29;;3481:33;3508:5;3481:33;:::i;:::-;3381:139;;;;:::o;3526:329::-;3585:6;3634:2;3622:9;3613:7;3609:23;3605:32;3602:119;;;3640:79;;:::i;:::-;3602:119;3760:1;3785:53;3830:7;3821:6;3810:9;3806:22;3785:53;:::i;:::-;3775:63;;3731:117;3526:329;;;;:::o;3861:60::-;3889:3;3910:5;3903:12;;3861:60;;;:::o;3927:142::-;3977:9;4010:53;4028:34;4037:24;4055:5;4037:24;:::i;:::-;4028:34;:::i;:::-;4010:53;:::i;:::-;3997:66;;3927:142;;;:::o;4075:126::-;4125:9;4158:37;4189:5;4158:37;:::i;:::-;4145:50;;4075:126;;;:::o;4207:140::-;4271:9;4304:37;4335:5;4304:37;:::i;:::-;4291:50;;4207:140;;;:::o;4353:159::-;4454:51;4499:5;4454:51;:::i;:::-;4449:3;4442:64;4353:159;;:::o;4518:250::-;4625:4;4663:2;4652:9;4648:18;4640:26;;4676:85;4758:1;4747:9;4743:17;4734:6;4676:85;:::i;:::-;4518:250;;;;:::o;4774:169::-;4858:11;4892:6;4887:3;4880:19;4932:4;4927:3;4923:14;4908:29;;4774:169;;;;:::o;4949:182::-;5089:34;5085:1;5077:6;5073:14;5066:58;4949:182;:::o;5137:366::-;5279:3;5300:67;5364:2;5359:3;5300:67;:::i;:::-;5293:74;;5376:93;5465:3;5376:93;:::i;:::-;5494:2;5489:3;5485:12;5478:19;;5137:366;;;:::o;5509:419::-;5675:4;5713:2;5702:9;5698:18;5690:26;;5762:9;5756:4;5752:20;5748:1;5737:9;5733:17;5726:47;5790:131;5916:4;5790:131;:::i;:::-;5782:139;;5509:419;;;:::o;5934:220::-;6074:34;6070:1;6062:6;6058:14;6051:58;6143:3;6138:2;6130:6;6126:15;6119:28;5934:220;:::o;6160:366::-;6302:3;6323:67;6387:2;6382:3;6323:67;:::i;:::-;6316:74;;6399:93;6488:3;6399:93;:::i;:::-;6517:2;6512:3;6508:12;6501:19;;6160:366;;;:::o;6532:419::-;6698:4;6736:2;6725:9;6721:18;6713:26;;6785:9;6779:4;6775:20;6771:1;6760:9;6756:17;6749:47;6813:131;6939:4;6813:131;:::i;:::-;6805:139;;6532:419;;;:::o;6957:332::-;7078:4;7116:2;7105:9;7101:18;7093:26;;7129:71;7197:1;7186:9;7182:17;7173:6;7129:71;:::i;:::-;7210:72;7278:2;7267:9;7263:18;7254:6;7210:72;:::i;:::-;6957:332;;;;;:::o;7295:143::-;7352:5;7383:6;7377:13;7368:22;;7399:33;7426:5;7399:33;:::i;:::-;7295:143;;;;:::o;7444:507::-;7523:6;7531;7580:2;7568:9;7559:7;7555:23;7551:32;7548:119;;;7586:79;;:::i;:::-;7548:119;7706:1;7731:64;7787:7;7778:6;7767:9;7763:22;7731:64;:::i;:::-;7721:74;;7677:128;7844:2;7870:64;7926:7;7917:6;7906:9;7902:22;7870:64;:::i;:::-;7860:74;;7815:129;7444:507;;;;;:::o;7957:180::-;8005:77;8002:1;7995:88;8102:4;8099:1;8092:15;8126:4;8123:1;8116:15;8143:169;8283:21;8279:1;8271:6;8267:14;8260:45;8143:169;:::o;8318:366::-;8460:3;8481:67;8545:2;8540:3;8481:67;:::i;:::-;8474:74;;8557:93;8646:3;8557:93;:::i;:::-;8675:2;8670:3;8666:12;8659:19;;8318:366;;;:::o;8690:419::-;8856:4;8894:2;8883:9;8879:18;8871:26;;8943:9;8937:4;8933:20;8929:1;8918:9;8914:17;8907:47;8971:131;9097:4;8971:131;:::i;:::-;8963:139;;8690:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"824000","executionCost":"infinite","totalCost":"infinite"},"external":{"FIELD_SIZE()":"330","ZERO_VALUE()":"351","filledSubtrees(uint256)":"2831","hashLeftRight(address,bytes32,bytes32)":"infinite","hasher()":"infinite","levels()":"2491","nextIndex()":"2559","root()":"2429","zeros(uint256)":"1500"},"internal":{"_insert(bytes32)":"infinite"}},"methodIdentifiers":{"FIELD_SIZE()":"414a37ba","ZERO_VALUE()":"ec732959","filledSubtrees(uint256)":"f178e47c","hashLeftRight(address,bytes32,bytes32)":"8ea3099e","hasher()":"ed33639f","levels()":"4ecf518b","nextIndex()":"fc7e9c6f","root()":"ebf0c717","zeros(uint256)":"e8295588"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_levels\",\"type\":\"uint32\"},{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasher\",\"outputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"hashLeftRight(address,bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"zeros(uint256)\":{\"details\":\"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MerkleTree.sol\":\"MerkleTree\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/MerkleTree.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHasher {\\n    function MiMCSponge(\\n        uint256 in_xL,\\n        uint256 in_xR\\n    ) external pure returns (uint256 xL, uint256 xR);\\n}\\n\\ncontract MerkleTree {\\n    uint256 public constant FIELD_SIZE =\\n        21888242871839275222246405745257275088548364400416034343698204186575808495617;\\n    uint256 public constant ZERO_VALUE =\\n        21663839004416932945382355908790599225266501822907911457504978515578255421292; // = keccak256(\\\"tornado\\\") % FIELD_SIZE\\n    IHasher public immutable hasher;\\n\\n    uint32 public levels;\\n\\n    // the following variables are made public for easier testing and debugging and\\n    // are not supposed to be accessed in regular code\\n\\n    // filledSubtrees and roots could be bytes32[size], but using mappings makes it cheaper because\\n    // it removes index range check on every interaction\\n    mapping(uint256 => bytes32) public filledSubtrees;\\n    bytes32 public root;\\n    uint32 public nextIndex = 0;\\n\\n    constructor(uint32 _levels, IHasher _hasher) {\\n        require(_levels > 0, \\\"_levels should be greater than zero\\\");\\n        require(_levels < 32, \\\"_levels should be less than 32\\\");\\n        levels = _levels;\\n        hasher = _hasher;\\n\\n        for (uint32 i = 0; i < _levels; i++) {\\n            filledSubtrees[i] = zeros(i);\\n        }\\n\\n        root = zeros(_levels - 1);\\n    }\\n\\n    /**\\n    @dev Hash 2 tree leaves, returns MiMC(_left, _right)\\n  */\\n    function hashLeftRight(\\n        IHasher _hasher,\\n        bytes32 _left,\\n        bytes32 _right\\n    ) public pure returns (bytes32) {\\n        require(\\n            uint256(_left) < FIELD_SIZE,\\n            \\\"_left should be inside the field\\\"\\n        );\\n        require(\\n            uint256(_right) < FIELD_SIZE,\\n            \\\"_right should be inside the field\\\"\\n        );\\n        uint256 R = uint256(_left);\\n        uint256 C = 0;\\n        (R, C) = _hasher.MiMCSponge(R, C);\\n        R = addmod(R, uint256(_right), FIELD_SIZE);\\n        (R, C) = _hasher.MiMCSponge(R, C);\\n        return bytes32(R);\\n    }\\n\\n    function _insert(bytes32 _leaf) internal returns (uint32 index) {\\n        uint32 _nextIndex = nextIndex;\\n        require(\\n            _nextIndex != uint32(2) ** levels,\\n            \\\"Merkle tree is full. No more leaves can be added\\\"\\n        );\\n        uint32 currentIndex = _nextIndex;\\n        bytes32 currentLevelHash = _leaf;\\n        bytes32 left;\\n        bytes32 right;\\n\\n        for (uint32 i = 0; i < levels; i++) {\\n            if (currentIndex % 2 == 0) {\\n                left = currentLevelHash;\\n                right = zeros(i);\\n                filledSubtrees[i] = currentLevelHash;\\n            } else {\\n                left = filledSubtrees[i];\\n                right = currentLevelHash;\\n            }\\n            currentLevelHash = hashLeftRight(hasher, left, right);\\n            currentIndex /= 2;\\n        }\\n\\n        nextIndex = _nextIndex + 1;\\n        return _nextIndex;\\n    }\\n\\n    /// @dev provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\\n    function zeros(uint256 i) public pure returns (bytes32) {\\n        if (i == 0)\\n            return\\n                bytes32(\\n                    0x2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c\\n                );\\n        else if (i == 1)\\n            return\\n                bytes32(\\n                    0x256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d\\n                );\\n        else if (i == 2)\\n            return\\n                bytes32(\\n                    0x1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200\\n                );\\n        else if (i == 3)\\n            return\\n                bytes32(\\n                    0x20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb\\n                );\\n        else if (i == 4)\\n            return\\n                bytes32(\\n                    0x0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9\\n                );\\n        else if (i == 5)\\n            return\\n                bytes32(\\n                    0x24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959\\n                );\\n        else if (i == 6)\\n            return\\n                bytes32(\\n                    0x1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c\\n                );\\n        else if (i == 7)\\n            return\\n                bytes32(\\n                    0x19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4\\n                );\\n        else if (i == 8)\\n            return\\n                bytes32(\\n                    0x261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80\\n                );\\n        else if (i == 9)\\n            return\\n                bytes32(\\n                    0x0058459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007\\n                );\\n        else if (i == 10)\\n            return\\n                bytes32(\\n                    0x1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30\\n                );\\n        else if (i == 11)\\n            return\\n                bytes32(\\n                    0x1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5\\n                );\\n        else if (i == 12)\\n            return\\n                bytes32(\\n                    0x0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f\\n                );\\n        else if (i == 13)\\n            return\\n                bytes32(\\n                    0x1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd\\n                );\\n        else if (i == 14)\\n            return\\n                bytes32(\\n                    0x133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108\\n                );\\n        else if (i == 15)\\n            return\\n                bytes32(\\n                    0x13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6\\n                );\\n        else if (i == 16)\\n            return\\n                bytes32(\\n                    0x1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854\\n                );\\n        else if (i == 17)\\n            return\\n                bytes32(\\n                    0x0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea\\n                );\\n        else if (i == 18)\\n            return\\n                bytes32(\\n                    0x24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d\\n                );\\n        else if (i == 19)\\n            return\\n                bytes32(\\n                    0x198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05\\n                );\\n        else if (i == 20)\\n            return\\n                bytes32(\\n                    0x29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4\\n                );\\n        else if (i == 21)\\n            return\\n                bytes32(\\n                    0x19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967\\n                );\\n        else if (i == 22)\\n            return\\n                bytes32(\\n                    0x1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453\\n                );\\n        else if (i == 23)\\n            return\\n                bytes32(\\n                    0x10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48\\n                );\\n        else if (i == 24)\\n            return\\n                bytes32(\\n                    0x0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1\\n                );\\n        else if (i == 25)\\n            return\\n                bytes32(\\n                    0x019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c\\n                );\\n        else if (i == 26)\\n            return\\n                bytes32(\\n                    0x2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99\\n                );\\n        else if (i == 27)\\n            return\\n                bytes32(\\n                    0x2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354\\n                );\\n        else if (i == 28)\\n            return\\n                bytes32(\\n                    0x002df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d\\n                );\\n        else if (i == 29)\\n            return\\n                bytes32(\\n                    0x104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427\\n                );\\n        else if (i == 30)\\n            return\\n                bytes32(\\n                    0x1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb\\n                );\\n        else if (i == 31)\\n            return\\n                bytes32(\\n                    0x2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc\\n                );\\n        else revert(\\\"Index out of bounds\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x08e1b84cb095fc445a4c89f9b9ffb32329ffbc2abf247cf47cdedf15e81e054f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":74,"contract":"contracts/MerkleTree.sol:MerkleTree","label":"levels","offset":0,"slot":"0","type":"t_uint32"},{"astId":78,"contract":"contracts/MerkleTree.sol:MerkleTree","label":"filledSubtrees","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_bytes32)"},{"astId":80,"contract":"contracts/MerkleTree.sol:MerkleTree","label":"root","offset":0,"slot":"2","type":"t_bytes32"},{"astId":83,"contract":"contracts/MerkleTree.sol:MerkleTree","label":"nextIndex","offset":0,"slot":"3","type":"t_uint32"}],"types":{"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint256,t_bytes32)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Relayer.sol":{"Relayer":{"abi":[{"inputs":[{"internalType":"contract ERC20","name":"_tokenA","type":"address"},{"internalType":"contract ERC20","name":"_tokenB","type":"address"},{"internalType":"contract IDepositVerifier","name":"_depositVerifier","type":"address"},{"internalType":"contract IWithdrawVerifier","name":"_withdrawVerifier","type":"address"},{"internalType":"contract ISwapVerifier","name":"_swapVerifier","type":"address"},{"internalType":"contract IFinalizeVerifier","name":"_finalizeVerifier","type":"address"},{"internalType":"contract IHasher","name":"_hasher","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"FIELD_SIZE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN_A","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN_B","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ZERO_VALUE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_cNode","type":"bytes32"},{"internalType":"uint256","name":"_balanceA","type":"uint256"},{"internalType":"uint256","name":"_balanceB","type":"uint256"},{"internalType":"address","name":"_vault","type":"address"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"deposit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositVerifier","outputs":[{"internalType":"contract IDepositVerifier","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"filledSubtrees","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_nullifier","type":"bytes32"},{"internalType":"bytes32","name":"_cNode2","type":"bytes32"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"finalize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"finalizeVerifier","outputs":[{"internalType":"contract IFinalizeVerifier","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IHasher","name":"_hasher","type":"address"},{"internalType":"bytes32","name":"_left","type":"bytes32"},{"internalType":"bytes32","name":"_right","type":"bytes32"}],"name":"hashLeftRight","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"hasher","outputs":[{"internalType":"contract IHasher","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"levels","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"modelInput","outputs":[{"internalType":"uint256","name":"chainlinkPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextIndex","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"nodeStatusPool","outputs":[{"internalType":"enum NodeStatus","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"root","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swapVerifier","outputs":[{"internalType":"contract ISwapVerifier","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_nullifier","type":"bytes32"},{"components":[{"internalType":"uint8","name":"direction","type":"uint8"},{"internalType":"uint248","name":"amount","type":"uint248"}],"internalType":"struct ModelOutput","name":"modelOutput","type":"tuple"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"transact","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"transactionResults","outputs":[{"internalType":"uint8","name":"direction","type":"uint8"},{"internalType":"uint120","name":"amountA","type":"uint120"},{"internalType":"uint120","name":"amountB","type":"uint120"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_nullifier","type":"bytes32"},{"internalType":"uint256","name":"_balanceA","type":"uint256"},{"internalType":"uint256","name":"_balanceB","type":"uint256"},{"internalType":"address","name":"_vault","type":"address"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawVerifier","outputs":[{"internalType":"contract IWithdrawVerifier","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"i","type":"uint256"}],"name":"zeros","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"hashLeftRight(address,bytes32,bytes32)":{"details":"Hash 2 tree leaves, returns MiMC(_left, _right)"},"zeros(uint256)":{"details":"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_142":{"entryPoint":null,"id":142,"parameterSlots":2,"returnSlots":0},"@_748":{"entryPoint":null,"id":748,"parameterSlots":7,"returnSlots":0},"@zeros_628":{"entryPoint":849,"id":628,"parameterSlots":1,"returnSlots":1},"abi_decode_t_contract$_ERC20_$4386_fromMemory":{"entryPoint":2713,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IDepositVerifier_$13_fromMemory":{"entryPoint":2782,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IFinalizeVerifier_$49_fromMemory":{"entryPoint":2989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IHasher_$63_fromMemory":{"entryPoint":3058,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_ISwapVerifier_$37_fromMemory":{"entryPoint":2920,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IWithdrawVerifier_$25_fromMemory":{"entryPoint":2851,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ERC20_$4386t_contract$_ERC20_$4386t_contract$_IDepositVerifier_$13t_contract$_IWithdrawVerifier_$25t_contract$_ISwapVerifier_$37t_contract$_IFinalizeVerifier_$49t_contract$_IHasher_$63_fromMemory":{"entryPoint":3081,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254_to_t_string_memory_ptr_fromStack":{"entryPoint":3470,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d_to_t_string_memory_ptr_fromStack":{"entryPoint":3356,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack":{"entryPoint":3759,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3509,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3395,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3798,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3260,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint32":{"entryPoint":3655,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2647,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ERC20_$4386":{"entryPoint":2667,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IDepositVerifier_$13":{"entryPoint":2736,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IFinalizeVerifier_$49":{"entryPoint":2943,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IHasher_$63":{"entryPoint":3012,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ISwapVerifier_$37":{"entryPoint":2874,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IWithdrawVerifier_$25":{"entryPoint":2805,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2615,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":3590,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint32":{"entryPoint":3606,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3543,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2610,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254":{"entryPoint":3429,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d":{"entryPoint":3277,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367":{"entryPoint":3718,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ERC20_$4386":{"entryPoint":2687,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IDepositVerifier_$13":{"entryPoint":2756,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IFinalizeVerifier_$49":{"entryPoint":2963,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IHasher_$63":{"entryPoint":3032,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ISwapVerifier_$37":{"entryPoint":2894,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IWithdrawVerifier_$25":{"entryPoint":2825,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8824:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"627:51:26","statements":[{"nodeType":"YulAssignment","src":"637:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"666:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"648:17:26"},"nodeType":"YulFunctionCall","src":"648:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"637:7:26"}]}]},"name":"cleanup_t_contract$_ERC20_$4386","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"609:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"619:7:26","type":""}],"src":"568:110:26"},{"body":{"nodeType":"YulBlock","src":"741:93:26","statements":[{"body":{"nodeType":"YulBlock","src":"812:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"821:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"824:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"814:6:26"},"nodeType":"YulFunctionCall","src":"814:12:26"},"nodeType":"YulExpressionStatement","src":"814:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"764:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"803:5:26"}],"functionName":{"name":"cleanup_t_contract$_ERC20_$4386","nodeType":"YulIdentifier","src":"771:31:26"},"nodeType":"YulFunctionCall","src":"771:38:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"761:2:26"},"nodeType":"YulFunctionCall","src":"761:49:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"754:6:26"},"nodeType":"YulFunctionCall","src":"754:57:26"},"nodeType":"YulIf","src":"751:77:26"}]},"name":"validator_revert_t_contract$_ERC20_$4386","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"734:5:26","type":""}],"src":"684:150:26"},{"body":{"nodeType":"YulBlock","src":"917:94:26","statements":[{"nodeType":"YulAssignment","src":"927:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"942:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"936:5:26"},"nodeType":"YulFunctionCall","src":"936:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"999:5:26"}],"functionName":{"name":"validator_revert_t_contract$_ERC20_$4386","nodeType":"YulIdentifier","src":"958:40:26"},"nodeType":"YulFunctionCall","src":"958:47:26"},"nodeType":"YulExpressionStatement","src":"958:47:26"}]},"name":"abi_decode_t_contract$_ERC20_$4386_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"895:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"903:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"911:5:26","type":""}],"src":"840:171:26"},{"body":{"nodeType":"YulBlock","src":"1085:51:26","statements":[{"nodeType":"YulAssignment","src":"1095:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1124:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1106:17:26"},"nodeType":"YulFunctionCall","src":"1106:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1095:7:26"}]}]},"name":"cleanup_t_contract$_IDepositVerifier_$13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1067:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1077:7:26","type":""}],"src":"1017:119:26"},{"body":{"nodeType":"YulBlock","src":"1208:102:26","statements":[{"body":{"nodeType":"YulBlock","src":"1288:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1297:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1300:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1290:6:26"},"nodeType":"YulFunctionCall","src":"1290:12:26"},"nodeType":"YulExpressionStatement","src":"1290:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1231:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1279:5:26"}],"functionName":{"name":"cleanup_t_contract$_IDepositVerifier_$13","nodeType":"YulIdentifier","src":"1238:40:26"},"nodeType":"YulFunctionCall","src":"1238:47:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1228:2:26"},"nodeType":"YulFunctionCall","src":"1228:58:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1221:6:26"},"nodeType":"YulFunctionCall","src":"1221:66:26"},"nodeType":"YulIf","src":"1218:86:26"}]},"name":"validator_revert_t_contract$_IDepositVerifier_$13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1201:5:26","type":""}],"src":"1142:168:26"},{"body":{"nodeType":"YulBlock","src":"1402:103:26","statements":[{"nodeType":"YulAssignment","src":"1412:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1427:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1421:5:26"},"nodeType":"YulFunctionCall","src":"1421:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1412:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1493:5:26"}],"functionName":{"name":"validator_revert_t_contract$_IDepositVerifier_$13","nodeType":"YulIdentifier","src":"1443:49:26"},"nodeType":"YulFunctionCall","src":"1443:56:26"},"nodeType":"YulExpressionStatement","src":"1443:56:26"}]},"name":"abi_decode_t_contract$_IDepositVerifier_$13_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1380:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1388:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1396:5:26","type":""}],"src":"1316:189:26"},{"body":{"nodeType":"YulBlock","src":"1580:51:26","statements":[{"nodeType":"YulAssignment","src":"1590:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1619:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1601:17:26"},"nodeType":"YulFunctionCall","src":"1601:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1590:7:26"}]}]},"name":"cleanup_t_contract$_IWithdrawVerifier_$25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1562:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1572:7:26","type":""}],"src":"1511:120:26"},{"body":{"nodeType":"YulBlock","src":"1704:103:26","statements":[{"body":{"nodeType":"YulBlock","src":"1785:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1794:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1797:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1787:6:26"},"nodeType":"YulFunctionCall","src":"1787:12:26"},"nodeType":"YulExpressionStatement","src":"1787:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1727:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1776:5:26"}],"functionName":{"name":"cleanup_t_contract$_IWithdrawVerifier_$25","nodeType":"YulIdentifier","src":"1734:41:26"},"nodeType":"YulFunctionCall","src":"1734:48:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1724:2:26"},"nodeType":"YulFunctionCall","src":"1724:59:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1717:6:26"},"nodeType":"YulFunctionCall","src":"1717:67:26"},"nodeType":"YulIf","src":"1714:87:26"}]},"name":"validator_revert_t_contract$_IWithdrawVerifier_$25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1697:5:26","type":""}],"src":"1637:170:26"},{"body":{"nodeType":"YulBlock","src":"1900:104:26","statements":[{"nodeType":"YulAssignment","src":"1910:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1925:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1919:5:26"},"nodeType":"YulFunctionCall","src":"1919:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1910:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1992:5:26"}],"functionName":{"name":"validator_revert_t_contract$_IWithdrawVerifier_$25","nodeType":"YulIdentifier","src":"1941:50:26"},"nodeType":"YulFunctionCall","src":"1941:57:26"},"nodeType":"YulExpressionStatement","src":"1941:57:26"}]},"name":"abi_decode_t_contract$_IWithdrawVerifier_$25_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1878:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1886:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1894:5:26","type":""}],"src":"1813:191:26"},{"body":{"nodeType":"YulBlock","src":"2075:51:26","statements":[{"nodeType":"YulAssignment","src":"2085:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2114:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2096:17:26"},"nodeType":"YulFunctionCall","src":"2096:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2085:7:26"}]}]},"name":"cleanup_t_contract$_ISwapVerifier_$37","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2057:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2067:7:26","type":""}],"src":"2010:116:26"},{"body":{"nodeType":"YulBlock","src":"2195:99:26","statements":[{"body":{"nodeType":"YulBlock","src":"2272:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2281:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2284:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2274:6:26"},"nodeType":"YulFunctionCall","src":"2274:12:26"},"nodeType":"YulExpressionStatement","src":"2274:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2218:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2263:5:26"}],"functionName":{"name":"cleanup_t_contract$_ISwapVerifier_$37","nodeType":"YulIdentifier","src":"2225:37:26"},"nodeType":"YulFunctionCall","src":"2225:44:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2215:2:26"},"nodeType":"YulFunctionCall","src":"2215:55:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2208:6:26"},"nodeType":"YulFunctionCall","src":"2208:63:26"},"nodeType":"YulIf","src":"2205:83:26"}]},"name":"validator_revert_t_contract$_ISwapVerifier_$37","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2188:5:26","type":""}],"src":"2132:162:26"},{"body":{"nodeType":"YulBlock","src":"2383:100:26","statements":[{"nodeType":"YulAssignment","src":"2393:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2408:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2402:5:26"},"nodeType":"YulFunctionCall","src":"2402:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2393:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2471:5:26"}],"functionName":{"name":"validator_revert_t_contract$_ISwapVerifier_$37","nodeType":"YulIdentifier","src":"2424:46:26"},"nodeType":"YulFunctionCall","src":"2424:53:26"},"nodeType":"YulExpressionStatement","src":"2424:53:26"}]},"name":"abi_decode_t_contract$_ISwapVerifier_$37_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2361:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2369:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2377:5:26","type":""}],"src":"2300:183:26"},{"body":{"nodeType":"YulBlock","src":"2558:51:26","statements":[{"nodeType":"YulAssignment","src":"2568:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2597:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2579:17:26"},"nodeType":"YulFunctionCall","src":"2579:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2568:7:26"}]}]},"name":"cleanup_t_contract$_IFinalizeVerifier_$49","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2540:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2550:7:26","type":""}],"src":"2489:120:26"},{"body":{"nodeType":"YulBlock","src":"2682:103:26","statements":[{"body":{"nodeType":"YulBlock","src":"2763:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2772:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2765:6:26"},"nodeType":"YulFunctionCall","src":"2765:12:26"},"nodeType":"YulExpressionStatement","src":"2765:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2705:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2754:5:26"}],"functionName":{"name":"cleanup_t_contract$_IFinalizeVerifier_$49","nodeType":"YulIdentifier","src":"2712:41:26"},"nodeType":"YulFunctionCall","src":"2712:48:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2702:2:26"},"nodeType":"YulFunctionCall","src":"2702:59:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2695:6:26"},"nodeType":"YulFunctionCall","src":"2695:67:26"},"nodeType":"YulIf","src":"2692:87:26"}]},"name":"validator_revert_t_contract$_IFinalizeVerifier_$49","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2675:5:26","type":""}],"src":"2615:170:26"},{"body":{"nodeType":"YulBlock","src":"2878:104:26","statements":[{"nodeType":"YulAssignment","src":"2888:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2903:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2897:5:26"},"nodeType":"YulFunctionCall","src":"2897:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2888:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2970:5:26"}],"functionName":{"name":"validator_revert_t_contract$_IFinalizeVerifier_$49","nodeType":"YulIdentifier","src":"2919:50:26"},"nodeType":"YulFunctionCall","src":"2919:57:26"},"nodeType":"YulExpressionStatement","src":"2919:57:26"}]},"name":"abi_decode_t_contract$_IFinalizeVerifier_$49_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2856:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2864:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2872:5:26","type":""}],"src":"2791:191:26"},{"body":{"nodeType":"YulBlock","src":"3047:51:26","statements":[{"nodeType":"YulAssignment","src":"3057:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3086:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3068:17:26"},"nodeType":"YulFunctionCall","src":"3068:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3057:7:26"}]}]},"name":"cleanup_t_contract$_IHasher_$63","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3029:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3039:7:26","type":""}],"src":"2988:110:26"},{"body":{"nodeType":"YulBlock","src":"3161:93:26","statements":[{"body":{"nodeType":"YulBlock","src":"3232:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3241:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3244:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3234:6:26"},"nodeType":"YulFunctionCall","src":"3234:12:26"},"nodeType":"YulExpressionStatement","src":"3234:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3184:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3223:5:26"}],"functionName":{"name":"cleanup_t_contract$_IHasher_$63","nodeType":"YulIdentifier","src":"3191:31:26"},"nodeType":"YulFunctionCall","src":"3191:38:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3181:2:26"},"nodeType":"YulFunctionCall","src":"3181:49:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3174:6:26"},"nodeType":"YulFunctionCall","src":"3174:57:26"},"nodeType":"YulIf","src":"3171:77:26"}]},"name":"validator_revert_t_contract$_IHasher_$63","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3154:5:26","type":""}],"src":"3104:150:26"},{"body":{"nodeType":"YulBlock","src":"3337:94:26","statements":[{"nodeType":"YulAssignment","src":"3347:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3362:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3356:5:26"},"nodeType":"YulFunctionCall","src":"3356:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3347:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3419:5:26"}],"functionName":{"name":"validator_revert_t_contract$_IHasher_$63","nodeType":"YulIdentifier","src":"3378:40:26"},"nodeType":"YulFunctionCall","src":"3378:47:26"},"nodeType":"YulExpressionStatement","src":"3378:47:26"}]},"name":"abi_decode_t_contract$_IHasher_$63_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3315:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3323:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3331:5:26","type":""}],"src":"3260:171:26"},{"body":{"nodeType":"YulBlock","src":"3749:1245:26","statements":[{"body":{"nodeType":"YulBlock","src":"3796:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3798:77:26"},"nodeType":"YulFunctionCall","src":"3798:79:26"},"nodeType":"YulExpressionStatement","src":"3798:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3770:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3779:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3766:3:26"},"nodeType":"YulFunctionCall","src":"3766:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3791:3:26","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3762:3:26"},"nodeType":"YulFunctionCall","src":"3762:33:26"},"nodeType":"YulIf","src":"3759:120:26"},{"nodeType":"YulBlock","src":"3889:142:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3904:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3918:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3908:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3933:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3993:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4004:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3989:3:26"},"nodeType":"YulFunctionCall","src":"3989:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4013:7:26"}],"functionName":{"name":"abi_decode_t_contract$_ERC20_$4386_fromMemory","nodeType":"YulIdentifier","src":"3943:45:26"},"nodeType":"YulFunctionCall","src":"3943:78:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3933:6:26"}]}]},{"nodeType":"YulBlock","src":"4041:143:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4056:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4070:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4060:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4086:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4146:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4157:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4142:3:26"},"nodeType":"YulFunctionCall","src":"4142:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4166:7:26"}],"functionName":{"name":"abi_decode_t_contract$_ERC20_$4386_fromMemory","nodeType":"YulIdentifier","src":"4096:45:26"},"nodeType":"YulFunctionCall","src":"4096:78:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4086:6:26"}]}]},{"nodeType":"YulBlock","src":"4194:152:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4209:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4223:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4213:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4239:97:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4308:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4319:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4304:3:26"},"nodeType":"YulFunctionCall","src":"4304:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4328:7:26"}],"functionName":{"name":"abi_decode_t_contract$_IDepositVerifier_$13_fromMemory","nodeType":"YulIdentifier","src":"4249:54:26"},"nodeType":"YulFunctionCall","src":"4249:87:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4239:6:26"}]}]},{"nodeType":"YulBlock","src":"4356:153:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4371:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4385:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4375:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4401:98:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4471:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4482:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4467:3:26"},"nodeType":"YulFunctionCall","src":"4467:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4491:7:26"}],"functionName":{"name":"abi_decode_t_contract$_IWithdrawVerifier_$25_fromMemory","nodeType":"YulIdentifier","src":"4411:55:26"},"nodeType":"YulFunctionCall","src":"4411:88:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4401:6:26"}]}]},{"nodeType":"YulBlock","src":"4519:150:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4534:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4548:3:26","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4538:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4565:94:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4631:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4642:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4627:3:26"},"nodeType":"YulFunctionCall","src":"4627:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4651:7:26"}],"functionName":{"name":"abi_decode_t_contract$_ISwapVerifier_$37_fromMemory","nodeType":"YulIdentifier","src":"4575:51:26"},"nodeType":"YulFunctionCall","src":"4575:84:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4565:6:26"}]}]},{"nodeType":"YulBlock","src":"4679:154:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4694:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4708:3:26","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4698:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4725:98:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4795:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4806:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4791:3:26"},"nodeType":"YulFunctionCall","src":"4791:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4815:7:26"}],"functionName":{"name":"abi_decode_t_contract$_IFinalizeVerifier_$49_fromMemory","nodeType":"YulIdentifier","src":"4735:55:26"},"nodeType":"YulFunctionCall","src":"4735:88:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4725:6:26"}]}]},{"nodeType":"YulBlock","src":"4843:144:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4858:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4872:3:26","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4862:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4889:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4960:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4945:3:26"},"nodeType":"YulFunctionCall","src":"4945:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4969:7:26"}],"functionName":{"name":"abi_decode_t_contract$_IHasher_$63_fromMemory","nodeType":"YulIdentifier","src":"4899:45:26"},"nodeType":"YulFunctionCall","src":"4899:78:26"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4889:6:26"}]}]}]},"name":"abi_decode_tuple_t_contract$_ERC20_$4386t_contract$_ERC20_$4386t_contract$_IDepositVerifier_$13t_contract$_IWithdrawVerifier_$25t_contract$_ISwapVerifier_$37t_contract$_IFinalizeVerifier_$49t_contract$_IHasher_$63_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3671:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3682:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3694:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3702:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3710:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3718:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3726:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3734:6:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3742:6:26","type":""}],"src":"3437:1557:26"},{"body":{"nodeType":"YulBlock","src":"5096:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5113:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"5118:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5106:6:26"},"nodeType":"YulFunctionCall","src":"5106:19:26"},"nodeType":"YulExpressionStatement","src":"5106:19:26"},{"nodeType":"YulAssignment","src":"5134:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5153:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5158:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5149:3:26"},"nodeType":"YulFunctionCall","src":"5149:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5134:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5068:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"5073:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5084:11:26","type":""}],"src":"5000:169:26"},{"body":{"nodeType":"YulBlock","src":"5281:116:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5303:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5311:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5299:3:26"},"nodeType":"YulFunctionCall","src":"5299:14:26"},{"hexValue":"5f6c6576656c732073686f756c642062652067726561746572207468616e207a","kind":"string","nodeType":"YulLiteral","src":"5315:34:26","type":"","value":"_levels should be greater than z"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5292:6:26"},"nodeType":"YulFunctionCall","src":"5292:58:26"},"nodeType":"YulExpressionStatement","src":"5292:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5371:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5379:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5367:3:26"},"nodeType":"YulFunctionCall","src":"5367:15:26"},{"hexValue":"65726f","kind":"string","nodeType":"YulLiteral","src":"5384:5:26","type":"","value":"ero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5360:6:26"},"nodeType":"YulFunctionCall","src":"5360:30:26"},"nodeType":"YulExpressionStatement","src":"5360:30:26"}]},"name":"store_literal_in_memory_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5273:6:26","type":""}],"src":"5175:222:26"},{"body":{"nodeType":"YulBlock","src":"5549:220:26","statements":[{"nodeType":"YulAssignment","src":"5559:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5625:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5630:2:26","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5566:58:26"},"nodeType":"YulFunctionCall","src":"5566:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5559:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5731:3:26"}],"functionName":{"name":"store_literal_in_memory_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d","nodeType":"YulIdentifier","src":"5642:88:26"},"nodeType":"YulFunctionCall","src":"5642:93:26"},"nodeType":"YulExpressionStatement","src":"5642:93:26"},{"nodeType":"YulAssignment","src":"5744:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5755:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5760:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5751:3:26"},"nodeType":"YulFunctionCall","src":"5751:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5744:3:26"}]}]},"name":"abi_encode_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5537:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5545:3:26","type":""}],"src":"5403:366:26"},{"body":{"nodeType":"YulBlock","src":"5946:248:26","statements":[{"nodeType":"YulAssignment","src":"5956:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5968:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5979:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5964:3:26"},"nodeType":"YulFunctionCall","src":"5964:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5956:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6003:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6014:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5999:3:26"},"nodeType":"YulFunctionCall","src":"5999:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6022:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6028:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6018:3:26"},"nodeType":"YulFunctionCall","src":"6018:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5992:6:26"},"nodeType":"YulFunctionCall","src":"5992:47:26"},"nodeType":"YulExpressionStatement","src":"5992:47:26"},{"nodeType":"YulAssignment","src":"6048:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6182:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6056:124:26"},"nodeType":"YulFunctionCall","src":"6056:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6048:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5926:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5941:4:26","type":""}],"src":"5775:419:26"},{"body":{"nodeType":"YulBlock","src":"6306:74:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6328:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6336:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6324:3:26"},"nodeType":"YulFunctionCall","src":"6324:14:26"},{"hexValue":"5f6c6576656c732073686f756c64206265206c657373207468616e203332","kind":"string","nodeType":"YulLiteral","src":"6340:32:26","type":"","value":"_levels should be less than 32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6317:6:26"},"nodeType":"YulFunctionCall","src":"6317:56:26"},"nodeType":"YulExpressionStatement","src":"6317:56:26"}]},"name":"store_literal_in_memory_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6298:6:26","type":""}],"src":"6200:180:26"},{"body":{"nodeType":"YulBlock","src":"6532:220:26","statements":[{"nodeType":"YulAssignment","src":"6542:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6608:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6613:2:26","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6549:58:26"},"nodeType":"YulFunctionCall","src":"6549:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6542:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6714:3:26"}],"functionName":{"name":"store_literal_in_memory_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254","nodeType":"YulIdentifier","src":"6625:88:26"},"nodeType":"YulFunctionCall","src":"6625:93:26"},"nodeType":"YulExpressionStatement","src":"6625:93:26"},{"nodeType":"YulAssignment","src":"6727:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6738:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6743:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6734:3:26"},"nodeType":"YulFunctionCall","src":"6734:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6727:3:26"}]}]},"name":"abi_encode_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6520:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6528:3:26","type":""}],"src":"6386:366:26"},{"body":{"nodeType":"YulBlock","src":"6929:248:26","statements":[{"nodeType":"YulAssignment","src":"6939:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6951:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6962:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6947:3:26"},"nodeType":"YulFunctionCall","src":"6947:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6939:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6986:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6997:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6982:3:26"},"nodeType":"YulFunctionCall","src":"6982:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7005:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7011:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7001:3:26"},"nodeType":"YulFunctionCall","src":"7001:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6975:6:26"},"nodeType":"YulFunctionCall","src":"6975:47:26"},"nodeType":"YulExpressionStatement","src":"6975:47:26"},{"nodeType":"YulAssignment","src":"7031:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7165:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7039:124:26"},"nodeType":"YulFunctionCall","src":"7039:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7031:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6909:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6924:4:26","type":""}],"src":"6758:419:26"},{"body":{"nodeType":"YulBlock","src":"7211:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:26"},"nodeType":"YulFunctionCall","src":"7221:88:26"},"nodeType":"YulExpressionStatement","src":"7221:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:26"},"nodeType":"YulFunctionCall","src":"7318:15:26"},"nodeType":"YulExpressionStatement","src":"7318:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:26"},"nodeType":"YulFunctionCall","src":"7342:15:26"},"nodeType":"YulExpressionStatement","src":"7342:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7183:180:26"},{"body":{"nodeType":"YulBlock","src":"7413:49:26","statements":[{"nodeType":"YulAssignment","src":"7423:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7438:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7445:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7434:3:26"},"nodeType":"YulFunctionCall","src":"7434:22:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7423:7:26"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7395:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7405:7:26","type":""}],"src":"7369:93:26"},{"body":{"nodeType":"YulBlock","src":"7510:133:26","statements":[{"nodeType":"YulAssignment","src":"7520:32:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7546:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"7529:16:26"},"nodeType":"YulFunctionCall","src":"7529:23:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7520:5:26"}]},{"body":{"nodeType":"YulBlock","src":"7586:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7588:16:26"},"nodeType":"YulFunctionCall","src":"7588:18:26"},"nodeType":"YulExpressionStatement","src":"7588:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7567:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7574:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7564:2:26"},"nodeType":"YulFunctionCall","src":"7564:21:26"},"nodeType":"YulIf","src":"7561:47:26"},{"nodeType":"YulAssignment","src":"7617:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7628:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7635:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7624:3:26"},"nodeType":"YulFunctionCall","src":"7624:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7617:3:26"}]}]},"name":"increment_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7496:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7506:3:26","type":""}],"src":"7468:175:26"},{"body":{"nodeType":"YulBlock","src":"7693:156:26","statements":[{"nodeType":"YulAssignment","src":"7703:24:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7725:1:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"7708:16:26"},"nodeType":"YulFunctionCall","src":"7708:19:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7703:1:26"}]},{"nodeType":"YulAssignment","src":"7736:24:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7758:1:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"7741:16:26"},"nodeType":"YulFunctionCall","src":"7741:19:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7736:1:26"}]},{"nodeType":"YulAssignment","src":"7769:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7781:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"7784:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7777:3:26"},"nodeType":"YulFunctionCall","src":"7777:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7769:4:26"}]},{"body":{"nodeType":"YulBlock","src":"7820:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7822:16:26"},"nodeType":"YulFunctionCall","src":"7822:18:26"},"nodeType":"YulExpressionStatement","src":"7822:18:26"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"7802:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7808:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7799:2:26"},"nodeType":"YulFunctionCall","src":"7799:20:26"},"nodeType":"YulIf","src":"7796:46:26"}]},"name":"checked_sub_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7679:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"7682:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7688:4:26","type":""}],"src":"7649:200:26"},{"body":{"nodeType":"YulBlock","src":"7961:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7983:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7991:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7979:3:26"},"nodeType":"YulFunctionCall","src":"7979:14:26"},{"hexValue":"496e646578206f7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"7995:21:26","type":"","value":"Index out of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7972:6:26"},"nodeType":"YulFunctionCall","src":"7972:45:26"},"nodeType":"YulExpressionStatement","src":"7972:45:26"}]},"name":"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7953:6:26","type":""}],"src":"7855:169:26"},{"body":{"nodeType":"YulBlock","src":"8176:220:26","statements":[{"nodeType":"YulAssignment","src":"8186:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8252:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8257:2:26","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8193:58:26"},"nodeType":"YulFunctionCall","src":"8193:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8186:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8358:3:26"}],"functionName":{"name":"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","nodeType":"YulIdentifier","src":"8269:88:26"},"nodeType":"YulFunctionCall","src":"8269:93:26"},"nodeType":"YulExpressionStatement","src":"8269:93:26"},{"nodeType":"YulAssignment","src":"8371:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8382:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8387:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8378:3:26"},"nodeType":"YulFunctionCall","src":"8378:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8371:3:26"}]}]},"name":"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8164:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8172:3:26","type":""}],"src":"8030:366:26"},{"body":{"nodeType":"YulBlock","src":"8573:248:26","statements":[{"nodeType":"YulAssignment","src":"8583:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8595:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8606:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8591:3:26"},"nodeType":"YulFunctionCall","src":"8591:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8583:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8630:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8641:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:26"},"nodeType":"YulFunctionCall","src":"8626:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8649:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"8655:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8645:3:26"},"nodeType":"YulFunctionCall","src":"8645:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8619:6:26"},"nodeType":"YulFunctionCall","src":"8619:47:26"},"nodeType":"YulExpressionStatement","src":"8619:47:26"},{"nodeType":"YulAssignment","src":"8675:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8809:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8683:124:26"},"nodeType":"YulFunctionCall","src":"8683:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8675:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8553:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8568:4:26","type":""}],"src":"8402:419:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$4386(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$4386(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$4386(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$4386_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$4386(value)\n    }\n\n    function cleanup_t_contract$_IDepositVerifier_$13(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IDepositVerifier_$13(value) {\n        if iszero(eq(value, cleanup_t_contract$_IDepositVerifier_$13(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IDepositVerifier_$13_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IDepositVerifier_$13(value)\n    }\n\n    function cleanup_t_contract$_IWithdrawVerifier_$25(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IWithdrawVerifier_$25(value) {\n        if iszero(eq(value, cleanup_t_contract$_IWithdrawVerifier_$25(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IWithdrawVerifier_$25_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IWithdrawVerifier_$25(value)\n    }\n\n    function cleanup_t_contract$_ISwapVerifier_$37(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapVerifier_$37(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapVerifier_$37(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapVerifier_$37_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapVerifier_$37(value)\n    }\n\n    function cleanup_t_contract$_IFinalizeVerifier_$49(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IFinalizeVerifier_$49(value) {\n        if iszero(eq(value, cleanup_t_contract$_IFinalizeVerifier_$49(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IFinalizeVerifier_$49_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IFinalizeVerifier_$49(value)\n    }\n\n    function cleanup_t_contract$_IHasher_$63(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IHasher_$63(value) {\n        if iszero(eq(value, cleanup_t_contract$_IHasher_$63(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IHasher_$63_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IHasher_$63(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$4386t_contract$_ERC20_$4386t_contract$_IDepositVerifier_$13t_contract$_IWithdrawVerifier_$25t_contract$_ISwapVerifier_$37t_contract$_IFinalizeVerifier_$49t_contract$_IHasher_$63_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$4386_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_ERC20_$4386_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IDepositVerifier_$13_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_IWithdrawVerifier_$25_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_contract$_ISwapVerifier_$37_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_contract$_IFinalizeVerifier_$49_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_contract$_IHasher_$63_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"_levels should be greater than z\")\n\n        mstore(add(memPtr, 32), \"ero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8b9ac49a69c08fa915e20b94a7380ea415c71bf3588db632ba5c45b8b270a8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254(memPtr) {\n\n        mstore(add(memPtr, 0), \"_levels should be less than 32\")\n\n    }\n\n    function abi_encode_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2f8fcba4eee7402288e483448fa3466c5a85da57a344f5ae3de88e3f1832e254_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint32(x, y) -> diff {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffff) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(memPtr) {\n\n        mstore(add(memPtr, 0), \"Index out of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4203 CODESIZE SUB DUP1 PUSH3 0x4203 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x59 SWAP2 SWAP1 PUSH3 0xC09 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH3 0xA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9F SWAP1 PUSH3 0xD43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH3 0xF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xEB SWAP1 PUSH3 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 JUMPDEST DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0x1AA JUMPI PUSH3 0x177 DUP2 PUSH4 0xFFFFFFFF AND PUSH3 0x351 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH3 0x1A1 SWAP1 PUSH3 0xE16 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x14B JUMP JUMPDEST POP PUSH3 0x1D0 PUSH1 0x1 DUP4 PUSH3 0x1BE SWAP2 SWAP1 PUSH3 0xE47 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH3 0x351 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 PUSH1 0x3 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP PUSH3 0xEF8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH3 0x387 JUMPI PUSH32 0x2FE54C60D3ACABF3343A35B6EBA15DB4821B340F76E741E2249685ED4899AF6C PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x1 DUP3 SUB PUSH3 0x3BC JUMPI PUSH32 0x256A6135777EEE2FD26F54B8B7037A25439D5235CAEE224154186D2B8A52E31D PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH3 0x3F1 JUMPI PUSH32 0x1151949895E82AB19924DE92C40A3D6F7BCB60D92B00504B8199613683F0C200 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH3 0x426 JUMPI PUSH32 0x20121EE811489FF8D61F09FB89E313F14959A0F28BB428A20DBA6B0B068B3BDB PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH3 0x45B JUMPI PUSH32 0xA89CA6FFA14CC462CFEDB842C30ED221A50A3D6BF022A6A57DC82AB24C157C9 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x5 DUP3 SUB PUSH3 0x490 JUMPI PUSH32 0x24CA05C2B5CD42E890D6BE94C68D0689F4F21C9CEC9C0F13FE41D566DFB54959 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x6 DUP3 SUB PUSH3 0x4C5 JUMPI PUSH32 0x1CCB97C932565A92C60156BDBA2D08F3BF1377464E025CEE765679E604A7315C PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x7 DUP3 SUB PUSH3 0x4FA JUMPI PUSH32 0x19156FBD7D1A8BF5CBA8909367DE1B624534EBAB4F0F79E003BCCDD1B182BDB4 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x8 DUP3 SUB PUSH3 0x52F JUMPI PUSH32 0x261AF8C1F0912E465744641409F622D466C3920AC6E5FF37E36604CB11DFFF80 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x9 DUP3 SUB PUSH3 0x563 JUMPI PUSH31 0x58459724FF6CA5A1652FCBC3E82B93895CF08E975B19BEAB3F54C217D1C007 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0xA DUP3 SUB PUSH3 0x598 JUMPI PUSH32 0x1F04EF20DEE48D39984D8EABE768A70EAFA6310AD20849D4573C3C40C2AD1E30 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0xB DUP3 SUB PUSH3 0x5CD JUMPI PUSH32 0x1BEA3DEC5DAB51567CE7E200A30F7BA6D4276AEAA53E2686F962A46C66D511E5 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0xC DUP3 SUB PUSH3 0x602 JUMPI PUSH32 0xEE0F941E2DA4B9E31C3CA97A40D8FA9CE68D97C084177071B3CB46CD3372F0F PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0xD DUP3 SUB PUSH3 0x637 JUMPI PUSH32 0x1CA9503E8935884501BBAF20BE14EB4C46B89772C97B96E3B2EBF3A36A948BBD PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0xE DUP3 SUB PUSH3 0x66C JUMPI PUSH32 0x133A80E30697CD55D8F7D4B0965B7BE24057BA5DC3DA898EE2187232446CB108 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0xF DUP3 SUB PUSH3 0x6A1 JUMPI PUSH32 0x13E6D8FC88839ED76E182C2A779AF5B2C0DA9DD18C90427A644F7E148A6253B6 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x10 DUP3 SUB PUSH3 0x6D6 JUMPI PUSH32 0x1EB16B057A477F4BC8F572EA6BEE39561098F78F15BFB3699DCBB7BD8DB61854 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x11 DUP3 SUB PUSH3 0x70B JUMPI PUSH32 0xDA2CB16A1CEAABF1C16B838F7A9E3F2A3A3088D9E0A6DEBAA748114620696EA PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x12 DUP3 SUB PUSH3 0x740 JUMPI PUSH32 0x24A3B3D822420B14B5D8CB6C28A574F01E98EA9E940551D2EBD75CEE12649F9D PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x13 DUP3 SUB PUSH3 0x775 JUMPI PUSH32 0x198622ACBD783D1B0D9064105B1FC8E4D8889DE95C4C519B3F635809FE6AFC05 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x14 DUP3 SUB PUSH3 0x7AA JUMPI PUSH32 0x29D7ED391256CCC3EA596C86E933B89FF339D25EA8DDCED975AE2FE30B5296D4 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x15 DUP3 SUB PUSH3 0x7DF JUMPI PUSH32 0x19BE59F2F0413CE78C0C3703A3A5451B1D7F39629FA33ABD11548A76065B2967 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x16 DUP3 SUB PUSH3 0x814 JUMPI PUSH32 0x1FF3F61797E538B70E619310D33F2A063E7EB59104E112E95738DA1254DC3453 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x17 DUP3 SUB PUSH3 0x849 JUMPI PUSH32 0x10C16AE9959CF8358980D9DD9616E48228737310A10E2B6B731C1A548F036C48 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x18 DUP3 SUB PUSH3 0x87E JUMPI PUSH32 0xBA433A63174A90AC20992E75E3095496812B652685B5E1A2EAE0B1BF4E8FCD1 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x19 DUP3 SUB PUSH3 0x8B3 JUMPI PUSH32 0x19DDB9DF2BC98D987D0DFECA9D2B643DEAFAB8F7036562E627C3667266A044C PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x1A DUP3 SUB PUSH3 0x8E8 JUMPI PUSH32 0x2D3C88B23175C5A5565DB928414C66D1912B11ACF974B2E644CAAAC04739CE99 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x1B DUP3 SUB PUSH3 0x91D JUMPI PUSH32 0x2EAB55F6AE4E66E32C5189EED5C470840863445760F5ED7E7B69B2A62600F354 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x1C DUP3 SUB PUSH3 0x951 JUMPI PUSH31 0x2DF37A2642621802383CF952BF4DD1F32E05433BEEB1FD41031FB7EACE979D PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x1D DUP3 SUB PUSH3 0x986 JUMPI PUSH32 0x104AEB41435DB66C3E62FECCC1D6F5D98D0A0ED75D1374DB457CF462E3A1F427 PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x1E DUP3 SUB PUSH3 0x9BB JUMPI PUSH32 0x1F3C6FD858E9A7D4B0D1F38E256A09D81D5A5E3C963987E2D4B814CFAB7C6EBB PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x1F DUP3 SUB PUSH3 0x9F0 JUMPI PUSH32 0x2C7A07D20DFF79D01FECEDC1134284A8D08436606C93693B67E333F671BF69CC PUSH1 0x0 SHL SWAP1 POP PUSH3 0xA2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA24 SWAP1 PUSH3 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA64 DUP3 PUSH3 0xA37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA78 DUP3 PUSH3 0xA57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA8A DUP2 PUSH3 0xA6B JUMP JUMPDEST DUP2 EQ PUSH3 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xAAA DUP2 PUSH3 0xA7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xABD DUP3 PUSH3 0xA57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xACF DUP2 PUSH3 0xAB0 JUMP JUMPDEST DUP2 EQ PUSH3 0xADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xAEF DUP2 PUSH3 0xAC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB02 DUP3 PUSH3 0xA57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB14 DUP2 PUSH3 0xAF5 JUMP JUMPDEST DUP2 EQ PUSH3 0xB20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xB34 DUP2 PUSH3 0xB09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB47 DUP3 PUSH3 0xA57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB59 DUP2 PUSH3 0xB3A JUMP JUMPDEST DUP2 EQ PUSH3 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xB79 DUP2 PUSH3 0xB4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB8C DUP3 PUSH3 0xA57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB9E DUP2 PUSH3 0xB7F JUMP JUMPDEST DUP2 EQ PUSH3 0xBAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xBBE DUP2 PUSH3 0xB93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xBD1 DUP3 PUSH3 0xA57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xBE3 DUP2 PUSH3 0xBC4 JUMP JUMPDEST DUP2 EQ PUSH3 0xBEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xC03 DUP2 PUSH3 0xBD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0xC2B JUMPI PUSH3 0xC2A PUSH3 0xA32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xC3B DUP11 DUP3 DUP12 ADD PUSH3 0xA99 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH3 0xC4E DUP11 DUP3 DUP12 ADD PUSH3 0xA99 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0xC61 DUP11 DUP3 DUP12 ADD PUSH3 0xADE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0xC74 DUP11 DUP3 DUP12 ADD PUSH3 0xB23 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH3 0xC87 DUP11 DUP3 DUP12 ADD PUSH3 0xB68 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH3 0xC9A DUP11 DUP3 DUP12 ADD PUSH3 0xBAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0xCAD DUP11 DUP3 DUP12 ADD PUSH3 0xBF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5F6C6576656C732073686F756C642062652067726561746572207468616E207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD2B PUSH1 0x23 DUP4 PUSH3 0xCBC JUMP JUMPDEST SWAP2 POP PUSH3 0xD38 DUP3 PUSH3 0xCCD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xD5E DUP2 PUSH3 0xD1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5F6C6576656C732073686F756C64206265206C657373207468616E2033320000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD9D PUSH1 0x1E DUP4 PUSH3 0xCBC JUMP JUMPDEST SWAP2 POP PUSH3 0xDAA DUP3 PUSH3 0xD65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xDD0 DUP2 PUSH3 0xD8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE23 DUP3 PUSH3 0xE06 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH3 0xE3C JUMPI PUSH3 0xE3B PUSH3 0xDD7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE54 DUP3 PUSH3 0xE06 JUMP JUMPDEST SWAP2 POP PUSH3 0xE61 DUP4 PUSH3 0xE06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH3 0xE80 JUMPI PUSH3 0xE7F PUSH3 0xDD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xEBE PUSH1 0x13 DUP4 PUSH3 0xCBC JUMP JUMPDEST SWAP2 POP PUSH3 0xECB DUP3 PUSH3 0xE86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xEF1 DUP2 PUSH3 0xEAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x32B8 PUSH3 0xF4B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x4C1 ADD MSTORE DUP2 DUP2 PUSH2 0xB58 ADD MSTORE PUSH2 0x132E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xAB7 ADD MSTORE DUP2 DUP2 PUSH2 0x128D ADD MSTORE PUSH2 0x1B2F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1ADD ADD MSTORE PUSH2 0x1CCF ADD MSTORE PUSH2 0x32B8 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DE533A4 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xEBF0C717 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xEBF0C717 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xEC732959 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xED33639F EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xF178E47C EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xFC7E9C6F EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xFF709EE8 EQ PUSH2 0x425 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x8DE533A4 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x8EA3099E EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xAEFB78D0 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xC4B5239F EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xE8295588 EQ PUSH2 0x34D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x4ECF518B GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x4ECF518B EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x513A4F07 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x5C758F8E EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x61C3305C EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x823DB3D2 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x864EB164 EQ PUSH2 0x2A9 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x14FD7B35 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x26120C88 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x414A37BA EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x479015CD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x499F712E EQ PUSH2 0x1BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x1082 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x385 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40F PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42D PUSH2 0x1B2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP2 JUMP JUMPDEST PUSH1 0x7 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x56C PUSH2 0x1D54 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SHR DUP2 PUSH1 0x0 PUSH1 0x4 DUP2 LT PUSH2 0x586 JUMPI PUSH2 0x585 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH1 0x0 SHR DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x5A7 JUMPI PUSH2 0x5A6 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x7 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x5CA JUMPI PUSH2 0x5C9 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x60A SWAP3 SWAP2 SWAP1 PUSH2 0x2685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x622 SWAP1 PUSH2 0x26EE JUMP JUMPDEST PUSH1 0x0 SHR DUP2 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x639 JUMPI PUSH2 0x638 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x404568B5 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP1 PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72A DUP5 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x812 JUMPI PUSH2 0x811 PUSH2 0x2167 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 PUSH2 0x1D76 JUMP JUMPDEST DUP8 PUSH1 0x0 SHR DUP2 PUSH1 0x0 PUSH1 0x5 DUP2 LT PUSH2 0x860 JUMPI PUSH2 0x85F PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB2B4E62F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x0 SHR DUP2 PUSH1 0x1 PUSH1 0x5 DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x2 PUSH1 0x5 DUP2 LT PUSH2 0x90D JUMPI PUSH2 0x90C PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 PUSH1 0x3 PUSH1 0x5 DUP2 LT PUSH2 0x92B JUMPI PUSH2 0x92A PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 PUSH1 0x5 DUP2 LT PUSH2 0x95F JUMPI PUSH2 0x95E PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CD SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x839DED65 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA35 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA76 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAC SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB12 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB55 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP PUSH2 0xC00 DUP9 PUSH2 0x1BA3 JUMP JUMPDEST SWAP2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP4 PUSH1 0x0 SHR LT PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB7 SWAP1 PUSH2 0x2BD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP3 PUSH1 0x0 SHR LT PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1C SWAP1 PUSH2 0x2C66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF47D33B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP3 SWAP2 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP1 PUSH2 0xDE1 JUMPI PUSH2 0xDE0 PUSH2 0x2D04 JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x0 SHR DUP4 ADDMOD SWAP2 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF47D33B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE24 SWAP3 SWAP2 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE64 SWAP2 SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH1 0x0 SHL SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE83 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SHR DUP2 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0xE9D JUMPI PUSH2 0xE9C PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH1 0x0 SHR DUP2 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0xEBE JUMPI PUSH2 0xEBD PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x0 SHR DUP2 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0xEDF JUMPI PUSH2 0xEDE PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7509E379 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBE SWAP1 PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD0 DUP5 PUSH2 0x1BA3 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH1 0x2 PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1076 JUMPI PUSH2 0x1075 PUSH2 0x2167 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x108A PUSH2 0x1D76 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SHR DUP2 PUSH1 0x0 PUSH1 0x5 DUP2 LT PUSH2 0x10A4 JUMPI PUSH2 0x10A3 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP7 PUSH1 0x0 SHR DUP2 PUSH1 0x1 PUSH1 0x5 DUP2 LT PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 PUSH1 0x2 PUSH1 0x5 DUP2 LT PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x3 PUSH1 0x5 DUP2 LT PUSH2 0x1101 JUMPI PUSH2 0x1100 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 PUSH1 0x5 DUP2 LT PUSH2 0x1135 JUMPI PUSH2 0x1134 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A3 SWAP1 PUSH2 0x2EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x839DED65 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1228 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0x128B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1282 SWAP1 PUSH2 0x2F0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP7 DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1307 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x132B SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP7 DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1389 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13CC SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x8 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1404 JUMPI PUSH2 0x1403 PUSH2 0x2167 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x1446 JUMPI PUSH32 0x2FE54C60D3ACABF3343A35B6EBA15DB4821B340F76E741E2249685ED4899AF6C PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1 DUP3 SUB PUSH2 0x1479 JUMPI PUSH32 0x256A6135777EEE2FD26F54B8B7037A25439D5235CAEE224154186D2B8A52E31D PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x14AC JUMPI PUSH32 0x1151949895E82AB19924DE92C40A3D6F7BCB60D92B00504B8199613683F0C200 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x14DF JUMPI PUSH32 0x20121EE811489FF8D61F09FB89E313F14959A0F28BB428A20DBA6B0B068B3BDB PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x1512 JUMPI PUSH32 0xA89CA6FFA14CC462CFEDB842C30ED221A50A3D6BF022A6A57DC82AB24C157C9 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x5 DUP3 SUB PUSH2 0x1545 JUMPI PUSH32 0x24CA05C2B5CD42E890D6BE94C68D0689F4F21C9CEC9C0F13FE41D566DFB54959 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x6 DUP3 SUB PUSH2 0x1578 JUMPI PUSH32 0x1CCB97C932565A92C60156BDBA2D08F3BF1377464E025CEE765679E604A7315C PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x7 DUP3 SUB PUSH2 0x15AB JUMPI PUSH32 0x19156FBD7D1A8BF5CBA8909367DE1B624534EBAB4F0F79E003BCCDD1B182BDB4 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x8 DUP3 SUB PUSH2 0x15DE JUMPI PUSH32 0x261AF8C1F0912E465744641409F622D466C3920AC6E5FF37E36604CB11DFFF80 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x9 DUP3 SUB PUSH2 0x1610 JUMPI PUSH31 0x58459724FF6CA5A1652FCBC3E82B93895CF08E975B19BEAB3F54C217D1C007 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xA DUP3 SUB PUSH2 0x1643 JUMPI PUSH32 0x1F04EF20DEE48D39984D8EABE768A70EAFA6310AD20849D4573C3C40C2AD1E30 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xB DUP3 SUB PUSH2 0x1676 JUMPI PUSH32 0x1BEA3DEC5DAB51567CE7E200A30F7BA6D4276AEAA53E2686F962A46C66D511E5 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xC DUP3 SUB PUSH2 0x16A9 JUMPI PUSH32 0xEE0F941E2DA4B9E31C3CA97A40D8FA9CE68D97C084177071B3CB46CD3372F0F PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xD DUP3 SUB PUSH2 0x16DC JUMPI PUSH32 0x1CA9503E8935884501BBAF20BE14EB4C46B89772C97B96E3B2EBF3A36A948BBD PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xE DUP3 SUB PUSH2 0x170F JUMPI PUSH32 0x133A80E30697CD55D8F7D4B0965B7BE24057BA5DC3DA898EE2187232446CB108 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xF DUP3 SUB PUSH2 0x1742 JUMPI PUSH32 0x13E6D8FC88839ED76E182C2A779AF5B2C0DA9DD18C90427A644F7E148A6253B6 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x10 DUP3 SUB PUSH2 0x1775 JUMPI PUSH32 0x1EB16B057A477F4BC8F572EA6BEE39561098F78F15BFB3699DCBB7BD8DB61854 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x11 DUP3 SUB PUSH2 0x17A8 JUMPI PUSH32 0xDA2CB16A1CEAABF1C16B838F7A9E3F2A3A3088D9E0A6DEBAA748114620696EA PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x12 DUP3 SUB PUSH2 0x17DB JUMPI PUSH32 0x24A3B3D822420B14B5D8CB6C28A574F01E98EA9E940551D2EBD75CEE12649F9D PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x13 DUP3 SUB PUSH2 0x180E JUMPI PUSH32 0x198622ACBD783D1B0D9064105B1FC8E4D8889DE95C4C519B3F635809FE6AFC05 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x14 DUP3 SUB PUSH2 0x1841 JUMPI PUSH32 0x29D7ED391256CCC3EA596C86E933B89FF339D25EA8DDCED975AE2FE30B5296D4 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x15 DUP3 SUB PUSH2 0x1874 JUMPI PUSH32 0x19BE59F2F0413CE78C0C3703A3A5451B1D7F39629FA33ABD11548A76065B2967 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x16 DUP3 SUB PUSH2 0x18A7 JUMPI PUSH32 0x1FF3F61797E538B70E619310D33F2A063E7EB59104E112E95738DA1254DC3453 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x17 DUP3 SUB PUSH2 0x18DA JUMPI PUSH32 0x10C16AE9959CF8358980D9DD9616E48228737310A10E2B6B731C1A548F036C48 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x18 DUP3 SUB PUSH2 0x190D JUMPI PUSH32 0xBA433A63174A90AC20992E75E3095496812B652685B5E1A2EAE0B1BF4E8FCD1 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x19 DUP3 SUB PUSH2 0x1940 JUMPI PUSH32 0x19DDB9DF2BC98D987D0DFECA9D2B643DEAFAB8F7036562E627C3667266A044C PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1A DUP3 SUB PUSH2 0x1973 JUMPI PUSH32 0x2D3C88B23175C5A5565DB928414C66D1912B11ACF974B2E644CAAAC04739CE99 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1B DUP3 SUB PUSH2 0x19A6 JUMPI PUSH32 0x2EAB55F6AE4E66E32C5189EED5C470840863445760F5ED7E7B69B2A62600F354 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1C DUP3 SUB PUSH2 0x19D8 JUMPI PUSH31 0x2DF37A2642621802383CF952BF4DD1F32E05433BEEB1FD41031FB7EACE979D PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1D DUP3 SUB PUSH2 0x1A0B JUMPI PUSH32 0x104AEB41435DB66C3E62FECCC1D6F5D98D0A0ED75D1374DB457CF462E3A1F427 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1E DUP3 SUB PUSH2 0x1A3E JUMPI PUSH32 0x1F3C6FD858E9A7D4B0D1F38E256A09D81D5A5E3C963987E2D4B814CFAB7C6EBB PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1F DUP3 SUB PUSH2 0x1A71 JUMPI PUSH32 0x2C7A07D20DFF79D01FECEDC1134284A8D08436606C93693B67E333F671BF69CC PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA3 SWAP1 PUSH2 0x2F79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x2FE54C60D3ACABF3343A35B6EBA15DB4821B340F76E741E2249685ED4899AF6C DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B59 PUSH2 0x1DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x2 PUSH2 0x1BD8 SWAP2 SWAP1 PUSH2 0x30FB JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND SUB PUSH2 0x1C25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1C SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1D19 JUMPI PUSH1 0x0 PUSH1 0x2 DUP7 PUSH2 0x1C68 SWAP2 SWAP1 PUSH2 0x31BC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SUB PUSH2 0x1CAA JUMPI DUP4 SWAP3 POP PUSH2 0x1C85 DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP DUP4 SWAP2 POP JUMPDEST PUSH2 0x1CF5 PUSH32 0x0 DUP5 DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP4 POP PUSH1 0x2 DUP6 PUSH2 0x1D04 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST SWAP5 POP DUP1 DUP1 PUSH2 0x1D11 SWAP1 PUSH2 0x321E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C35 JUMP JUMPDEST POP PUSH1 0x1 DUP6 PUSH2 0x1D27 SWAP2 SWAP1 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E45 PUSH2 0x1E40 PUSH2 0x1E3B DUP5 PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0x1E00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E57 DUP3 PUSH2 0x1E2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E69 DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E79 DUP2 PUSH2 0x1E5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E94 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA5 DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB5 DUP2 PUSH2 0x1E9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE9 DUP2 PUSH2 0x1ED6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F04 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F15 DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F25 DUP2 PUSH2 0x1F0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F5F DUP2 PUSH2 0x1F46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F9D DUP2 PUSH2 0x1F8A JUMP JUMPDEST DUP2 EQ PUSH2 0x1FA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FBA DUP2 PUSH2 0x1F94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD6 JUMPI PUSH2 0x1FD5 PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FE4 DUP5 DUP3 DUP6 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2003 DUP2 PUSH2 0x1FED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202D DUP2 PUSH2 0x2009 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2048 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FFA JUMP JUMPDEST PUSH2 0x2055 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x2062 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2024 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2085 JUMPI PUSH2 0x2084 PUSH2 0x206A JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20B3 JUMPI PUSH2 0x20B2 PUSH2 0x208E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x20EC JUMPI PUSH2 0x20EB PUSH2 0x2098 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x210D JUMPI PUSH2 0x210C PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x211B DUP8 DUP3 DUP9 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x212C DUP8 DUP3 DUP9 ADD PUSH2 0x206F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x214D JUMPI PUSH2 0x214C PUSH2 0x1F85 JUMP JUMPDEST JUMPDEST PUSH2 0x2159 DUP8 DUP3 DUP9 ADD PUSH2 0x209D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x21A7 JUMPI PUSH2 0x21A6 PUSH2 0x2167 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x21B8 DUP3 PUSH2 0x2196 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C8 DUP3 PUSH2 0x21AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D8 DUP2 PUSH2 0x21BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x1ED6 JUMP JUMPDEST DUP2 EQ PUSH2 0x220D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x221F DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2230 DUP3 PUSH2 0x1E00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2240 DUP2 PUSH2 0x2225 JUMP JUMPDEST DUP2 EQ PUSH2 0x224B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225D DUP2 PUSH2 0x2237 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2280 JUMPI PUSH2 0x227F PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228E DUP10 DUP3 DUP11 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x229F DUP10 DUP3 DUP11 ADD PUSH2 0x2210 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x22B0 DUP10 DUP3 DUP11 ADD PUSH2 0x2210 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x22C1 DUP10 DUP3 DUP11 ADD PUSH2 0x224E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x1F85 JUMP JUMPDEST JUMPDEST PUSH2 0x22EE DUP10 DUP3 DUP11 ADD PUSH2 0x209D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2308 DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2318 DUP2 PUSH2 0x22FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2333 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x230F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2344 DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2354 DUP2 PUSH2 0x2339 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x236F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x234B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2380 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2390 DUP2 PUSH2 0x2375 JUMP JUMPDEST DUP2 EQ PUSH2 0x239B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AD DUP2 PUSH2 0x2387 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23CC JUMPI PUSH2 0x23CB PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23DA DUP7 DUP3 DUP8 ADD PUSH2 0x239E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x23EB DUP7 DUP3 DUP8 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23FC DUP7 DUP3 DUP8 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x240F DUP2 PUSH2 0x1F8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x242A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x244A JUMPI PUSH2 0x2449 PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2458 DUP8 DUP3 DUP9 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2469 DUP8 DUP3 DUP9 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x248A JUMPI PUSH2 0x2489 PUSH2 0x1F85 JUMP JUMPDEST JUMPDEST PUSH2 0x2496 DUP8 DUP3 DUP9 ADD PUSH2 0x209D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24BA JUMPI PUSH2 0x24B9 PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C8 DUP5 DUP3 DUP6 ADD PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DC DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EC DUP2 PUSH2 0x24D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2507 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2545 DUP2 PUSH2 0x1FED JUMP JUMPDEST DUP2 EQ PUSH2 0x2550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2562 DUP2 PUSH2 0x253C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x257E JUMPI PUSH2 0x257D PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x258C DUP5 DUP3 DUP6 ADD PUSH2 0x2553 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C9 DUP2 PUSH2 0x2595 JUMP JUMPDEST DUP2 EQ PUSH2 0x25D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25E6 DUP2 PUSH2 0x25C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2602 JUMPI PUSH2 0x2601 PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2610 DUP5 DUP3 DUP6 ADD PUSH2 0x25D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2631 DUP3 PUSH2 0x2619 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2649 PUSH2 0x2644 DUP3 PUSH2 0x1FED JUMP JUMPDEST PUSH2 0x2626 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2667 DUP3 PUSH2 0x264F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x267F PUSH2 0x267A DUP3 PUSH2 0x2595 JUMP JUMPDEST PUSH2 0x265C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2691 DUP3 DUP6 PUSH2 0x2638 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH2 0x26A1 DUP3 DUP5 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x1F DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D8 DUP3 MLOAD PUSH2 0x1F8A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F9 DUP3 PUSH2 0x26B1 JUMP JUMPDEST DUP3 PUSH2 0x2703 DUP5 PUSH2 0x26BC JUMP JUMPDEST SWAP1 POP PUSH2 0x270E DUP2 PUSH2 0x26CC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x274E JUMPI PUSH2 0x2749 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x26E1 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x277E DUP2 PUSH2 0x1ED6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2790 DUP4 DUP4 PUSH2 0x2775 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B2 DUP2 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x27BC DUP2 DUP5 PUSH2 0x2760 JUMP JUMPDEST SWAP3 POP PUSH2 0x27C7 DUP3 PUSH2 0x276B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27F8 JUMPI DUP2 MLOAD PUSH2 0x27DF DUP8 DUP3 PUSH2 0x2784 JUMP JUMPDEST SWAP7 POP PUSH2 0x27EA DUP4 PUSH2 0x279C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27CB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x283D DUP4 DUP6 PUSH2 0x2800 JUMP JUMPDEST SWAP4 POP PUSH2 0x284A DUP4 DUP6 DUP5 PUSH2 0x2811 JUMP JUMPDEST PUSH2 0x2853 DUP4 PUSH2 0x2820 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2873 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x27A9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2886 DUP2 DUP5 DUP7 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A5 DUP2 PUSH2 0x2890 JUMP JUMPDEST DUP2 EQ PUSH2 0x28B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x28C2 DUP2 PUSH2 0x289C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28DE JUMPI PUSH2 0x28DD PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28EC DUP5 DUP3 DUP6 ADD PUSH2 0x28B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53776170205665726966696572206661696C6564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293C PUSH1 0x14 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2947 DUP3 PUSH2 0x2906 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x296B DUP2 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2981 DUP2 PUSH2 0x1F94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x299D JUMPI PUSH2 0x299C PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29AB DUP5 DUP3 DUP6 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465706F736974206E6F74207472616465720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29EA PUSH1 0x12 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F5 DUP3 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A19 DUP2 PUSH2 0x29DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A56 DUP2 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x2A60 DUP2 DUP5 PUSH2 0x2A2B JUMP JUMPDEST SWAP3 POP PUSH2 0x2A6B DUP3 PUSH2 0x2A36 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A9C JUMPI DUP2 MLOAD PUSH2 0x2A83 DUP8 DUP3 PUSH2 0x2784 JUMP JUMPDEST SWAP7 POP PUSH2 0x2A8E DUP4 PUSH2 0x2A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A6F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2AB9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2A4D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2ACC DUP2 DUP5 DUP7 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4465706F736974205665726966696572206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0C PUSH1 0x17 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B17 DUP3 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B3B DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B4B DUP2 PUSH2 0x2225 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B66 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2B42 JUMP JUMPDEST PUSH2 0x2B73 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B42 JUMP JUMPDEST PUSH2 0x2B80 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EE0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5F6C6566742073686F756C6420626520696E7369646520746865206669656C64 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBE PUSH1 0x20 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC9 DUP3 PUSH2 0x2B88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BED DUP2 PUSH2 0x2BB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5F72696768742073686F756C6420626520696E7369646520746865206669656C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C50 PUSH1 0x21 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5B DUP3 PUSH2 0x2BF4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C7F DUP2 PUSH2 0x2C43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C9B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x2CA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EE0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CBE DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CDB JUMPI PUSH2 0x2CDA PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CE9 DUP6 DUP3 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CFA DUP6 DUP3 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D69 DUP2 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x2D73 DUP2 DUP5 PUSH2 0x2D3E JUMP JUMPDEST SWAP3 POP PUSH2 0x2D7E DUP3 PUSH2 0x2D49 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DAF JUMPI DUP2 MLOAD PUSH2 0x2D96 DUP8 DUP3 PUSH2 0x2784 JUMP JUMPDEST SWAP7 POP PUSH2 0x2DA1 DUP4 PUSH2 0x2D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D82 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2DCC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D60 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2DDF DUP2 DUP5 DUP7 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x66696E616C697A653A20766572696679206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1F PUSH1 0x17 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2A DUP3 PUSH2 0x2DE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E4E DUP2 PUSH2 0x2E12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177206E6F742074726164657200000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E8B PUSH1 0x13 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E96 DUP3 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EBA DUP2 PUSH2 0x2E7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177205665726966696572206661696C65640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF7 PUSH1 0x18 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F02 DUP3 PUSH2 0x2EC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F26 DUP2 PUSH2 0x2EEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F63 PUSH1 0x13 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F6E DUP3 PUSH2 0x2F2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F92 DUP2 PUSH2 0x2F56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x301F JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2FFB JUMPI PUSH2 0x2FFA PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x300A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x3018 DUP6 PUSH2 0x2FC8 JUMP JUMPDEST SWAP5 POP PUSH2 0x2FDF JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3038 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x30F4 JUMP JUMPDEST DUP2 PUSH2 0x3046 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x30F4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x305C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3066 JUMPI PUSH2 0x3095 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x30F4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3078 JUMPI PUSH2 0x3077 PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x308F JUMPI PUSH2 0x308E PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST POP PUSH2 0x30F4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x30CA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x30C5 JUMPI PUSH2 0x30C4 PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST PUSH2 0x30F4 JUMP JUMPDEST PUSH2 0x30D7 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2FD5 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x30EE JUMPI PUSH2 0x30ED PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3106 DUP3 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0x3111 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP3 POP PUSH2 0x3122 PUSH4 0xFFFFFFFF DUP5 DUP5 PUSH2 0x3028 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D65726B6C6520747265652069732066756C6C2E204E6F206D6F7265206C6561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7665732063616E20626520616464656400000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3186 PUSH1 0x30 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3191 DUP3 PUSH2 0x312A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31B5 DUP2 PUSH2 0x3179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C7 DUP3 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0x31D2 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x31E2 JUMPI PUSH2 0x31E1 PUSH2 0x2D04 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F8 DUP3 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0x3203 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3213 JUMPI PUSH2 0x3212 PUSH2 0x2D04 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3229 DUP3 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x323F JUMPI PUSH2 0x323E PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3255 DUP3 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0x3260 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x327C JUMPI PUSH2 0x327B PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xE8 0xD5 0xBA 0x4A 0xE DUP8 BYTE PUSH21 0x23A555EC9DA90E72D3D025E54A217816FE2CC1EA7B 0xC3 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"561:4182:2:-:0;;;994:1:1;968:27;;;;;;;;;;;;;;;;;;;;1006:518:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1276:2;1280:7;1075:1:1;1065:7;:11;;;1057:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1144:2;1134:7;:12;;;1126:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1200:7;1191:6;;:16;;;;;;;;;;;;;;;;;;1226:7;1217:16;;;;;;;;;;1249:8;1244:90;1267:7;1263:11;;:1;:11;;;1244:90;;;1315:8;1321:1;1315:8;;:5;;;:8;;:::i;:::-;1295:14;:17;1310:1;1295:17;;;;;;;;;;;;;:28;;;;1276:3;;;;;:::i;:::-;;;;1244:90;;;;1351:18;1367:1;1357:7;:11;;;;:::i;:::-;1351:18;;:5;;;:18;;:::i;:::-;1344:4;:25;;;;1002:374;;1309:7:2::1;1299:17;;;;;;;;::::0;::::1;1336:7;1326:17;;;;;;;;::::0;::::1;1371:16;1353:15;;:34;;;;;;;;;;;;;;;;;;1416:17;1397:16;;:36;;;;;;;;;;;;;;;;;;1458:13;1443:12;;:28;;;;;;;;;;;;;;;;;;1500:17;1481:16;;:36;;;;;;;;;;;;;;;;;;1006:518:::0;;;;;;;561:4182;;3028:5724:1;3075:7;3103:1;3098;:6;3094:5651;;3170:66;3141:113;;3118:136;;;;3094:5651;3278:1;3273;:6;3269:5476;;3345:66;3316:113;;3293:136;;;;3269:5476;3453:1;3448;:6;3444:5301;;3520:66;3491:113;;3468:136;;;;3444:5301;3628:1;3623;:6;3619:5126;;3695:66;3666:113;;3643:136;;;;3619:5126;3803:1;3798;:6;3794:4951;;3870:66;3841:113;;3818:136;;;;3794:4951;3978:1;3973;:6;3969:4776;;4045:66;4016:113;;3993:136;;;;3969:4776;4153:1;4148;:6;4144:4601;;4220:66;4191:113;;4168:136;;;;4144:4601;4328:1;4323;:6;4319:4426;;4395:66;4366:113;;4343:136;;;;4319:4426;4503:1;4498;:6;4494:4251;;4570:66;4541:113;;4518:136;;;;4494:4251;4678:1;4673;:6;4669:4076;;4745:66;4716:113;;4693:136;;;;4669:4076;4853:2;4848:1;:7;4844:3901;;4921:66;4892:113;;4869:136;;;;4844:3901;5029:2;5024:1;:7;5020:3725;;5097:66;5068:113;;5045:136;;;;5020:3725;5205:2;5200:1;:7;5196:3549;;5273:66;5244:113;;5221:136;;;;5196:3549;5381:2;5376:1;:7;5372:3373;;5449:66;5420:113;;5397:136;;;;5372:3373;5557:2;5552:1;:7;5548:3197;;5625:66;5596:113;;5573:136;;;;5548:3197;5733:2;5728:1;:7;5724:3021;;5801:66;5772:113;;5749:136;;;;5724:3021;5909:2;5904:1;:7;5900:2845;;5977:66;5948:113;;5925:136;;;;5900:2845;6085:2;6080:1;:7;6076:2669;;6153:66;6124:113;;6101:136;;;;6076:2669;6261:2;6256:1;:7;6252:2493;;6329:66;6300:113;;6277:136;;;;6252:2493;6437:2;6432:1;:7;6428:2317;;6505:66;6476:113;;6453:136;;;;6428:2317;6613:2;6608:1;:7;6604:2141;;6681:66;6652:113;;6629:136;;;;6604:2141;6789:2;6784:1;:7;6780:1965;;6857:66;6828:113;;6805:136;;;;6780:1965;6965:2;6960:1;:7;6956:1789;;7033:66;7004:113;;6981:136;;;;6956:1789;7141:2;7136:1;:7;7132:1613;;7209:66;7180:113;;7157:136;;;;7132:1613;7317:2;7312:1;:7;7308:1437;;7385:66;7356:113;;7333:136;;;;7308:1437;7493:2;7488:1;:7;7484:1261;;7561:66;7532:113;;7509:136;;;;7484:1261;7669:2;7664:1;:7;7660:1085;;7737:66;7708:113;;7685:136;;;;7660:1085;7845:2;7840:1;:7;7836:909;;7913:66;7884:113;;7861:136;;;;7836:909;8021:2;8016:1;:7;8012:733;;8089:66;8060:113;;8037:136;;;;8012:733;8197:2;8192:1;:7;8188:557;;8265:66;8236:113;;8213:136;;;;8188:557;8373:2;8368:1;:7;8364:381;;8441:66;8412:113;;8389:136;;;;8364:381;8549:2;8544:1;:7;8540:205;;8617:66;8588:113;;8565:136;;;;8540:205;8716:29;;;;;;;;;;:::i;:::-;;;;;;;;3028:5724;;;;:::o;88:117:26:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:119::-;1077:7;1106:24;1124:5;1106:24;:::i;:::-;1095:35;;1017:119;;;:::o;1142:168::-;1238:47;1279:5;1238:47;:::i;:::-;1231:5;1228:58;1218:86;;1300:1;1297;1290:12;1218:86;1142:168;:::o;1316:189::-;1396:5;1427:6;1421:13;1412:22;;1443:56;1493:5;1443:56;:::i;:::-;1316:189;;;;:::o;1511:120::-;1572:7;1601:24;1619:5;1601:24;:::i;:::-;1590:35;;1511:120;;;:::o;1637:170::-;1734:48;1776:5;1734:48;:::i;:::-;1727:5;1724:59;1714:87;;1797:1;1794;1787:12;1714:87;1637:170;:::o;1813:191::-;1894:5;1925:6;1919:13;1910:22;;1941:57;1992:5;1941:57;:::i;:::-;1813:191;;;;:::o;2010:116::-;2067:7;2096:24;2114:5;2096:24;:::i;:::-;2085:35;;2010:116;;;:::o;2132:162::-;2225:44;2263:5;2225:44;:::i;:::-;2218:5;2215:55;2205:83;;2284:1;2281;2274:12;2205:83;2132:162;:::o;2300:183::-;2377:5;2408:6;2402:13;2393:22;;2424:53;2471:5;2424:53;:::i;:::-;2300:183;;;;:::o;2489:120::-;2550:7;2579:24;2597:5;2579:24;:::i;:::-;2568:35;;2489:120;;;:::o;2615:170::-;2712:48;2754:5;2712:48;:::i;:::-;2705:5;2702:59;2692:87;;2775:1;2772;2765:12;2692:87;2615:170;:::o;2791:191::-;2872:5;2903:6;2897:13;2888:22;;2919:57;2970:5;2919:57;:::i;:::-;2791:191;;;;:::o;2988:110::-;3039:7;3068:24;3086:5;3068:24;:::i;:::-;3057:35;;2988:110;;;:::o;3104:150::-;3191:38;3223:5;3191:38;:::i;:::-;3184:5;3181:49;3171:77;;3244:1;3241;3234:12;3171:77;3104:150;:::o;3260:171::-;3331:5;3362:6;3356:13;3347:22;;3378:47;3419:5;3378:47;:::i;:::-;3260:171;;;;:::o;3437:1557::-;3694:6;3702;3710;3718;3726;3734;3742;3791:3;3779:9;3770:7;3766:23;3762:33;3759:120;;;3798:79;;:::i;:::-;3759:120;3918:1;3943:78;4013:7;4004:6;3993:9;3989:22;3943:78;:::i;:::-;3933:88;;3889:142;4070:2;4096:78;4166:7;4157:6;4146:9;4142:22;4096:78;:::i;:::-;4086:88;;4041:143;4223:2;4249:87;4328:7;4319:6;4308:9;4304:22;4249:87;:::i;:::-;4239:97;;4194:152;4385:2;4411:88;4491:7;4482:6;4471:9;4467:22;4411:88;:::i;:::-;4401:98;;4356:153;4548:3;4575:84;4651:7;4642:6;4631:9;4627:22;4575:84;:::i;:::-;4565:94;;4519:150;4708:3;4735:88;4815:7;4806:6;4795:9;4791:22;4735:88;:::i;:::-;4725:98;;4679:154;4872:3;4899:78;4969:7;4960:6;4949:9;4945:22;4899:78;:::i;:::-;4889:88;;4843:144;3437:1557;;;;;;;;;;:::o;5000:169::-;5084:11;5118:6;5113:3;5106:19;5158:4;5153:3;5149:14;5134:29;;5000:169;;;;:::o;5175:222::-;5315:34;5311:1;5303:6;5299:14;5292:58;5384:5;5379:2;5371:6;5367:15;5360:30;5175:222;:::o;5403:366::-;5545:3;5566:67;5630:2;5625:3;5566:67;:::i;:::-;5559:74;;5642:93;5731:3;5642:93;:::i;:::-;5760:2;5755:3;5751:12;5744:19;;5403:366;;;:::o;5775:419::-;5941:4;5979:2;5968:9;5964:18;5956:26;;6028:9;6022:4;6018:20;6014:1;6003:9;5999:17;5992:47;6056:131;6182:4;6056:131;:::i;:::-;6048:139;;5775:419;;;:::o;6200:180::-;6340:32;6336:1;6328:6;6324:14;6317:56;6200:180;:::o;6386:366::-;6528:3;6549:67;6613:2;6608:3;6549:67;:::i;:::-;6542:74;;6625:93;6714:3;6625:93;:::i;:::-;6743:2;6738:3;6734:12;6727:19;;6386:366;;;:::o;6758:419::-;6924:4;6962:2;6951:9;6947:18;6939:26;;7011:9;7005:4;7001:20;6997:1;6986:9;6982:17;6975:47;7039:131;7165:4;7039:131;:::i;:::-;7031:139;;6758:419;;;:::o;7183:180::-;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:93;7405:7;7445:10;7438:5;7434:22;7423:33;;7369:93;;;:::o;7468:175::-;7506:3;7529:23;7546:5;7529:23;:::i;:::-;7520:32;;7574:10;7567:5;7564:21;7561:47;;7588:18;;:::i;:::-;7561:47;7635:1;7628:5;7624:13;7617:20;;7468:175;;;:::o;7649:200::-;7688:4;7708:19;7725:1;7708:19;:::i;:::-;7703:24;;7741:19;7758:1;7741:19;:::i;:::-;7736:24;;7784:1;7781;7777:9;7769:17;;7808:10;7802:4;7799:20;7796:46;;;7822:18;;:::i;:::-;7796:46;7649:200;;;;:::o;7855:169::-;7995:21;7991:1;7983:6;7979:14;7972:45;7855:169;:::o;8030:366::-;8172:3;8193:67;8257:2;8252:3;8193:67;:::i;:::-;8186:74;;8269:93;8358:3;8269:93;:::i;:::-;8387:2;8382:3;8378:12;8371:19;;8030:366;;;:::o;8402:419::-;8568:4;8606:2;8595:9;8591:18;8583:26;;8655:9;8649:4;8645:20;8641:1;8630:9;8626:17;8619:47;8683:131;8809:4;8683:131;:::i;:::-;8675:139;;8402:419;;;:::o;561:4182:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@FIELD_SIZE_66":{"entryPoint":1167,"id":66,"parameterSlots":0,"returnSlots":0},"@TOKEN_A_667":{"entryPoint":6957,"id":667,"parameterSlots":0,"returnSlots":0},"@TOKEN_B_670":{"entryPoint":1215,"id":670,"parameterSlots":0,"returnSlots":0},"@ZERO_VALUE_69":{"entryPoint":6839,"id":69,"parameterSlots":0,"returnSlots":0},"@_insert_327":{"entryPoint":7075,"id":327,"parameterSlots":1,"returnSlots":1},"@_transact_1156":{"entryPoint":6993,"id":1156,"parameterSlots":1,"returnSlots":1},"@depositVerifier_673":{"entryPoint":1129,"id":673,"parameterSlots":0,"returnSlots":0},"@deposit_867":{"entryPoint":2110,"id":867,"parameterSlots":6,"returnSlots":1},"@filledSubtrees_78":{"entryPoint":6911,"id":78,"parameterSlots":0,"returnSlots":0},"@finalizeVerifier_682":{"entryPoint":1091,"id":682,"parameterSlots":0,"returnSlots":0},"@finalize_1140":{"entryPoint":3707,"id":1140,"parameterSlots":4,"returnSlots":0},"@hashLeftRight_223":{"entryPoint":3161,"id":223,"parameterSlots":3,"returnSlots":1},"@hasher_72":{"entryPoint":6875,"id":72,"parameterSlots":0,"returnSlots":0},"@levels_74":{"entryPoint":1251,"id":74,"parameterSlots":0,"returnSlots":0},"@modelInput_685":{"entryPoint":1203,"id":685,"parameterSlots":0,"returnSlots":0},"@nextIndex_83":{"entryPoint":6935,"id":83,"parameterSlots":0,"returnSlots":0},"@nodeStatusPool_690":{"entryPoint":2078,"id":690,"parameterSlots":0,"returnSlots":0},"@root_80":{"entryPoint":6833,"id":80,"parameterSlots":0,"returnSlots":0},"@swapVerifier_679":{"entryPoint":3123,"id":679,"parameterSlots":0,"returnSlots":0},"@transact_1068":{"entryPoint":1380,"id":1068,"parameterSlots":4,"returnSlots":0},"@transactionResults_695":{"entryPoint":1271,"id":695,"parameterSlots":0,"returnSlots":0},"@withdrawVerifier_676":{"entryPoint":3085,"id":676,"parameterSlots":0,"returnSlots":0},"@withdraw_982":{"entryPoint":4226,"id":982,"parameterSlots":6,"returnSlots":0},"@zeros_628":{"entryPoint":5138,"id":628,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8782,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":10419,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":8107,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":10610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":8349,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_contract$_IHasher_$63":{"entryPoint":9118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_ModelOutput_$648_calldata_ptr":{"entryPoint":8303,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint248":{"entryPoint":9687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":11439,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":9555,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":10440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":8128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":10631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes32t_bytes_calldata_ptr":{"entryPoint":9264,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32t_struct$_ModelOutput_$648_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":8435,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32t_uint256t_uint256t_addresst_bytes_calldata_ptr":{"entryPoint":8803,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_contract$_IHasher_$63t_bytes32t_bytes32":{"entryPoint":9139,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint248":{"entryPoint":9708,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9380,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":11460,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint8":{"entryPoint":9576,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":10116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":11074,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":11616,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$4_memory_ptr_to_t_array$_t_uint256_$4_memory_ptr_fromStack":{"entryPoint":10153,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack":{"entryPoint":10829,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":9222,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":10289,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_contract$_ERC20_$4386_to_t_address_fromStack":{"entryPoint":7964,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IDepositVerifier_$13_to_t_address_fromStack":{"entryPoint":7852,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IFinalizeVerifier_$49_to_t_address_fromStack":{"entryPoint":7792,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IHasher_$63_to_t_address_fromStack":{"entryPoint":9443,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ISwapVerifier_$37_to_t_address_fromStack":{"entryPoint":9035,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IWithdrawVerifier_$25_to_t_address_fromStack":{"entryPoint":8975,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_NodeStatus_$655_to_t_uint8_fromStack":{"entryPoint":8655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983_to_t_string_memory_ptr_fromStack":{"entryPoint":12010,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367_to_t_string_memory_ptr_fromStack":{"entryPoint":11902,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e_to_t_string_memory_ptr_fromStack":{"entryPoint":11185,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69_to_t_string_memory_ptr_fromStack":{"entryPoint":10717,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e_to_t_string_memory_ptr_fromStack":{"entryPoint":11331,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282_to_t_string_memory_ptr_fromStack":{"entryPoint":11007,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6_to_t_string_memory_ptr_fromStack":{"entryPoint":10543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9_to_t_string_memory_ptr_fromStack":{"entryPoint":11794,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack":{"entryPoint":12118,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f_to_t_string_memory_ptr_fromStack":{"entryPoint":12665,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint120_to_t_uint120_fromStack":{"entryPoint":8228,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint248_to_t_uint248_nonPadded_inplace_fromStack":{"entryPoint":9838,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10101,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7904,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":8022,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8186,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack":{"entryPoint":9784,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_uint8_t_uint248__to_t_uint8_t_uint248__nonPadded_inplace_fromStack_reversed":{"entryPoint":9861,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":11089,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr_t_bytes_calldata_ptr__to_t_array$_t_uint256_$3_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11703,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$4_memory_ptr_t_bytes_calldata_ptr__to_t_array$_t_uint256_$4_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10334,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr_t_bytes_calldata_ptr__to_t_array$_t_uint256_$5_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10916,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":9237,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ERC20_$4386__to_t_address__fromStack_reversed":{"entryPoint":7979,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IDepositVerifier_$13__to_t_address__fromStack_reversed":{"entryPoint":7867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IFinalizeVerifier_$49__to_t_address__fromStack_reversed":{"entryPoint":7807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IHasher_$63__to_t_address__fromStack_reversed":{"entryPoint":9458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ISwapVerifier_$37__to_t_address__fromStack_reversed":{"entryPoint":9050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IWithdrawVerifier_$25__to_t_address__fromStack_reversed":{"entryPoint":8990,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_NodeStatus_$655__to_t_uint8__fromStack_reversed":{"entryPoint":8670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12045,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11937,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11220,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10752,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11366,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11042,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10578,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11829,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12153,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7919,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11398,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":8037,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8_t_uint120_t_uint120__to_t_uint8_t_uint120_t_uint120__fromStack_reversed":{"entryPoint":8243,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":11593,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$4_memory_ptr":{"entryPoint":10091,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$5_memory_ptr":{"entryPoint":10806,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":9916,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":11571,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$4_memory_ptr":{"entryPoint":10069,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$5_memory_ptr":{"entryPoint":10784,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":9905,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":11603,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$4_memory_ptr":{"entryPoint":10140,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$5_memory_ptr":{"entryPoint":10816,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":11582,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$4_memory_ptr_fromStack":{"entryPoint":10080,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack":{"entryPoint":10795,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":10240,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10485,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint32":{"entryPoint":12874,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint32":{"entryPoint":12781,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":12245,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint32_t_uint32":{"entryPoint":12539,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":12328,"id":null,"parameterSlots":3,"returnSlots":1},"cleanup_t_address":{"entryPoint":8741,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10384,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":8074,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IHasher_$63":{"entryPoint":9077,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_NodeStatus_$655":{"entryPoint":8618,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint120":{"entryPoint":8201,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7680,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint248":{"entryPoint":9621,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7894,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":8006,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8173,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":9966,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ERC20_$4386_to_t_address":{"entryPoint":7946,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IDepositVerifier_$13_to_t_address":{"entryPoint":7834,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IFinalizeVerifier_$49_to_t_address":{"entryPoint":7774,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IHasher_$63_to_t_address":{"entryPoint":9425,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ISwapVerifier_$37_to_t_address":{"entryPoint":9017,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IWithdrawVerifier_$25_to_t_address":{"entryPoint":8957,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_NodeStatus_$655_to_t_uint8":{"entryPoint":8637,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":7756,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":7722,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":10257,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":7712,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint32":{"entryPoint":12830,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint248":{"entryPoint":9820,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint8":{"entryPoint":9766,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint32":{"entryPoint":12732,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":12185,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11524,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":8551,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9485,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_bytes32":{"entryPoint":9932,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":8339,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8334,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":8298,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":8344,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8069,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8064,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10272,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_248":{"entryPoint":9753,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_8":{"entryPoint":9807,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":9953,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":12232,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983":{"entryPoint":11969,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367":{"entryPoint":11861,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e":{"entryPoint":11144,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69":{"entryPoint":10676,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e":{"entryPoint":11252,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282":{"entryPoint":10966,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6":{"entryPoint":10502,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9":{"entryPoint":11753,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367":{"entryPoint":12077,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f":{"entryPoint":12586,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_NodeStatus_$655":{"entryPoint":8598,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8759,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10396,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8084,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IHasher_$63":{"entryPoint":9095,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint248":{"entryPoint":9664,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8697,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":9532,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:40753:26","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:26","statements":[{"nodeType":"YulAssignment","src":"62:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:26"},"nodeType":"YulFunctionCall","src":"73:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:26","type":""}],"src":"7:126:26"},{"body":{"nodeType":"YulBlock","src":"171:28:26","statements":[{"nodeType":"YulAssignment","src":"181:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"188:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"181:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"157:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"167:3:26","type":""}],"src":"139:60:26"},{"body":{"nodeType":"YulBlock","src":"265:82:26","statements":[{"nodeType":"YulAssignment","src":"275:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"333:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"315:17:26"},"nodeType":"YulFunctionCall","src":"315:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"306:8:26"},"nodeType":"YulFunctionCall","src":"306:34:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"288:17:26"},"nodeType":"YulFunctionCall","src":"288:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"275:9:26"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"245:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"255:9:26","type":""}],"src":"205:142:26"},{"body":{"nodeType":"YulBlock","src":"413:66:26","statements":[{"nodeType":"YulAssignment","src":"423:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"467:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"436:30:26"},"nodeType":"YulFunctionCall","src":"436:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"423:9:26"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"393:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"403:9:26","type":""}],"src":"353:126:26"},{"body":{"nodeType":"YulBlock","src":"569:66:26","statements":[{"nodeType":"YulAssignment","src":"579:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"623:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"592:30:26"},"nodeType":"YulFunctionCall","src":"592:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"579:9:26"}]}]},"name":"convert_t_contract$_IFinalizeVerifier_$49_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"549:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"559:9:26","type":""}],"src":"485:150:26"},{"body":{"nodeType":"YulBlock","src":"730:90:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"747:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"807:5:26"}],"functionName":{"name":"convert_t_contract$_IFinalizeVerifier_$49_to_t_address","nodeType":"YulIdentifier","src":"752:54:26"},"nodeType":"YulFunctionCall","src":"752:61:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"740:6:26"},"nodeType":"YulFunctionCall","src":"740:74:26"},"nodeType":"YulExpressionStatement","src":"740:74:26"}]},"name":"abi_encode_t_contract$_IFinalizeVerifier_$49_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"718:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"725:3:26","type":""}],"src":"641:179:26"},{"body":{"nodeType":"YulBlock","src":"948:148:26","statements":[{"nodeType":"YulAssignment","src":"958:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"970:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"966:3:26"},"nodeType":"YulFunctionCall","src":"966:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"958:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1062:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1075:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1086:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1071:3:26"},"nodeType":"YulFunctionCall","src":"1071:17:26"}],"functionName":{"name":"abi_encode_t_contract$_IFinalizeVerifier_$49_to_t_address_fromStack","nodeType":"YulIdentifier","src":"994:67:26"},"nodeType":"YulFunctionCall","src":"994:95:26"},"nodeType":"YulExpressionStatement","src":"994:95:26"}]},"name":"abi_encode_tuple_t_contract$_IFinalizeVerifier_$49__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"920:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"932:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"943:4:26","type":""}],"src":"826:270:26"},{"body":{"nodeType":"YulBlock","src":"1185:66:26","statements":[{"nodeType":"YulAssignment","src":"1195:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1239:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"1208:30:26"},"nodeType":"YulFunctionCall","src":"1208:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1195:9:26"}]}]},"name":"convert_t_contract$_IDepositVerifier_$13_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1165:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1175:9:26","type":""}],"src":"1102:149:26"},{"body":{"nodeType":"YulBlock","src":"1345:89:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1362:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1421:5:26"}],"functionName":{"name":"convert_t_contract$_IDepositVerifier_$13_to_t_address","nodeType":"YulIdentifier","src":"1367:53:26"},"nodeType":"YulFunctionCall","src":"1367:60:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1355:6:26"},"nodeType":"YulFunctionCall","src":"1355:73:26"},"nodeType":"YulExpressionStatement","src":"1355:73:26"}]},"name":"abi_encode_t_contract$_IDepositVerifier_$13_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1333:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1340:3:26","type":""}],"src":"1257:177:26"},{"body":{"nodeType":"YulBlock","src":"1561:147:26","statements":[{"nodeType":"YulAssignment","src":"1571:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1583:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1594:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1579:3:26"},"nodeType":"YulFunctionCall","src":"1579:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1571:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1674:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1687:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1698:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1683:3:26"},"nodeType":"YulFunctionCall","src":"1683:17:26"}],"functionName":{"name":"abi_encode_t_contract$_IDepositVerifier_$13_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1607:66:26"},"nodeType":"YulFunctionCall","src":"1607:94:26"},"nodeType":"YulExpressionStatement","src":"1607:94:26"}]},"name":"abi_encode_tuple_t_contract$_IDepositVerifier_$13__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1533:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1545:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1556:4:26","type":""}],"src":"1440:268:26"},{"body":{"nodeType":"YulBlock","src":"1759:32:26","statements":[{"nodeType":"YulAssignment","src":"1769:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1780:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1769:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1741:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1751:7:26","type":""}],"src":"1714:77:26"},{"body":{"nodeType":"YulBlock","src":"1862:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1879:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1902:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1884:17:26"},"nodeType":"YulFunctionCall","src":"1884:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1872:6:26"},"nodeType":"YulFunctionCall","src":"1872:37:26"},"nodeType":"YulExpressionStatement","src":"1872:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1850:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1857:3:26","type":""}],"src":"1797:118:26"},{"body":{"nodeType":"YulBlock","src":"2019:124:26","statements":[{"nodeType":"YulAssignment","src":"2029:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2041:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2052:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2037:3:26"},"nodeType":"YulFunctionCall","src":"2037:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2029:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2109:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2122:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2133:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:26"},"nodeType":"YulFunctionCall","src":"2118:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2065:43:26"},"nodeType":"YulFunctionCall","src":"2065:71:26"},"nodeType":"YulExpressionStatement","src":"2065:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1991:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2003:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2014:4:26","type":""}],"src":"1921:222:26"},{"body":{"nodeType":"YulBlock","src":"2223:66:26","statements":[{"nodeType":"YulAssignment","src":"2233:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2277:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"2246:30:26"},"nodeType":"YulFunctionCall","src":"2246:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2233:9:26"}]}]},"name":"convert_t_contract$_ERC20_$4386_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2203:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2213:9:26","type":""}],"src":"2149:140:26"},{"body":{"nodeType":"YulBlock","src":"2374:80:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2391:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2441:5:26"}],"functionName":{"name":"convert_t_contract$_ERC20_$4386_to_t_address","nodeType":"YulIdentifier","src":"2396:44:26"},"nodeType":"YulFunctionCall","src":"2396:51:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2384:6:26"},"nodeType":"YulFunctionCall","src":"2384:64:26"},"nodeType":"YulExpressionStatement","src":"2384:64:26"}]},"name":"abi_encode_t_contract$_ERC20_$4386_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2362:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2369:3:26","type":""}],"src":"2295:159:26"},{"body":{"nodeType":"YulBlock","src":"2572:138:26","statements":[{"nodeType":"YulAssignment","src":"2582:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2594:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2605:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2590:3:26"},"nodeType":"YulFunctionCall","src":"2590:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2582:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2676:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2689:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2700:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2685:3:26"},"nodeType":"YulFunctionCall","src":"2685:17:26"}],"functionName":{"name":"abi_encode_t_contract$_ERC20_$4386_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2618:57:26"},"nodeType":"YulFunctionCall","src":"2618:85:26"},"nodeType":"YulExpressionStatement","src":"2618:85:26"}]},"name":"abi_encode_tuple_t_contract$_ERC20_$4386__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2544:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2556:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2567:4:26","type":""}],"src":"2460:250:26"},{"body":{"nodeType":"YulBlock","src":"2760:49:26","statements":[{"nodeType":"YulAssignment","src":"2770:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2785:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2792:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2781:3:26"},"nodeType":"YulFunctionCall","src":"2781:22:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2770:7:26"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2742:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2752:7:26","type":""}],"src":"2716:93:26"},{"body":{"nodeType":"YulBlock","src":"2878:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2895:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2917:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"2900:16:26"},"nodeType":"YulFunctionCall","src":"2900:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2888:6:26"},"nodeType":"YulFunctionCall","src":"2888:36:26"},"nodeType":"YulExpressionStatement","src":"2888:36:26"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2866:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2873:3:26","type":""}],"src":"2815:115:26"},{"body":{"nodeType":"YulBlock","src":"3032:122:26","statements":[{"nodeType":"YulAssignment","src":"3042:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3054:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3065:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3050:3:26"},"nodeType":"YulFunctionCall","src":"3050:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3042:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3120:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3133:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3144:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3129:3:26"},"nodeType":"YulFunctionCall","src":"3129:17:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"3078:41:26"},"nodeType":"YulFunctionCall","src":"3078:69:26"},"nodeType":"YulExpressionStatement","src":"3078:69:26"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3004:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3016:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3027:4:26","type":""}],"src":"2936:218:26"},{"body":{"nodeType":"YulBlock","src":"3200:35:26","statements":[{"nodeType":"YulAssignment","src":"3210:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3226:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3220:5:26"},"nodeType":"YulFunctionCall","src":"3220:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3210:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3193:6:26","type":""}],"src":"3160:75:26"},{"body":{"nodeType":"YulBlock","src":"3330:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3347:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3350:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3340:6:26"},"nodeType":"YulFunctionCall","src":"3340:12:26"},"nodeType":"YulExpressionStatement","src":"3340:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3241:117:26"},{"body":{"nodeType":"YulBlock","src":"3453:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3470:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3473:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3463:6:26"},"nodeType":"YulFunctionCall","src":"3463:12:26"},"nodeType":"YulExpressionStatement","src":"3463:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3364:117:26"},{"body":{"nodeType":"YulBlock","src":"3532:32:26","statements":[{"nodeType":"YulAssignment","src":"3542:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"3553:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3542:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3514:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3524:7:26","type":""}],"src":"3487:77:26"},{"body":{"nodeType":"YulBlock","src":"3613:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"3670:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3679:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3682:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3672:6:26"},"nodeType":"YulFunctionCall","src":"3672:12:26"},"nodeType":"YulExpressionStatement","src":"3672:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3636:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3661:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3643:17:26"},"nodeType":"YulFunctionCall","src":"3643:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3633:2:26"},"nodeType":"YulFunctionCall","src":"3633:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3626:6:26"},"nodeType":"YulFunctionCall","src":"3626:43:26"},"nodeType":"YulIf","src":"3623:63:26"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3606:5:26","type":""}],"src":"3570:122:26"},{"body":{"nodeType":"YulBlock","src":"3750:87:26","statements":[{"nodeType":"YulAssignment","src":"3760:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3782:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3769:12:26"},"nodeType":"YulFunctionCall","src":"3769:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3760:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3825:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"3798:26:26"},"nodeType":"YulFunctionCall","src":"3798:33:26"},"nodeType":"YulExpressionStatement","src":"3798:33:26"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3728:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3736:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3744:5:26","type":""}],"src":"3698:139:26"},{"body":{"nodeType":"YulBlock","src":"3909:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"3955:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3957:77:26"},"nodeType":"YulFunctionCall","src":"3957:79:26"},"nodeType":"YulExpressionStatement","src":"3957:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3930:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3939:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3926:3:26"},"nodeType":"YulFunctionCall","src":"3926:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3951:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3922:3:26"},"nodeType":"YulFunctionCall","src":"3922:32:26"},"nodeType":"YulIf","src":"3919:119:26"},{"nodeType":"YulBlock","src":"4048:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4063:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4077:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4067:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4092:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4127:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4138:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4123:3:26"},"nodeType":"YulFunctionCall","src":"4123:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4147:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4102:20:26"},"nodeType":"YulFunctionCall","src":"4102:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4092:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3879:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3890:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3902:6:26","type":""}],"src":"3843:329:26"},{"body":{"nodeType":"YulBlock","src":"4221:43:26","statements":[{"nodeType":"YulAssignment","src":"4231:27:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4246:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4253:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4242:3:26"},"nodeType":"YulFunctionCall","src":"4242:16:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4231:7:26"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4203:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4213:7:26","type":""}],"src":"4178:86:26"},{"body":{"nodeType":"YulBlock","src":"4331:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4348:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4369:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4353:15:26"},"nodeType":"YulFunctionCall","src":"4353:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4341:6:26"},"nodeType":"YulFunctionCall","src":"4341:35:26"},"nodeType":"YulExpressionStatement","src":"4341:35:26"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4319:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4326:3:26","type":""}],"src":"4270:112:26"},{"body":{"nodeType":"YulBlock","src":"4433:71:26","statements":[{"nodeType":"YulAssignment","src":"4443:55:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4458:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4465:32:26","type":"","value":"0xffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4454:3:26"},"nodeType":"YulFunctionCall","src":"4454:44:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4443:7:26"}]}]},"name":"cleanup_t_uint120","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4415:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4425:7:26","type":""}],"src":"4388:116:26"},{"body":{"nodeType":"YulBlock","src":"4575:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4592:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4615:5:26"}],"functionName":{"name":"cleanup_t_uint120","nodeType":"YulIdentifier","src":"4597:17:26"},"nodeType":"YulFunctionCall","src":"4597:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4585:6:26"},"nodeType":"YulFunctionCall","src":"4585:37:26"},"nodeType":"YulExpressionStatement","src":"4585:37:26"}]},"name":"abi_encode_t_uint120_to_t_uint120_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4563:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4570:3:26","type":""}],"src":"4510:118:26"},{"body":{"nodeType":"YulBlock","src":"4784:284:26","statements":[{"nodeType":"YulAssignment","src":"4794:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4806:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4817:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4802:3:26"},"nodeType":"YulFunctionCall","src":"4802:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4794:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4870:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4883:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4894:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4879:3:26"},"nodeType":"YulFunctionCall","src":"4879:17:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4830:39:26"},"nodeType":"YulFunctionCall","src":"4830:67:26"},"nodeType":"YulExpressionStatement","src":"4830:67:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4951:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4964:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4975:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4960:3:26"},"nodeType":"YulFunctionCall","src":"4960:18:26"}],"functionName":{"name":"abi_encode_t_uint120_to_t_uint120_fromStack","nodeType":"YulIdentifier","src":"4907:43:26"},"nodeType":"YulFunctionCall","src":"4907:72:26"},"nodeType":"YulExpressionStatement","src":"4907:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5033:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5046:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5057:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5042:3:26"},"nodeType":"YulFunctionCall","src":"5042:18:26"}],"functionName":{"name":"abi_encode_t_uint120_to_t_uint120_fromStack","nodeType":"YulIdentifier","src":"4989:43:26"},"nodeType":"YulFunctionCall","src":"4989:72:26"},"nodeType":"YulExpressionStatement","src":"4989:72:26"}]},"name":"abi_encode_tuple_t_uint8_t_uint120_t_uint120__to_t_uint8_t_uint120_t_uint120__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4740:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4752:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4760:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4768:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4779:4:26","type":""}],"src":"4634:434:26"},{"body":{"nodeType":"YulBlock","src":"5163:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5180:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5183:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5173:6:26"},"nodeType":"YulFunctionCall","src":"5173:12:26"},"nodeType":"YulExpressionStatement","src":"5173:12:26"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"5074:117:26"},{"body":{"nodeType":"YulBlock","src":"5305:152:26","statements":[{"body":{"nodeType":"YulBlock","src":"5344:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"5346:77:26"},"nodeType":"YulFunctionCall","src":"5346:79:26"},"nodeType":"YulExpressionStatement","src":"5346:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5326:3:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5331:6:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5322:3:26"},"nodeType":"YulFunctionCall","src":"5322:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"5340:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5318:3:26"},"nodeType":"YulFunctionCall","src":"5318:25:26"},"nodeType":"YulIf","src":"5315:112:26"},{"nodeType":"YulAssignment","src":"5436:15:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"5445:6:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5436:5:26"}]}]},"name":"abi_decode_t_struct$_ModelOutput_$648_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5283:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"5291:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5299:5:26","type":""}],"src":"5223:234:26"},{"body":{"nodeType":"YulBlock","src":"5552:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5569:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5572:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5562:6:26"},"nodeType":"YulFunctionCall","src":"5562:12:26"},"nodeType":"YulExpressionStatement","src":"5562:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5463:117:26"},{"body":{"nodeType":"YulBlock","src":"5675:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5692:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5695:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5685:6:26"},"nodeType":"YulFunctionCall","src":"5685:12:26"},"nodeType":"YulExpressionStatement","src":"5685:12:26"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"5586:117:26"},{"body":{"nodeType":"YulBlock","src":"5798:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5815:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5818:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5808:6:26"},"nodeType":"YulFunctionCall","src":"5808:12:26"},"nodeType":"YulExpressionStatement","src":"5808:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5709:117:26"},{"body":{"nodeType":"YulBlock","src":"5919:478:26","statements":[{"body":{"nodeType":"YulBlock","src":"5968:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5970:77:26"},"nodeType":"YulFunctionCall","src":"5970:79:26"},"nodeType":"YulExpressionStatement","src":"5970:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5947:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5955:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5943:3:26"},"nodeType":"YulFunctionCall","src":"5943:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"5962:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5939:3:26"},"nodeType":"YulFunctionCall","src":"5939:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5932:6:26"},"nodeType":"YulFunctionCall","src":"5932:35:26"},"nodeType":"YulIf","src":"5929:122:26"},{"nodeType":"YulAssignment","src":"6060:30:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6083:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6070:12:26"},"nodeType":"YulFunctionCall","src":"6070:20:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6060:6:26"}]},{"body":{"nodeType":"YulBlock","src":"6133:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6135:77:26"},"nodeType":"YulFunctionCall","src":"6135:79:26"},"nodeType":"YulExpressionStatement","src":"6135:79:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6105:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6113:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6102:2:26"},"nodeType":"YulFunctionCall","src":"6102:30:26"},"nodeType":"YulIf","src":"6099:117:26"},{"nodeType":"YulAssignment","src":"6225:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6241:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6249:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6237:3:26"},"nodeType":"YulFunctionCall","src":"6237:17:26"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6225:8:26"}]},{"body":{"nodeType":"YulBlock","src":"6308:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6310:77:26"},"nodeType":"YulFunctionCall","src":"6310:79:26"},"nodeType":"YulExpressionStatement","src":"6310:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6273:8:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6287:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6295:4:26","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6283:3:26"},"nodeType":"YulFunctionCall","src":"6283:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6269:3:26"},"nodeType":"YulFunctionCall","src":"6269:32:26"},{"name":"end","nodeType":"YulIdentifier","src":"6303:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6266:2:26"},"nodeType":"YulFunctionCall","src":"6266:41:26"},"nodeType":"YulIf","src":"6263:128:26"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5886:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"5894:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"5902:8:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"5912:6:26","type":""}],"src":"5845:552:26"},{"body":{"nodeType":"YulBlock","src":"6552:729:26","statements":[{"body":{"nodeType":"YulBlock","src":"6599:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6601:77:26"},"nodeType":"YulFunctionCall","src":"6601:79:26"},"nodeType":"YulExpressionStatement","src":"6601:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6573:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6582:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6569:3:26"},"nodeType":"YulFunctionCall","src":"6569:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6594:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6565:3:26"},"nodeType":"YulFunctionCall","src":"6565:33:26"},"nodeType":"YulIf","src":"6562:120:26"},{"nodeType":"YulBlock","src":"6692:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6707:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6721:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6711:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6736:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6771:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6782:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6767:3:26"},"nodeType":"YulFunctionCall","src":"6767:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6791:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6746:20:26"},"nodeType":"YulFunctionCall","src":"6746:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6736:6:26"}]}]},{"nodeType":"YulBlock","src":"6819:148:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6834:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6848:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6838:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6864:93:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6929:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6940:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:26"},"nodeType":"YulFunctionCall","src":"6925:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6949:7:26"}],"functionName":{"name":"abi_decode_t_struct$_ModelOutput_$648_calldata_ptr","nodeType":"YulIdentifier","src":"6874:50:26"},"nodeType":"YulFunctionCall","src":"6874:83:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6864:6:26"}]}]},{"nodeType":"YulBlock","src":"6977:297:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6992:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7023:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7034:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7019:3:26"},"nodeType":"YulFunctionCall","src":"7019:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7006:12:26"},"nodeType":"YulFunctionCall","src":"7006:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6996:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7085:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7087:77:26"},"nodeType":"YulFunctionCall","src":"7087:79:26"},"nodeType":"YulExpressionStatement","src":"7087:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7057:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7065:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7054:2:26"},"nodeType":"YulFunctionCall","src":"7054:30:26"},"nodeType":"YulIf","src":"7051:117:26"},{"nodeType":"YulAssignment","src":"7182:82:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7236:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7247:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7232:3:26"},"nodeType":"YulFunctionCall","src":"7232:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7256:7:26"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"7200:31:26"},"nodeType":"YulFunctionCall","src":"7200:64:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7182:6:26"},{"name":"value3","nodeType":"YulIdentifier","src":"7190:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_struct$_ModelOutput_$648_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6498:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6509:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6521:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6529:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6537:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6545:6:26","type":""}],"src":"6403:878:26"},{"body":{"nodeType":"YulBlock","src":"7315:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7332:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7335:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7325:6:26"},"nodeType":"YulFunctionCall","src":"7325:88:26"},"nodeType":"YulExpressionStatement","src":"7325:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7429:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7432:4:26","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7422:6:26"},"nodeType":"YulFunctionCall","src":"7422:15:26"},"nodeType":"YulExpressionStatement","src":"7422:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7453:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7456:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7446:6:26"},"nodeType":"YulFunctionCall","src":"7446:15:26"},"nodeType":"YulExpressionStatement","src":"7446:15:26"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"7287:180:26"},{"body":{"nodeType":"YulBlock","src":"7530:62:26","statements":[{"body":{"nodeType":"YulBlock","src":"7564:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"7566:16:26"},"nodeType":"YulFunctionCall","src":"7566:18:26"},"nodeType":"YulExpressionStatement","src":"7566:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7553:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7560:1:26","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7550:2:26"},"nodeType":"YulFunctionCall","src":"7550:12:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7543:6:26"},"nodeType":"YulFunctionCall","src":"7543:20:26"},"nodeType":"YulIf","src":"7540:46:26"}]},"name":"validator_assert_t_enum$_NodeStatus_$655","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7523:5:26","type":""}],"src":"7473:119:26"},{"body":{"nodeType":"YulBlock","src":"7657:80:26","statements":[{"nodeType":"YulAssignment","src":"7667:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"7678:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7667:7:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7725:5:26"}],"functionName":{"name":"validator_assert_t_enum$_NodeStatus_$655","nodeType":"YulIdentifier","src":"7684:40:26"},"nodeType":"YulFunctionCall","src":"7684:47:26"},"nodeType":"YulExpressionStatement","src":"7684:47:26"}]},"name":"cleanup_t_enum$_NodeStatus_$655","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7639:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7649:7:26","type":""}],"src":"7598:139:26"},{"body":{"nodeType":"YulBlock","src":"7815:67:26","statements":[{"nodeType":"YulAssignment","src":"7825:51:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7870:5:26"}],"functionName":{"name":"cleanup_t_enum$_NodeStatus_$655","nodeType":"YulIdentifier","src":"7838:31:26"},"nodeType":"YulFunctionCall","src":"7838:38:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7825:9:26"}]}]},"name":"convert_t_enum$_NodeStatus_$655_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7795:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7805:9:26","type":""}],"src":"7743:139:26"},{"body":{"nodeType":"YulBlock","src":"7965:78:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7982:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8030:5:26"}],"functionName":{"name":"convert_t_enum$_NodeStatus_$655_to_t_uint8","nodeType":"YulIdentifier","src":"7987:42:26"},"nodeType":"YulFunctionCall","src":"7987:49:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7975:6:26"},"nodeType":"YulFunctionCall","src":"7975:62:26"},"nodeType":"YulExpressionStatement","src":"7975:62:26"}]},"name":"abi_encode_t_enum$_NodeStatus_$655_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7953:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7960:3:26","type":""}],"src":"7888:155:26"},{"body":{"nodeType":"YulBlock","src":"8159:136:26","statements":[{"nodeType":"YulAssignment","src":"8169:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8181:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8192:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8177:3:26"},"nodeType":"YulFunctionCall","src":"8177:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8169:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8261:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8274:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8285:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8270:3:26"},"nodeType":"YulFunctionCall","src":"8270:17:26"}],"functionName":{"name":"abi_encode_t_enum$_NodeStatus_$655_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"8205:55:26"},"nodeType":"YulFunctionCall","src":"8205:83:26"},"nodeType":"YulExpressionStatement","src":"8205:83:26"}]},"name":"abi_encode_tuple_t_enum$_NodeStatus_$655__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8131:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8143:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8154:4:26","type":""}],"src":"8049:246:26"},{"body":{"nodeType":"YulBlock","src":"8344:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"8401:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8410:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8413:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8403:6:26"},"nodeType":"YulFunctionCall","src":"8403:12:26"},"nodeType":"YulExpressionStatement","src":"8403:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8367:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8392:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8374:17:26"},"nodeType":"YulFunctionCall","src":"8374:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8364:2:26"},"nodeType":"YulFunctionCall","src":"8364:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8357:6:26"},"nodeType":"YulFunctionCall","src":"8357:43:26"},"nodeType":"YulIf","src":"8354:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8337:5:26","type":""}],"src":"8301:122:26"},{"body":{"nodeType":"YulBlock","src":"8481:87:26","statements":[{"nodeType":"YulAssignment","src":"8491:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8513:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8500:12:26"},"nodeType":"YulFunctionCall","src":"8500:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8491:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8556:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"8529:26:26"},"nodeType":"YulFunctionCall","src":"8529:33:26"},"nodeType":"YulExpressionStatement","src":"8529:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8459:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8467:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8475:5:26","type":""}],"src":"8429:139:26"},{"body":{"nodeType":"YulBlock","src":"8619:51:26","statements":[{"nodeType":"YulAssignment","src":"8629:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8658:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8640:17:26"},"nodeType":"YulFunctionCall","src":"8640:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8629:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8601:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8611:7:26","type":""}],"src":"8574:96:26"},{"body":{"nodeType":"YulBlock","src":"8719:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"8776:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8785:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8788:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8778:6:26"},"nodeType":"YulFunctionCall","src":"8778:12:26"},"nodeType":"YulExpressionStatement","src":"8778:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8742:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8767:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8749:17:26"},"nodeType":"YulFunctionCall","src":"8749:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8739:2:26"},"nodeType":"YulFunctionCall","src":"8739:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8732:6:26"},"nodeType":"YulFunctionCall","src":"8732:43:26"},"nodeType":"YulIf","src":"8729:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8712:5:26","type":""}],"src":"8676:122:26"},{"body":{"nodeType":"YulBlock","src":"8856:87:26","statements":[{"nodeType":"YulAssignment","src":"8866:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8888:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8875:12:26"},"nodeType":"YulFunctionCall","src":"8875:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8866:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8931:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"8904:26:26"},"nodeType":"YulFunctionCall","src":"8904:33:26"},"nodeType":"YulExpressionStatement","src":"8904:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8834:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8842:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8850:5:26","type":""}],"src":"8804:139:26"},{"body":{"nodeType":"YulBlock","src":"9102:956:26","statements":[{"body":{"nodeType":"YulBlock","src":"9149:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9151:77:26"},"nodeType":"YulFunctionCall","src":"9151:79:26"},"nodeType":"YulExpressionStatement","src":"9151:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9123:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9132:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9119:3:26"},"nodeType":"YulFunctionCall","src":"9119:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"9144:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9115:3:26"},"nodeType":"YulFunctionCall","src":"9115:33:26"},"nodeType":"YulIf","src":"9112:120:26"},{"nodeType":"YulBlock","src":"9242:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9257:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9271:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9261:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9286:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9321:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9332:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9317:3:26"},"nodeType":"YulFunctionCall","src":"9317:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9341:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"9296:20:26"},"nodeType":"YulFunctionCall","src":"9296:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9286:6:26"}]}]},{"nodeType":"YulBlock","src":"9369:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9384:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9398:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9388:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9414:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9449:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9460:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9445:3:26"},"nodeType":"YulFunctionCall","src":"9445:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9469:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9424:20:26"},"nodeType":"YulFunctionCall","src":"9424:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9414:6:26"}]}]},{"nodeType":"YulBlock","src":"9497:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9512:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9526:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9516:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9542:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9577:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9588:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9573:3:26"},"nodeType":"YulFunctionCall","src":"9573:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9597:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9552:20:26"},"nodeType":"YulFunctionCall","src":"9552:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9542:6:26"}]}]},{"nodeType":"YulBlock","src":"9625:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9640:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9654:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9644:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9670:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9705:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9716:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9701:3:26"},"nodeType":"YulFunctionCall","src":"9701:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9725:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9680:20:26"},"nodeType":"YulFunctionCall","src":"9680:53:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9670:6:26"}]}]},{"nodeType":"YulBlock","src":"9753:298:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9768:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9799:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9810:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9795:3:26"},"nodeType":"YulFunctionCall","src":"9795:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9782:12:26"},"nodeType":"YulFunctionCall","src":"9782:33:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9772:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9862:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9864:77:26"},"nodeType":"YulFunctionCall","src":"9864:79:26"},"nodeType":"YulExpressionStatement","src":"9864:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9834:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9842:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9831:2:26"},"nodeType":"YulFunctionCall","src":"9831:30:26"},"nodeType":"YulIf","src":"9828:117:26"},{"nodeType":"YulAssignment","src":"9959:82:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10013:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10024:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10009:3:26"},"nodeType":"YulFunctionCall","src":"10009:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10033:7:26"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"9977:31:26"},"nodeType":"YulFunctionCall","src":"9977:64:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9959:6:26"},{"name":"value5","nodeType":"YulIdentifier","src":"9967:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_uint256t_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9032:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9043:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9055:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9063:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9071:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9079:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9087:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9095:6:26","type":""}],"src":"8949:1109:26"},{"body":{"nodeType":"YulBlock","src":"10148:66:26","statements":[{"nodeType":"YulAssignment","src":"10158:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10202:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"10171:30:26"},"nodeType":"YulFunctionCall","src":"10171:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10158:9:26"}]}]},"name":"convert_t_contract$_IWithdrawVerifier_$25_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10128:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10138:9:26","type":""}],"src":"10064:150:26"},{"body":{"nodeType":"YulBlock","src":"10309:90:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10326:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10386:5:26"}],"functionName":{"name":"convert_t_contract$_IWithdrawVerifier_$25_to_t_address","nodeType":"YulIdentifier","src":"10331:54:26"},"nodeType":"YulFunctionCall","src":"10331:61:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10319:6:26"},"nodeType":"YulFunctionCall","src":"10319:74:26"},"nodeType":"YulExpressionStatement","src":"10319:74:26"}]},"name":"abi_encode_t_contract$_IWithdrawVerifier_$25_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10297:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10304:3:26","type":""}],"src":"10220:179:26"},{"body":{"nodeType":"YulBlock","src":"10527:148:26","statements":[{"nodeType":"YulAssignment","src":"10537:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10549:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10560:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10545:3:26"},"nodeType":"YulFunctionCall","src":"10545:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10537:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10641:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10654:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10665:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10650:3:26"},"nodeType":"YulFunctionCall","src":"10650:17:26"}],"functionName":{"name":"abi_encode_t_contract$_IWithdrawVerifier_$25_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10573:67:26"},"nodeType":"YulFunctionCall","src":"10573:95:26"},"nodeType":"YulExpressionStatement","src":"10573:95:26"}]},"name":"abi_encode_tuple_t_contract$_IWithdrawVerifier_$25__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10499:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10511:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10522:4:26","type":""}],"src":"10405:270:26"},{"body":{"nodeType":"YulBlock","src":"10761:66:26","statements":[{"nodeType":"YulAssignment","src":"10771:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10815:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"10784:30:26"},"nodeType":"YulFunctionCall","src":"10784:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10771:9:26"}]}]},"name":"convert_t_contract$_ISwapVerifier_$37_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10741:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10751:9:26","type":""}],"src":"10681:146:26"},{"body":{"nodeType":"YulBlock","src":"10918:86:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10935:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10991:5:26"}],"functionName":{"name":"convert_t_contract$_ISwapVerifier_$37_to_t_address","nodeType":"YulIdentifier","src":"10940:50:26"},"nodeType":"YulFunctionCall","src":"10940:57:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10928:6:26"},"nodeType":"YulFunctionCall","src":"10928:70:26"},"nodeType":"YulExpressionStatement","src":"10928:70:26"}]},"name":"abi_encode_t_contract$_ISwapVerifier_$37_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10906:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10913:3:26","type":""}],"src":"10833:171:26"},{"body":{"nodeType":"YulBlock","src":"11128:144:26","statements":[{"nodeType":"YulAssignment","src":"11138:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11150:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11161:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11146:3:26"},"nodeType":"YulFunctionCall","src":"11146:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11138:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11238:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11251:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11262:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11247:3:26"},"nodeType":"YulFunctionCall","src":"11247:17:26"}],"functionName":{"name":"abi_encode_t_contract$_ISwapVerifier_$37_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11174:63:26"},"nodeType":"YulFunctionCall","src":"11174:91:26"},"nodeType":"YulExpressionStatement","src":"11174:91:26"}]},"name":"abi_encode_tuple_t_contract$_ISwapVerifier_$37__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11100:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11112:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11123:4:26","type":""}],"src":"11010:262:26"},{"body":{"nodeType":"YulBlock","src":"11337:51:26","statements":[{"nodeType":"YulAssignment","src":"11347:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11376:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11358:17:26"},"nodeType":"YulFunctionCall","src":"11358:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11347:7:26"}]}]},"name":"cleanup_t_contract$_IHasher_$63","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11319:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11329:7:26","type":""}],"src":"11278:110:26"},{"body":{"nodeType":"YulBlock","src":"11451:93:26","statements":[{"body":{"nodeType":"YulBlock","src":"11522:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11531:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11534:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11524:6:26"},"nodeType":"YulFunctionCall","src":"11524:12:26"},"nodeType":"YulExpressionStatement","src":"11524:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11474:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11513:5:26"}],"functionName":{"name":"cleanup_t_contract$_IHasher_$63","nodeType":"YulIdentifier","src":"11481:31:26"},"nodeType":"YulFunctionCall","src":"11481:38:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11471:2:26"},"nodeType":"YulFunctionCall","src":"11471:49:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11464:6:26"},"nodeType":"YulFunctionCall","src":"11464:57:26"},"nodeType":"YulIf","src":"11461:77:26"}]},"name":"validator_revert_t_contract$_IHasher_$63","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11444:5:26","type":""}],"src":"11394:150:26"},{"body":{"nodeType":"YulBlock","src":"11616:101:26","statements":[{"nodeType":"YulAssignment","src":"11626:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11648:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11635:12:26"},"nodeType":"YulFunctionCall","src":"11635:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11626:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11705:5:26"}],"functionName":{"name":"validator_revert_t_contract$_IHasher_$63","nodeType":"YulIdentifier","src":"11664:40:26"},"nodeType":"YulFunctionCall","src":"11664:47:26"},"nodeType":"YulExpressionStatement","src":"11664:47:26"}]},"name":"abi_decode_t_contract$_IHasher_$63","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11594:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"11602:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11610:5:26","type":""}],"src":"11550:167:26"},{"body":{"nodeType":"YulBlock","src":"11837:533:26","statements":[{"body":{"nodeType":"YulBlock","src":"11883:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11885:77:26"},"nodeType":"YulFunctionCall","src":"11885:79:26"},"nodeType":"YulExpressionStatement","src":"11885:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11858:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"11867:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11854:3:26"},"nodeType":"YulFunctionCall","src":"11854:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"11879:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11850:3:26"},"nodeType":"YulFunctionCall","src":"11850:32:26"},"nodeType":"YulIf","src":"11847:119:26"},{"nodeType":"YulBlock","src":"11976:131:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11991:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"12005:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11995:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12020:77:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12069:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"12080:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12065:3:26"},"nodeType":"YulFunctionCall","src":"12065:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12089:7:26"}],"functionName":{"name":"abi_decode_t_contract$_IHasher_$63","nodeType":"YulIdentifier","src":"12030:34:26"},"nodeType":"YulFunctionCall","src":"12030:67:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12020:6:26"}]}]},{"nodeType":"YulBlock","src":"12117:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12132:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"12146:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12136:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12162:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12197:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"12208:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12193:3:26"},"nodeType":"YulFunctionCall","src":"12193:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12217:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12172:20:26"},"nodeType":"YulFunctionCall","src":"12172:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12162:6:26"}]}]},{"nodeType":"YulBlock","src":"12245:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12260:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"12274:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12264:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12290:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12325:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"12336:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12321:3:26"},"nodeType":"YulFunctionCall","src":"12321:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12345:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12300:20:26"},"nodeType":"YulFunctionCall","src":"12300:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12290:6:26"}]}]}]},"name":"abi_decode_tuple_t_contract$_IHasher_$63t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11791:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11802:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11814:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11822:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11830:6:26","type":""}],"src":"11723:647:26"},{"body":{"nodeType":"YulBlock","src":"12441:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12458:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12481:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"12463:17:26"},"nodeType":"YulFunctionCall","src":"12463:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12451:6:26"},"nodeType":"YulFunctionCall","src":"12451:37:26"},"nodeType":"YulExpressionStatement","src":"12451:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12429:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12436:3:26","type":""}],"src":"12376:118:26"},{"body":{"nodeType":"YulBlock","src":"12598:124:26","statements":[{"nodeType":"YulAssignment","src":"12608:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12620:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12631:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12616:3:26"},"nodeType":"YulFunctionCall","src":"12616:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12608:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12688:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12701:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12712:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12697:3:26"},"nodeType":"YulFunctionCall","src":"12697:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12644:43:26"},"nodeType":"YulFunctionCall","src":"12644:71:26"},"nodeType":"YulExpressionStatement","src":"12644:71:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12570:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12582:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12593:4:26","type":""}],"src":"12500:222:26"},{"body":{"nodeType":"YulBlock","src":"12847:698:26","statements":[{"body":{"nodeType":"YulBlock","src":"12893:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12895:77:26"},"nodeType":"YulFunctionCall","src":"12895:79:26"},"nodeType":"YulExpressionStatement","src":"12895:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12868:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"12877:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12864:3:26"},"nodeType":"YulFunctionCall","src":"12864:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"12889:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12860:3:26"},"nodeType":"YulFunctionCall","src":"12860:32:26"},"nodeType":"YulIf","src":"12857:119:26"},{"nodeType":"YulBlock","src":"12986:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13001:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13015:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13005:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13030:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13065:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"13076:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13061:3:26"},"nodeType":"YulFunctionCall","src":"13061:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13085:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13040:20:26"},"nodeType":"YulFunctionCall","src":"13040:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13030:6:26"}]}]},{"nodeType":"YulBlock","src":"13113:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13128:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13142:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13132:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13158:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13193:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"13204:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13189:3:26"},"nodeType":"YulFunctionCall","src":"13189:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13213:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13168:20:26"},"nodeType":"YulFunctionCall","src":"13168:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13158:6:26"}]}]},{"nodeType":"YulBlock","src":"13241:297:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13256:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13287:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13298:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13283:3:26"},"nodeType":"YulFunctionCall","src":"13283:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13270:12:26"},"nodeType":"YulFunctionCall","src":"13270:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13260:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"13349:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13351:77:26"},"nodeType":"YulFunctionCall","src":"13351:79:26"},"nodeType":"YulExpressionStatement","src":"13351:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13321:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13329:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13318:2:26"},"nodeType":"YulFunctionCall","src":"13318:30:26"},"nodeType":"YulIf","src":"13315:117:26"},{"nodeType":"YulAssignment","src":"13446:82:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13500:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"13511:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13496:3:26"},"nodeType":"YulFunctionCall","src":"13496:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13520:7:26"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"13464:31:26"},"nodeType":"YulFunctionCall","src":"13464:64:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13446:6:26"},{"name":"value3","nodeType":"YulIdentifier","src":"13454:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12793:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12804:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12816:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12824:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12832:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12840:6:26","type":""}],"src":"12728:817:26"},{"body":{"nodeType":"YulBlock","src":"13617:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"13663:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13665:77:26"},"nodeType":"YulFunctionCall","src":"13665:79:26"},"nodeType":"YulExpressionStatement","src":"13665:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13638:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13647:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13634:3:26"},"nodeType":"YulFunctionCall","src":"13634:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"13659:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13630:3:26"},"nodeType":"YulFunctionCall","src":"13630:32:26"},"nodeType":"YulIf","src":"13627:119:26"},{"nodeType":"YulBlock","src":"13756:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13771:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13785:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13775:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13800:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13835:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"13846:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13831:3:26"},"nodeType":"YulFunctionCall","src":"13831:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13855:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13810:20:26"},"nodeType":"YulFunctionCall","src":"13810:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13800:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13587:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13598:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13610:6:26","type":""}],"src":"13551:329:26"},{"body":{"nodeType":"YulBlock","src":"13960:66:26","statements":[{"nodeType":"YulAssignment","src":"13970:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14014:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"13983:30:26"},"nodeType":"YulFunctionCall","src":"13983:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13970:9:26"}]}]},"name":"convert_t_contract$_IHasher_$63_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13940:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13950:9:26","type":""}],"src":"13886:140:26"},{"body":{"nodeType":"YulBlock","src":"14111:80:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14128:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14178:5:26"}],"functionName":{"name":"convert_t_contract$_IHasher_$63_to_t_address","nodeType":"YulIdentifier","src":"14133:44:26"},"nodeType":"YulFunctionCall","src":"14133:51:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14121:6:26"},"nodeType":"YulFunctionCall","src":"14121:64:26"},"nodeType":"YulExpressionStatement","src":"14121:64:26"}]},"name":"abi_encode_t_contract$_IHasher_$63_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14099:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14106:3:26","type":""}],"src":"14032:159:26"},{"body":{"nodeType":"YulBlock","src":"14309:138:26","statements":[{"nodeType":"YulAssignment","src":"14319:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14331:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14342:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14327:3:26"},"nodeType":"YulFunctionCall","src":"14327:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14319:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14413:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14426:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14437:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14422:3:26"},"nodeType":"YulFunctionCall","src":"14422:17:26"}],"functionName":{"name":"abi_encode_t_contract$_IHasher_$63_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14355:57:26"},"nodeType":"YulFunctionCall","src":"14355:85:26"},"nodeType":"YulExpressionStatement","src":"14355:85:26"}]},"name":"abi_encode_tuple_t_contract$_IHasher_$63__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14281:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14293:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14304:4:26","type":""}],"src":"14197:250:26"},{"body":{"nodeType":"YulBlock","src":"14481:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14498:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14501:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14491:6:26"},"nodeType":"YulFunctionCall","src":"14491:88:26"},"nodeType":"YulExpressionStatement","src":"14491:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14595:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14598:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14588:6:26"},"nodeType":"YulFunctionCall","src":"14588:15:26"},"nodeType":"YulExpressionStatement","src":"14588:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14619:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14622:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14612:6:26"},"nodeType":"YulFunctionCall","src":"14612:15:26"},"nodeType":"YulExpressionStatement","src":"14612:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14453:180:26"},{"body":{"nodeType":"YulBlock","src":"14680:77:26","statements":[{"body":{"nodeType":"YulBlock","src":"14735:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14744:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14747:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14737:6:26"},"nodeType":"YulFunctionCall","src":"14737:12:26"},"nodeType":"YulExpressionStatement","src":"14737:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14703:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14726:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"14710:15:26"},"nodeType":"YulFunctionCall","src":"14710:22:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14700:2:26"},"nodeType":"YulFunctionCall","src":"14700:33:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14693:6:26"},"nodeType":"YulFunctionCall","src":"14693:41:26"},"nodeType":"YulIf","src":"14690:61:26"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14673:5:26","type":""}],"src":"14639:118:26"},{"body":{"nodeType":"YulBlock","src":"14813:85:26","statements":[{"nodeType":"YulAssignment","src":"14823:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14845:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14832:12:26"},"nodeType":"YulFunctionCall","src":"14832:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14823:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14886:5:26"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"14861:24:26"},"nodeType":"YulFunctionCall","src":"14861:31:26"},"nodeType":"YulExpressionStatement","src":"14861:31:26"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14791:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"14799:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14807:5:26","type":""}],"src":"14763:135:26"},{"body":{"nodeType":"YulBlock","src":"14968:261:26","statements":[{"body":{"nodeType":"YulBlock","src":"15014:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15016:77:26"},"nodeType":"YulFunctionCall","src":"15016:79:26"},"nodeType":"YulExpressionStatement","src":"15016:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14989:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14998:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14985:3:26"},"nodeType":"YulFunctionCall","src":"14985:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"15010:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14981:3:26"},"nodeType":"YulFunctionCall","src":"14981:32:26"},"nodeType":"YulIf","src":"14978:119:26"},{"nodeType":"YulBlock","src":"15107:115:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15122:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"15136:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15126:6:26","type":""}]},{"nodeType":"YulAssignment","src":"15151:61:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15184:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"15195:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15180:3:26"},"nodeType":"YulFunctionCall","src":"15180:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15204:7:26"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"15161:18:26"},"nodeType":"YulFunctionCall","src":"15161:51:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15151:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14938:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14949:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14961:6:26","type":""}],"src":"14904:325:26"},{"body":{"nodeType":"YulBlock","src":"15280:103:26","statements":[{"nodeType":"YulAssignment","src":"15290:87:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15305:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"15312:64:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15301:3:26"},"nodeType":"YulFunctionCall","src":"15301:76:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"15290:7:26"}]}]},"name":"cleanup_t_uint248","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15262:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"15272:7:26","type":""}],"src":"15235:148:26"},{"body":{"nodeType":"YulBlock","src":"15432:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"15489:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15498:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15501:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15491:6:26"},"nodeType":"YulFunctionCall","src":"15491:12:26"},"nodeType":"YulExpressionStatement","src":"15491:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15455:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15480:5:26"}],"functionName":{"name":"cleanup_t_uint248","nodeType":"YulIdentifier","src":"15462:17:26"},"nodeType":"YulFunctionCall","src":"15462:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15452:2:26"},"nodeType":"YulFunctionCall","src":"15452:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15445:6:26"},"nodeType":"YulFunctionCall","src":"15445:43:26"},"nodeType":"YulIf","src":"15442:63:26"}]},"name":"validator_revert_t_uint248","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15425:5:26","type":""}],"src":"15389:122:26"},{"body":{"nodeType":"YulBlock","src":"15569:87:26","statements":[{"nodeType":"YulAssignment","src":"15579:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15601:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15588:12:26"},"nodeType":"YulFunctionCall","src":"15588:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15579:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15644:5:26"}],"functionName":{"name":"validator_revert_t_uint248","nodeType":"YulIdentifier","src":"15617:26:26"},"nodeType":"YulFunctionCall","src":"15617:33:26"},"nodeType":"YulExpressionStatement","src":"15617:33:26"}]},"name":"abi_decode_t_uint248","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15547:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"15555:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15563:5:26","type":""}],"src":"15517:139:26"},{"body":{"nodeType":"YulBlock","src":"15728:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"15774:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15776:77:26"},"nodeType":"YulFunctionCall","src":"15776:79:26"},"nodeType":"YulExpressionStatement","src":"15776:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15749:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15758:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15745:3:26"},"nodeType":"YulFunctionCall","src":"15745:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"15770:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15741:3:26"},"nodeType":"YulFunctionCall","src":"15741:32:26"},"nodeType":"YulIf","src":"15738:119:26"},{"nodeType":"YulBlock","src":"15867:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15882:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"15896:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15886:6:26","type":""}]},{"nodeType":"YulAssignment","src":"15911:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15946:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"15957:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15942:3:26"},"nodeType":"YulFunctionCall","src":"15942:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15966:7:26"}],"functionName":{"name":"abi_decode_t_uint248","nodeType":"YulIdentifier","src":"15921:20:26"},"nodeType":"YulFunctionCall","src":"15921:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15911:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint248","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15698:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15709:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15721:6:26","type":""}],"src":"15662:329:26"},{"body":{"nodeType":"YulBlock","src":"16040:53:26","statements":[{"nodeType":"YulAssignment","src":"16050:36:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16075:3:26","type":"","value":"248"},{"name":"value","nodeType":"YulIdentifier","src":"16080:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16071:3:26"},"nodeType":"YulFunctionCall","src":"16071:15:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"16050:8:26"}]}]},"name":"shift_left_248","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16021:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"16031:8:26","type":""}],"src":"15997:96:26"},{"body":{"nodeType":"YulBlock","src":"16144:48:26","statements":[{"nodeType":"YulAssignment","src":"16154:32:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16180:5:26"}],"functionName":{"name":"shift_left_248","nodeType":"YulIdentifier","src":"16165:14:26"},"nodeType":"YulFunctionCall","src":"16165:21:26"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"16154:7:26"}]}]},"name":"leftAlign_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16126:5:26","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"16136:7:26","type":""}],"src":"16099:93:26"},{"body":{"nodeType":"YulBlock","src":"16277:70:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16294:3:26"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16333:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"16317:15:26"},"nodeType":"YulFunctionCall","src":"16317:22:26"}],"functionName":{"name":"leftAlign_t_uint8","nodeType":"YulIdentifier","src":"16299:17:26"},"nodeType":"YulFunctionCall","src":"16299:41:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16287:6:26"},"nodeType":"YulFunctionCall","src":"16287:54:26"},"nodeType":"YulExpressionStatement","src":"16287:54:26"}]},"name":"abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16265:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16272:3:26","type":""}],"src":"16198:149:26"},{"body":{"nodeType":"YulBlock","src":"16394:51:26","statements":[{"nodeType":"YulAssignment","src":"16404:34:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16429:1:26","type":"","value":"8"},{"name":"value","nodeType":"YulIdentifier","src":"16432:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16425:3:26"},"nodeType":"YulFunctionCall","src":"16425:13:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"16404:8:26"}]}]},"name":"shift_left_8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16375:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"16385:8:26","type":""}],"src":"16353:92:26"},{"body":{"nodeType":"YulBlock","src":"16498:46:26","statements":[{"nodeType":"YulAssignment","src":"16508:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16532:5:26"}],"functionName":{"name":"shift_left_8","nodeType":"YulIdentifier","src":"16519:12:26"},"nodeType":"YulFunctionCall","src":"16519:19:26"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"16508:7:26"}]}]},"name":"leftAlign_t_uint248","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16480:5:26","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"16490:7:26","type":""}],"src":"16451:93:26"},{"body":{"nodeType":"YulBlock","src":"16633:74:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16650:3:26"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16693:5:26"}],"functionName":{"name":"cleanup_t_uint248","nodeType":"YulIdentifier","src":"16675:17:26"},"nodeType":"YulFunctionCall","src":"16675:24:26"}],"functionName":{"name":"leftAlign_t_uint248","nodeType":"YulIdentifier","src":"16655:19:26"},"nodeType":"YulFunctionCall","src":"16655:45:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16643:6:26"},"nodeType":"YulFunctionCall","src":"16643:58:26"},"nodeType":"YulExpressionStatement","src":"16643:58:26"}]},"name":"abi_encode_t_uint248_to_t_uint248_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16621:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16628:3:26","type":""}],"src":"16550:157:26"},{"body":{"nodeType":"YulBlock","src":"16853:248:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16922:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"16931:3:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16864:57:26"},"nodeType":"YulFunctionCall","src":"16864:71:26"},"nodeType":"YulExpressionStatement","src":"16864:71:26"},{"nodeType":"YulAssignment","src":"16944:18:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16955:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"16960:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16951:3:26"},"nodeType":"YulFunctionCall","src":"16951:11:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16944:3:26"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17034:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"17043:3:26"}],"functionName":{"name":"abi_encode_t_uint248_to_t_uint248_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16972:61:26"},"nodeType":"YulFunctionCall","src":"16972:75:26"},"nodeType":"YulExpressionStatement","src":"16972:75:26"},{"nodeType":"YulAssignment","src":"17056:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17067:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"17072:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17063:3:26"},"nodeType":"YulFunctionCall","src":"17063:12:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17056:3:26"}]},{"nodeType":"YulAssignment","src":"17085:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"17092:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17085:3:26"}]}]},"name":"abi_encode_tuple_packed_t_uint8_t_uint248__to_t_uint8_t_uint248__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16824:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16830:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16838:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16849:3:26","type":""}],"src":"16713:388:26"},{"body":{"nodeType":"YulBlock","src":"17165:40:26","statements":[{"nodeType":"YulAssignment","src":"17176:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17192:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17186:5:26"},"nodeType":"YulFunctionCall","src":"17186:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17176:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17148:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17158:6:26","type":""}],"src":"17107:98:26"},{"body":{"nodeType":"YulBlock","src":"17267:60:26","statements":[{"nodeType":"YulAssignment","src":"17277:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17285:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17277:4:26"}]},{"nodeType":"YulAssignment","src":"17298:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17310:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"17315:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17306:3:26"},"nodeType":"YulFunctionCall","src":"17306:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17298:4:26"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17254:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17262:4:26","type":""}],"src":"17211:116:26"},{"body":{"nodeType":"YulBlock","src":"17388:99:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17399:42:26","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17436:3:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17430:5:26"},"nodeType":"YulFunctionCall","src":"17430:10:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"17412:17:26"},"nodeType":"YulFunctionCall","src":"17412:29:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17403:5:26","type":""}]},{"nodeType":"YulAssignment","src":"17451:29:26","value":{"name":"value","nodeType":"YulIdentifier","src":"17475:5:26"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"17451:11:26"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17368:3:26","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"17376:11:26","type":""}],"src":"17333:154:26"},{"body":{"nodeType":"YulBlock","src":"17546:54:26","statements":[{"nodeType":"YulAssignment","src":"17556:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"17581:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"17587:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17577:3:26"},"nodeType":"YulFunctionCall","src":"17577:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"17556:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"17521:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"17527:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"17537:8:26","type":""}],"src":"17493:107:26"},{"body":{"nodeType":"YulBlock","src":"17696:504:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17707:52:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"17753:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17721:31:26"},"nodeType":"YulFunctionCall","src":"17721:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17711:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17768:21:26","value":{"name":"array","nodeType":"YulIdentifier","src":"17784:5:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"17772:8:26","type":""}]},{"nodeType":"YulAssignment","src":"17799:52:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"17845:5:26"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17811:33:26"},"nodeType":"YulFunctionCall","src":"17811:40:26"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"17799:8:26"}]},{"nodeType":"YulAssignment","src":"17861:44:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"17896:8:26"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"17870:25:26"},"nodeType":"YulFunctionCall","src":"17870:35:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17861:5:26"}]},{"body":{"nodeType":"YulBlock","src":"17933:260:26","statements":[{"nodeType":"YulAssignment","src":"17947:236:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17977:5:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18044:1:26","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18051:2:26","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"18055:6:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18047:3:26"},"nodeType":"YulFunctionCall","src":"18047:15:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18040:3:26"},"nodeType":"YulFunctionCall","src":"18040:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"18085:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"18000:18:26"},"nodeType":"YulFunctionCall","src":"18000:169:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17956:3:26"},"nodeType":"YulFunctionCall","src":"17956:227:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17947:5:26"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17921:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17929:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17918:2:26"},"nodeType":"YulFunctionCall","src":"17918:14:26"},"nodeType":"YulIf","src":"17915:278:26"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"17680:5:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17690:5:26","type":""}],"src":"17606:594:26"},{"body":{"nodeType":"YulBlock","src":"18278:32:26","statements":[{"nodeType":"YulAssignment","src":"18289:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"18299:4:26","type":"","value":"0x04"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18289:6:26"}]}]},"name":"array_length_t_array$_t_uint256_$4_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18261:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18271:6:26","type":""}],"src":"18206:104:26"},{"body":{"nodeType":"YulBlock","src":"18425:34:26","statements":[{"nodeType":"YulAssignment","src":"18435:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"18450:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18435:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$4_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18397:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"18402:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18413:11:26","type":""}],"src":"18316:143:26"},{"body":{"nodeType":"YulBlock","src":"18535:28:26","statements":[{"nodeType":"YulAssignment","src":"18545:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"18553:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18545:4:26"}]}]},"name":"array_dataslot_t_array$_t_uint256_$4_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18522:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"18530:4:26","type":""}],"src":"18465:98:26"},{"body":{"nodeType":"YulBlock","src":"18624:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18641:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18664:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18646:17:26"},"nodeType":"YulFunctionCall","src":"18646:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18634:6:26"},"nodeType":"YulFunctionCall","src":"18634:37:26"},"nodeType":"YulExpressionStatement","src":"18634:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18612:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18619:3:26","type":""}],"src":"18569:108:26"},{"body":{"nodeType":"YulBlock","src":"18763:99:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18807:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"18815:3:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18773:33:26"},"nodeType":"YulFunctionCall","src":"18773:46:26"},"nodeType":"YulExpressionStatement","src":"18773:46:26"},{"nodeType":"YulAssignment","src":"18828:28:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18846:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18851:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18842:3:26"},"nodeType":"YulFunctionCall","src":"18842:14:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"18828:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"18736:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18744:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"18752:10:26","type":""}],"src":"18683:179:26"},{"body":{"nodeType":"YulBlock","src":"18941:38:26","statements":[{"nodeType":"YulAssignment","src":"18951:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18963:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18968:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18959:3:26"},"nodeType":"YulFunctionCall","src":"18959:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"18951:4:26"}]}]},"name":"array_nextElement_t_array$_t_uint256_$4_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18928:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"18936:4:26","type":""}],"src":"18868:111:26"},{"body":{"nodeType":"YulBlock","src":"19129:582:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19139:66:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19199:5:26"}],"functionName":{"name":"array_length_t_array$_t_uint256_$4_memory_ptr","nodeType":"YulIdentifier","src":"19153:45:26"},"nodeType":"YulFunctionCall","src":"19153:52:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19143:6:26","type":""}]},{"nodeType":"YulAssignment","src":"19214:91:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19293:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"19298:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$4_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19221:71:26"},"nodeType":"YulFunctionCall","src":"19221:84:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19214:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"19314:69:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19377:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$4_memory_ptr","nodeType":"YulIdentifier","src":"19329:47:26"},"nodeType":"YulFunctionCall","src":"19329:54:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"19318:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19392:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"19406:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"19396:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"19482:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19496:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19523:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19517:5:26"},"nodeType":"YulFunctionCall","src":"19517:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"19500:13:26","type":""}]},{"nodeType":"YulAssignment","src":"19543:70:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"19594:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"19609:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19550:43:26"},"nodeType":"YulFunctionCall","src":"19550:63:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19543:3:26"}]},{"nodeType":"YulAssignment","src":"19626:68:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19687:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$4_memory_ptr","nodeType":"YulIdentifier","src":"19636:50:26"},"nodeType":"YulFunctionCall","src":"19636:58:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19626:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19444:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"19447:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19441:2:26"},"nodeType":"YulFunctionCall","src":"19441:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19455:18:26","statements":[{"nodeType":"YulAssignment","src":"19457:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19466:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"19469:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19462:3:26"},"nodeType":"YulFunctionCall","src":"19462:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19457:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"19426:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19428:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"19437:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19432:1:26","type":""}]}]},"src":"19422:282:26"}]},"name":"abi_encode_t_array$_t_uint256_$4_memory_ptr_to_t_array$_t_uint256_$4_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19116:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19123:3:26","type":""}],"src":"19017:694:26"},{"body":{"nodeType":"YulBlock","src":"19812:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19829:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"19834:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19822:6:26"},"nodeType":"YulFunctionCall","src":"19822:19:26"},"nodeType":"YulExpressionStatement","src":"19822:19:26"},{"nodeType":"YulAssignment","src":"19850:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19869:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19874:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19865:3:26"},"nodeType":"YulFunctionCall","src":"19865:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19850:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19784:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"19789:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19800:11:26","type":""}],"src":"19717:168:26"},{"body":{"nodeType":"YulBlock","src":"19955:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19978:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"19983:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"19988:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"19965:12:26"},"nodeType":"YulFunctionCall","src":"19965:30:26"},"nodeType":"YulExpressionStatement","src":"19965:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20015:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"20020:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20011:3:26"},"nodeType":"YulFunctionCall","src":"20011:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"20029:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20004:6:26"},"nodeType":"YulFunctionCall","src":"20004:27:26"},"nodeType":"YulExpressionStatement","src":"20004:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"19937:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"19942:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"19947:6:26","type":""}],"src":"19891:146:26"},{"body":{"nodeType":"YulBlock","src":"20091:54:26","statements":[{"nodeType":"YulAssignment","src":"20101:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20119:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"20126:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20115:3:26"},"nodeType":"YulFunctionCall","src":"20115:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20135:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20131:3:26"},"nodeType":"YulFunctionCall","src":"20131:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20111:3:26"},"nodeType":"YulFunctionCall","src":"20111:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20101:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20074:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20084:6:26","type":""}],"src":"20043:102:26"},{"body":{"nodeType":"YulBlock","src":"20273:214:26","statements":[{"nodeType":"YulAssignment","src":"20283:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20348:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"20353:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20290:57:26"},"nodeType":"YulFunctionCall","src":"20290:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20283:3:26"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20407:5:26"},{"name":"pos","nodeType":"YulIdentifier","src":"20414:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"20419:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"20370:36:26"},"nodeType":"YulFunctionCall","src":"20370:56:26"},"nodeType":"YulExpressionStatement","src":"20370:56:26"},{"nodeType":"YulAssignment","src":"20435:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20446:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20473:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"20451:21:26"},"nodeType":"YulFunctionCall","src":"20451:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20442:3:26"},"nodeType":"YulFunctionCall","src":"20442:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20435:3:26"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"20246:5:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"20253:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20261:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20269:3:26","type":""}],"src":"20173:314:26"},{"body":{"nodeType":"YulBlock","src":"20693:333:26","statements":[{"nodeType":"YulAssignment","src":"20703:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20715:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20726:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20711:3:26"},"nodeType":"YulFunctionCall","src":"20711:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20703:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20830:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20843:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20854:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20839:3:26"},"nodeType":"YulFunctionCall","src":"20839:17:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$4_memory_ptr_to_t_array$_t_uint256_$4_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20740:89:26"},"nodeType":"YulFunctionCall","src":"20740:117:26"},"nodeType":"YulExpressionStatement","src":"20740:117:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20878:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20889:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20874:3:26"},"nodeType":"YulFunctionCall","src":"20874:19:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20899:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"20905:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20895:3:26"},"nodeType":"YulFunctionCall","src":"20895:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20867:6:26"},"nodeType":"YulFunctionCall","src":"20867:49:26"},"nodeType":"YulExpressionStatement","src":"20867:49:26"},{"nodeType":"YulAssignment","src":"20925:94:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20997:6:26"},{"name":"value2","nodeType":"YulIdentifier","src":"21005:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"21014:4:26"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20933:63:26"},"nodeType":"YulFunctionCall","src":"20933:86:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20925:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$4_memory_ptr_t_bytes_calldata_ptr__to_t_array$_t_uint256_$4_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20649:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20661:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20669:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20677:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20688:4:26","type":""}],"src":"20493:533:26"},{"body":{"nodeType":"YulBlock","src":"21074:48:26","statements":[{"nodeType":"YulAssignment","src":"21084:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21109:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21102:6:26"},"nodeType":"YulFunctionCall","src":"21102:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21095:6:26"},"nodeType":"YulFunctionCall","src":"21095:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21084:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21056:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21066:7:26","type":""}],"src":"21032:90:26"},{"body":{"nodeType":"YulBlock","src":"21168:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"21222:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21231:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21234:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21224:6:26"},"nodeType":"YulFunctionCall","src":"21224:12:26"},"nodeType":"YulExpressionStatement","src":"21224:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21191:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21213:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"21198:14:26"},"nodeType":"YulFunctionCall","src":"21198:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21188:2:26"},"nodeType":"YulFunctionCall","src":"21188:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21181:6:26"},"nodeType":"YulFunctionCall","src":"21181:40:26"},"nodeType":"YulIf","src":"21178:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21161:5:26","type":""}],"src":"21128:116:26"},{"body":{"nodeType":"YulBlock","src":"21310:77:26","statements":[{"nodeType":"YulAssignment","src":"21320:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21335:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21329:5:26"},"nodeType":"YulFunctionCall","src":"21329:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21320:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21375:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"21351:23:26"},"nodeType":"YulFunctionCall","src":"21351:30:26"},"nodeType":"YulExpressionStatement","src":"21351:30:26"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21288:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"21296:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21304:5:26","type":""}],"src":"21250:137:26"},{"body":{"nodeType":"YulBlock","src":"21467:271:26","statements":[{"body":{"nodeType":"YulBlock","src":"21513:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21515:77:26"},"nodeType":"YulFunctionCall","src":"21515:79:26"},"nodeType":"YulExpressionStatement","src":"21515:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21488:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"21497:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21484:3:26"},"nodeType":"YulFunctionCall","src":"21484:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"21509:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21480:3:26"},"nodeType":"YulFunctionCall","src":"21480:32:26"},"nodeType":"YulIf","src":"21477:119:26"},{"nodeType":"YulBlock","src":"21606:125:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21621:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"21635:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21625:6:26","type":""}]},{"nodeType":"YulAssignment","src":"21650:71:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21693:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"21704:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21689:3:26"},"nodeType":"YulFunctionCall","src":"21689:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21713:7:26"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"21660:28:26"},"nodeType":"YulFunctionCall","src":"21660:61:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21650:6:26"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21437:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21448:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21460:6:26","type":""}],"src":"21393:345:26"},{"body":{"nodeType":"YulBlock","src":"21840:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21857:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"21862:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21850:6:26"},"nodeType":"YulFunctionCall","src":"21850:19:26"},"nodeType":"YulExpressionStatement","src":"21850:19:26"},{"nodeType":"YulAssignment","src":"21878:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21897:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21902:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21893:3:26"},"nodeType":"YulFunctionCall","src":"21893:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21878:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21812:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"21817:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21828:11:26","type":""}],"src":"21744:169:26"},{"body":{"nodeType":"YulBlock","src":"22025:64:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22047:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"22055:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22043:3:26"},"nodeType":"YulFunctionCall","src":"22043:14:26"},{"hexValue":"53776170205665726966696572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"22059:22:26","type":"","value":"Swap Verifier failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22036:6:26"},"nodeType":"YulFunctionCall","src":"22036:46:26"},"nodeType":"YulExpressionStatement","src":"22036:46:26"}]},"name":"store_literal_in_memory_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22017:6:26","type":""}],"src":"21919:170:26"},{"body":{"nodeType":"YulBlock","src":"22241:220:26","statements":[{"nodeType":"YulAssignment","src":"22251:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22317:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"22322:2:26","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22258:58:26"},"nodeType":"YulFunctionCall","src":"22258:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22251:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22423:3:26"}],"functionName":{"name":"store_literal_in_memory_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6","nodeType":"YulIdentifier","src":"22334:88:26"},"nodeType":"YulFunctionCall","src":"22334:93:26"},"nodeType":"YulExpressionStatement","src":"22334:93:26"},{"nodeType":"YulAssignment","src":"22436:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22447:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"22452:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22443:3:26"},"nodeType":"YulFunctionCall","src":"22443:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22436:3:26"}]}]},"name":"abi_encode_t_stringliteral_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22229:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22237:3:26","type":""}],"src":"22095:366:26"},{"body":{"nodeType":"YulBlock","src":"22638:248:26","statements":[{"nodeType":"YulAssignment","src":"22648:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22660:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22671:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22656:3:26"},"nodeType":"YulFunctionCall","src":"22656:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22648:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22695:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22706:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22691:3:26"},"nodeType":"YulFunctionCall","src":"22691:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22714:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"22720:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22710:3:26"},"nodeType":"YulFunctionCall","src":"22710:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22684:6:26"},"nodeType":"YulFunctionCall","src":"22684:47:26"},"nodeType":"YulExpressionStatement","src":"22684:47:26"},{"nodeType":"YulAssignment","src":"22740:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22874:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22748:124:26"},"nodeType":"YulFunctionCall","src":"22748:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22740:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22618:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22633:4:26","type":""}],"src":"22467:419:26"},{"body":{"nodeType":"YulBlock","src":"22955:80:26","statements":[{"nodeType":"YulAssignment","src":"22965:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22980:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22974:5:26"},"nodeType":"YulFunctionCall","src":"22974:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22965:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23023:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"22996:26:26"},"nodeType":"YulFunctionCall","src":"22996:33:26"},"nodeType":"YulExpressionStatement","src":"22996:33:26"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22933:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"22941:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22949:5:26","type":""}],"src":"22892:143:26"},{"body":{"nodeType":"YulBlock","src":"23118:274:26","statements":[{"body":{"nodeType":"YulBlock","src":"23164:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23166:77:26"},"nodeType":"YulFunctionCall","src":"23166:79:26"},"nodeType":"YulExpressionStatement","src":"23166:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23139:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"23148:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23135:3:26"},"nodeType":"YulFunctionCall","src":"23135:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"23160:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23131:3:26"},"nodeType":"YulFunctionCall","src":"23131:32:26"},"nodeType":"YulIf","src":"23128:119:26"},{"nodeType":"YulBlock","src":"23257:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23272:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"23286:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23276:6:26","type":""}]},{"nodeType":"YulAssignment","src":"23301:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23347:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23358:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23343:3:26"},"nodeType":"YulFunctionCall","src":"23343:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23367:7:26"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"23311:31:26"},"nodeType":"YulFunctionCall","src":"23311:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23301:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23088:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23099:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23111:6:26","type":""}],"src":"23041:351:26"},{"body":{"nodeType":"YulBlock","src":"23504:62:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23526:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"23534:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23522:3:26"},"nodeType":"YulFunctionCall","src":"23522:14:26"},{"hexValue":"4465706f736974206e6f7420747261646572","kind":"string","nodeType":"YulLiteral","src":"23538:20:26","type":"","value":"Deposit not trader"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23515:6:26"},"nodeType":"YulFunctionCall","src":"23515:44:26"},"nodeType":"YulExpressionStatement","src":"23515:44:26"}]},"name":"store_literal_in_memory_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23496:6:26","type":""}],"src":"23398:168:26"},{"body":{"nodeType":"YulBlock","src":"23718:220:26","statements":[{"nodeType":"YulAssignment","src":"23728:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23794:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"23799:2:26","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23735:58:26"},"nodeType":"YulFunctionCall","src":"23735:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23728:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23900:3:26"}],"functionName":{"name":"store_literal_in_memory_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69","nodeType":"YulIdentifier","src":"23811:88:26"},"nodeType":"YulFunctionCall","src":"23811:93:26"},"nodeType":"YulExpressionStatement","src":"23811:93:26"},{"nodeType":"YulAssignment","src":"23913:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23924:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"23929:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23920:3:26"},"nodeType":"YulFunctionCall","src":"23920:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23913:3:26"}]}]},"name":"abi_encode_t_stringliteral_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23706:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23714:3:26","type":""}],"src":"23572:366:26"},{"body":{"nodeType":"YulBlock","src":"24115:248:26","statements":[{"nodeType":"YulAssignment","src":"24125:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24137:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24148:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24133:3:26"},"nodeType":"YulFunctionCall","src":"24133:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24125:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24172:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24183:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24168:3:26"},"nodeType":"YulFunctionCall","src":"24168:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24191:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"24197:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24187:3:26"},"nodeType":"YulFunctionCall","src":"24187:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24161:6:26"},"nodeType":"YulFunctionCall","src":"24161:47:26"},"nodeType":"YulExpressionStatement","src":"24161:47:26"},{"nodeType":"YulAssignment","src":"24217:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24351:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24225:124:26"},"nodeType":"YulFunctionCall","src":"24225:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24217:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24095:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24110:4:26","type":""}],"src":"23944:419:26"},{"body":{"nodeType":"YulBlock","src":"24441:32:26","statements":[{"nodeType":"YulAssignment","src":"24452:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"24462:4:26","type":"","value":"0x05"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"24452:6:26"}]}]},"name":"array_length_t_array$_t_uint256_$5_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24424:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"24434:6:26","type":""}],"src":"24369:104:26"},{"body":{"nodeType":"YulBlock","src":"24588:34:26","statements":[{"nodeType":"YulAssignment","src":"24598:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"24613:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"24598:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24560:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"24565:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"24576:11:26","type":""}],"src":"24479:143:26"},{"body":{"nodeType":"YulBlock","src":"24698:28:26","statements":[{"nodeType":"YulAssignment","src":"24708:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"24716:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"24708:4:26"}]}]},"name":"array_dataslot_t_array$_t_uint256_$5_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"24685:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"24693:4:26","type":""}],"src":"24628:98:26"},{"body":{"nodeType":"YulBlock","src":"24805:38:26","statements":[{"nodeType":"YulAssignment","src":"24815:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"24827:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"24832:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24823:3:26"},"nodeType":"YulFunctionCall","src":"24823:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"24815:4:26"}]}]},"name":"array_nextElement_t_array$_t_uint256_$5_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"24792:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"24800:4:26","type":""}],"src":"24732:111:26"},{"body":{"nodeType":"YulBlock","src":"24993:582:26","statements":[{"nodeType":"YulVariableDeclaration","src":"25003:66:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25063:5:26"}],"functionName":{"name":"array_length_t_array$_t_uint256_$5_memory_ptr","nodeType":"YulIdentifier","src":"25017:45:26"},"nodeType":"YulFunctionCall","src":"25017:52:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25007:6:26","type":""}]},{"nodeType":"YulAssignment","src":"25078:91:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25157:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"25162:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25085:71:26"},"nodeType":"YulFunctionCall","src":"25085:84:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25078:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"25178:69:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25241:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$5_memory_ptr","nodeType":"YulIdentifier","src":"25193:47:26"},"nodeType":"YulFunctionCall","src":"25193:54:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"25182:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25256:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"25270:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"25260:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"25346:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"25360:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25387:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25381:5:26"},"nodeType":"YulFunctionCall","src":"25381:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"25364:13:26","type":""}]},{"nodeType":"YulAssignment","src":"25407:70:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"25458:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"25473:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"25414:43:26"},"nodeType":"YulFunctionCall","src":"25414:63:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25407:3:26"}]},{"nodeType":"YulAssignment","src":"25490:68:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25551:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$5_memory_ptr","nodeType":"YulIdentifier","src":"25500:50:26"},"nodeType":"YulFunctionCall","src":"25500:58:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25490:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25308:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"25311:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25305:2:26"},"nodeType":"YulFunctionCall","src":"25305:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25319:18:26","statements":[{"nodeType":"YulAssignment","src":"25321:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25330:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"25333:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25326:3:26"},"nodeType":"YulFunctionCall","src":"25326:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"25321:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"25290:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"25292:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"25301:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"25296:1:26","type":""}]}]},"src":"25286:282:26"}]},"name":"abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24980:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24987:3:26","type":""}],"src":"24881:694:26"},{"body":{"nodeType":"YulBlock","src":"25781:333:26","statements":[{"nodeType":"YulAssignment","src":"25791:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25803:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25814:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25799:3:26"},"nodeType":"YulFunctionCall","src":"25799:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25791:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25918:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25931:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25942:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25927:3:26"},"nodeType":"YulFunctionCall","src":"25927:17:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25828:89:26"},"nodeType":"YulFunctionCall","src":"25828:117:26"},"nodeType":"YulExpressionStatement","src":"25828:117:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25966:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25977:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25962:3:26"},"nodeType":"YulFunctionCall","src":"25962:19:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25987:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"25993:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25983:3:26"},"nodeType":"YulFunctionCall","src":"25983:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25955:6:26"},"nodeType":"YulFunctionCall","src":"25955:49:26"},"nodeType":"YulExpressionStatement","src":"25955:49:26"},{"nodeType":"YulAssignment","src":"26013:94:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26085:6:26"},{"name":"value2","nodeType":"YulIdentifier","src":"26093:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"26102:4:26"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26021:63:26"},"nodeType":"YulFunctionCall","src":"26021:86:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26013:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr_t_bytes_calldata_ptr__to_t_array$_t_uint256_$5_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25737:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25749:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25757:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25765:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25776:4:26","type":""}],"src":"25581:533:26"},{"body":{"nodeType":"YulBlock","src":"26226:67:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26248:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"26256:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26244:3:26"},"nodeType":"YulFunctionCall","src":"26244:14:26"},{"hexValue":"4465706f736974205665726966696572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"26260:25:26","type":"","value":"Deposit Verifier failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26237:6:26"},"nodeType":"YulFunctionCall","src":"26237:49:26"},"nodeType":"YulExpressionStatement","src":"26237:49:26"}]},"name":"store_literal_in_memory_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26218:6:26","type":""}],"src":"26120:173:26"},{"body":{"nodeType":"YulBlock","src":"26445:220:26","statements":[{"nodeType":"YulAssignment","src":"26455:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26521:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"26526:2:26","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26462:58:26"},"nodeType":"YulFunctionCall","src":"26462:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26455:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26627:3:26"}],"functionName":{"name":"store_literal_in_memory_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282","nodeType":"YulIdentifier","src":"26538:88:26"},"nodeType":"YulFunctionCall","src":"26538:93:26"},"nodeType":"YulExpressionStatement","src":"26538:93:26"},{"nodeType":"YulAssignment","src":"26640:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26651:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"26656:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26647:3:26"},"nodeType":"YulFunctionCall","src":"26647:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26640:3:26"}]}]},"name":"abi_encode_t_stringliteral_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26433:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26441:3:26","type":""}],"src":"26299:366:26"},{"body":{"nodeType":"YulBlock","src":"26842:248:26","statements":[{"nodeType":"YulAssignment","src":"26852:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26864:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26875:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26860:3:26"},"nodeType":"YulFunctionCall","src":"26860:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26852:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26899:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26910:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26895:3:26"},"nodeType":"YulFunctionCall","src":"26895:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26918:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"26924:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26914:3:26"},"nodeType":"YulFunctionCall","src":"26914:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26888:6:26"},"nodeType":"YulFunctionCall","src":"26888:47:26"},"nodeType":"YulExpressionStatement","src":"26888:47:26"},{"nodeType":"YulAssignment","src":"26944:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27078:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26952:124:26"},"nodeType":"YulFunctionCall","src":"26952:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26944:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26822:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26837:4:26","type":""}],"src":"26671:419:26"},{"body":{"nodeType":"YulBlock","src":"27161:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27178:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27201:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"27183:17:26"},"nodeType":"YulFunctionCall","src":"27183:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27171:6:26"},"nodeType":"YulFunctionCall","src":"27171:37:26"},"nodeType":"YulExpressionStatement","src":"27171:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27149:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27156:3:26","type":""}],"src":"27096:118:26"},{"body":{"nodeType":"YulBlock","src":"27374:288:26","statements":[{"nodeType":"YulAssignment","src":"27384:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27396:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27407:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27392:3:26"},"nodeType":"YulFunctionCall","src":"27392:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27384:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27464:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27477:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27488:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27473:3:26"},"nodeType":"YulFunctionCall","src":"27473:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27420:43:26"},"nodeType":"YulFunctionCall","src":"27420:71:26"},"nodeType":"YulExpressionStatement","src":"27420:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27545:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27558:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27569:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27554:3:26"},"nodeType":"YulFunctionCall","src":"27554:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27501:43:26"},"nodeType":"YulFunctionCall","src":"27501:72:26"},"nodeType":"YulExpressionStatement","src":"27501:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27627:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27640:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27651:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27636:3:26"},"nodeType":"YulFunctionCall","src":"27636:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27583:43:26"},"nodeType":"YulFunctionCall","src":"27583:72:26"},"nodeType":"YulExpressionStatement","src":"27583:72:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27330:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27342:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27350:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27358:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27369:4:26","type":""}],"src":"27220:442:26"},{"body":{"nodeType":"YulBlock","src":"27774:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27796:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"27804:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27792:3:26"},"nodeType":"YulFunctionCall","src":"27792:14:26"},{"hexValue":"5f6c6566742073686f756c6420626520696e7369646520746865206669656c64","kind":"string","nodeType":"YulLiteral","src":"27808:34:26","type":"","value":"_left should be inside the field"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27785:6:26"},"nodeType":"YulFunctionCall","src":"27785:58:26"},"nodeType":"YulExpressionStatement","src":"27785:58:26"}]},"name":"store_literal_in_memory_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27766:6:26","type":""}],"src":"27668:182:26"},{"body":{"nodeType":"YulBlock","src":"28002:220:26","statements":[{"nodeType":"YulAssignment","src":"28012:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28078:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"28083:2:26","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28019:58:26"},"nodeType":"YulFunctionCall","src":"28019:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28012:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28184:3:26"}],"functionName":{"name":"store_literal_in_memory_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e","nodeType":"YulIdentifier","src":"28095:88:26"},"nodeType":"YulFunctionCall","src":"28095:93:26"},"nodeType":"YulExpressionStatement","src":"28095:93:26"},{"nodeType":"YulAssignment","src":"28197:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28208:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"28213:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28204:3:26"},"nodeType":"YulFunctionCall","src":"28204:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28197:3:26"}]}]},"name":"abi_encode_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27990:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27998:3:26","type":""}],"src":"27856:366:26"},{"body":{"nodeType":"YulBlock","src":"28399:248:26","statements":[{"nodeType":"YulAssignment","src":"28409:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28421:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28432:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28417:3:26"},"nodeType":"YulFunctionCall","src":"28417:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28409:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28456:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28467:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28452:3:26"},"nodeType":"YulFunctionCall","src":"28452:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28475:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"28481:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28471:3:26"},"nodeType":"YulFunctionCall","src":"28471:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28445:6:26"},"nodeType":"YulFunctionCall","src":"28445:47:26"},"nodeType":"YulExpressionStatement","src":"28445:47:26"},{"nodeType":"YulAssignment","src":"28501:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28635:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28509:124:26"},"nodeType":"YulFunctionCall","src":"28509:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28501:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28379:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28394:4:26","type":""}],"src":"28228:419:26"},{"body":{"nodeType":"YulBlock","src":"28759:114:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28781:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28789:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28777:3:26"},"nodeType":"YulFunctionCall","src":"28777:14:26"},{"hexValue":"5f72696768742073686f756c6420626520696e7369646520746865206669656c","kind":"string","nodeType":"YulLiteral","src":"28793:34:26","type":"","value":"_right should be inside the fiel"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28770:6:26"},"nodeType":"YulFunctionCall","src":"28770:58:26"},"nodeType":"YulExpressionStatement","src":"28770:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28849:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28857:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28845:3:26"},"nodeType":"YulFunctionCall","src":"28845:15:26"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"28862:3:26","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28838:6:26"},"nodeType":"YulFunctionCall","src":"28838:28:26"},"nodeType":"YulExpressionStatement","src":"28838:28:26"}]},"name":"store_literal_in_memory_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28751:6:26","type":""}],"src":"28653:220:26"},{"body":{"nodeType":"YulBlock","src":"29025:220:26","statements":[{"nodeType":"YulAssignment","src":"29035:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29101:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"29106:2:26","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29042:58:26"},"nodeType":"YulFunctionCall","src":"29042:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29035:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29207:3:26"}],"functionName":{"name":"store_literal_in_memory_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e","nodeType":"YulIdentifier","src":"29118:88:26"},"nodeType":"YulFunctionCall","src":"29118:93:26"},"nodeType":"YulExpressionStatement","src":"29118:93:26"},{"nodeType":"YulAssignment","src":"29220:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29231:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"29236:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29227:3:26"},"nodeType":"YulFunctionCall","src":"29227:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29220:3:26"}]}]},"name":"abi_encode_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29013:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29021:3:26","type":""}],"src":"28879:366:26"},{"body":{"nodeType":"YulBlock","src":"29422:248:26","statements":[{"nodeType":"YulAssignment","src":"29432:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29444:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29455:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29440:3:26"},"nodeType":"YulFunctionCall","src":"29440:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29432:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29479:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29490:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29475:3:26"},"nodeType":"YulFunctionCall","src":"29475:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29498:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"29504:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29494:3:26"},"nodeType":"YulFunctionCall","src":"29494:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29468:6:26"},"nodeType":"YulFunctionCall","src":"29468:47:26"},"nodeType":"YulExpressionStatement","src":"29468:47:26"},{"nodeType":"YulAssignment","src":"29524:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29658:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29532:124:26"},"nodeType":"YulFunctionCall","src":"29532:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29524:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29402:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29417:4:26","type":""}],"src":"29251:419:26"},{"body":{"nodeType":"YulBlock","src":"29802:206:26","statements":[{"nodeType":"YulAssignment","src":"29812:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29824:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29835:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29820:3:26"},"nodeType":"YulFunctionCall","src":"29820:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29812:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29892:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29905:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29916:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29901:3:26"},"nodeType":"YulFunctionCall","src":"29901:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29848:43:26"},"nodeType":"YulFunctionCall","src":"29848:71:26"},"nodeType":"YulExpressionStatement","src":"29848:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29973:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29986:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29997:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29982:3:26"},"nodeType":"YulFunctionCall","src":"29982:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29929:43:26"},"nodeType":"YulFunctionCall","src":"29929:72:26"},"nodeType":"YulExpressionStatement","src":"29929:72:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29766:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29778:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29786:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29797:4:26","type":""}],"src":"29676:332:26"},{"body":{"nodeType":"YulBlock","src":"30077:80:26","statements":[{"nodeType":"YulAssignment","src":"30087:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30102:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30096:5:26"},"nodeType":"YulFunctionCall","src":"30096:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30087:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30145:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"30118:26:26"},"nodeType":"YulFunctionCall","src":"30118:33:26"},"nodeType":"YulExpressionStatement","src":"30118:33:26"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"30055:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"30063:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"30071:5:26","type":""}],"src":"30014:143:26"},{"body":{"nodeType":"YulBlock","src":"30257:413:26","statements":[{"body":{"nodeType":"YulBlock","src":"30303:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"30305:77:26"},"nodeType":"YulFunctionCall","src":"30305:79:26"},"nodeType":"YulExpressionStatement","src":"30305:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"30278:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"30287:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30274:3:26"},"nodeType":"YulFunctionCall","src":"30274:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"30299:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30270:3:26"},"nodeType":"YulFunctionCall","src":"30270:32:26"},"nodeType":"YulIf","src":"30267:119:26"},{"nodeType":"YulBlock","src":"30396:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"30411:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"30425:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30415:6:26","type":""}]},{"nodeType":"YulAssignment","src":"30440:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30486:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"30497:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30482:3:26"},"nodeType":"YulFunctionCall","src":"30482:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30506:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"30450:31:26"},"nodeType":"YulFunctionCall","src":"30450:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"30440:6:26"}]}]},{"nodeType":"YulBlock","src":"30534:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"30549:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"30563:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30553:6:26","type":""}]},{"nodeType":"YulAssignment","src":"30579:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30625:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"30636:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30621:3:26"},"nodeType":"YulFunctionCall","src":"30621:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30645:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"30589:31:26"},"nodeType":"YulFunctionCall","src":"30589:64:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"30579:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30219:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"30230:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"30242:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30250:6:26","type":""}],"src":"30163:507:26"},{"body":{"nodeType":"YulBlock","src":"30704:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30721:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30724:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30714:6:26"},"nodeType":"YulFunctionCall","src":"30714:88:26"},"nodeType":"YulExpressionStatement","src":"30714:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30818:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30821:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30811:6:26"},"nodeType":"YulFunctionCall","src":"30811:15:26"},"nodeType":"YulExpressionStatement","src":"30811:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30842:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30845:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30835:6:26"},"nodeType":"YulFunctionCall","src":"30835:15:26"},"nodeType":"YulExpressionStatement","src":"30835:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"30676:180:26"},{"body":{"nodeType":"YulBlock","src":"30934:32:26","statements":[{"nodeType":"YulAssignment","src":"30945:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"30955:4:26","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"30945:6:26"}]}]},"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30917:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"30927:6:26","type":""}],"src":"30862:104:26"},{"body":{"nodeType":"YulBlock","src":"31081:34:26","statements":[{"nodeType":"YulAssignment","src":"31091:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"31106:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"31091:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31053:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"31058:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"31069:11:26","type":""}],"src":"30972:143:26"},{"body":{"nodeType":"YulBlock","src":"31191:28:26","statements":[{"nodeType":"YulAssignment","src":"31201:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"31209:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31201:4:26"}]}]},"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"31178:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"31186:4:26","type":""}],"src":"31121:98:26"},{"body":{"nodeType":"YulBlock","src":"31298:38:26","statements":[{"nodeType":"YulAssignment","src":"31308:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31320:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"31325:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31316:3:26"},"nodeType":"YulFunctionCall","src":"31316:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"31308:4:26"}]}]},"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"31285:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"31293:4:26","type":""}],"src":"31225:111:26"},{"body":{"nodeType":"YulBlock","src":"31486:582:26","statements":[{"nodeType":"YulVariableDeclaration","src":"31496:66:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31556:5:26"}],"functionName":{"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"31510:45:26"},"nodeType":"YulFunctionCall","src":"31510:52:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"31500:6:26","type":""}]},{"nodeType":"YulAssignment","src":"31571:91:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31650:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"31655:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31578:71:26"},"nodeType":"YulFunctionCall","src":"31578:84:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31571:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"31671:69:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31734:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"31686:47:26"},"nodeType":"YulFunctionCall","src":"31686:54:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"31675:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31749:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"31763:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"31753:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"31839:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"31853:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"31880:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31874:5:26"},"nodeType":"YulFunctionCall","src":"31874:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"31857:13:26","type":""}]},{"nodeType":"YulAssignment","src":"31900:70:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"31951:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"31966:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"31907:43:26"},"nodeType":"YulFunctionCall","src":"31907:63:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31900:3:26"}]},{"nodeType":"YulAssignment","src":"31983:68:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"32044:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"31993:50:26"},"nodeType":"YulFunctionCall","src":"31993:58:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"31983:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31801:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"31804:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31798:2:26"},"nodeType":"YulFunctionCall","src":"31798:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31812:18:26","statements":[{"nodeType":"YulAssignment","src":"31814:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31823:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"31826:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31819:3:26"},"nodeType":"YulFunctionCall","src":"31819:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"31814:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"31783:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"31785:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"31794:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"31789:1:26","type":""}]}]},"src":"31779:282:26"}]},"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31473:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31480:3:26","type":""}],"src":"31374:694:26"},{"body":{"nodeType":"YulBlock","src":"32274:332:26","statements":[{"nodeType":"YulAssignment","src":"32284:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32296:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32307:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32292:3:26"},"nodeType":"YulFunctionCall","src":"32292:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32284:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32411:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32424:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32435:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32420:3:26"},"nodeType":"YulFunctionCall","src":"32420:17:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32321:89:26"},"nodeType":"YulFunctionCall","src":"32321:117:26"},"nodeType":"YulExpressionStatement","src":"32321:117:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32459:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32470:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32455:3:26"},"nodeType":"YulFunctionCall","src":"32455:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32479:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"32485:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32475:3:26"},"nodeType":"YulFunctionCall","src":"32475:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32448:6:26"},"nodeType":"YulFunctionCall","src":"32448:48:26"},"nodeType":"YulExpressionStatement","src":"32448:48:26"},{"nodeType":"YulAssignment","src":"32505:94:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32577:6:26"},{"name":"value2","nodeType":"YulIdentifier","src":"32585:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"32594:4:26"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32513:63:26"},"nodeType":"YulFunctionCall","src":"32513:86:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32505:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr_t_bytes_calldata_ptr__to_t_array$_t_uint256_$3_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32230:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32242:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32250:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32258:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32269:4:26","type":""}],"src":"32074:532:26"},{"body":{"nodeType":"YulBlock","src":"32718:67:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32740:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"32748:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32736:3:26"},"nodeType":"YulFunctionCall","src":"32736:14:26"},{"hexValue":"66696e616c697a653a20766572696679206661696c6564","kind":"string","nodeType":"YulLiteral","src":"32752:25:26","type":"","value":"finalize: verify failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32729:6:26"},"nodeType":"YulFunctionCall","src":"32729:49:26"},"nodeType":"YulExpressionStatement","src":"32729:49:26"}]},"name":"store_literal_in_memory_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32710:6:26","type":""}],"src":"32612:173:26"},{"body":{"nodeType":"YulBlock","src":"32937:220:26","statements":[{"nodeType":"YulAssignment","src":"32947:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33013:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"33018:2:26","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32954:58:26"},"nodeType":"YulFunctionCall","src":"32954:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32947:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33119:3:26"}],"functionName":{"name":"store_literal_in_memory_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9","nodeType":"YulIdentifier","src":"33030:88:26"},"nodeType":"YulFunctionCall","src":"33030:93:26"},"nodeType":"YulExpressionStatement","src":"33030:93:26"},{"nodeType":"YulAssignment","src":"33132:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33143:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"33148:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33139:3:26"},"nodeType":"YulFunctionCall","src":"33139:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33132:3:26"}]}]},"name":"abi_encode_t_stringliteral_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32925:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32933:3:26","type":""}],"src":"32791:366:26"},{"body":{"nodeType":"YulBlock","src":"33334:248:26","statements":[{"nodeType":"YulAssignment","src":"33344:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33356:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33367:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33352:3:26"},"nodeType":"YulFunctionCall","src":"33352:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33344:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33391:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33402:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33387:3:26"},"nodeType":"YulFunctionCall","src":"33387:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33410:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"33416:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33406:3:26"},"nodeType":"YulFunctionCall","src":"33406:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33380:6:26"},"nodeType":"YulFunctionCall","src":"33380:47:26"},"nodeType":"YulExpressionStatement","src":"33380:47:26"},{"nodeType":"YulAssignment","src":"33436:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33570:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33444:124:26"},"nodeType":"YulFunctionCall","src":"33444:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33436:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33314:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33329:4:26","type":""}],"src":"33163:419:26"},{"body":{"nodeType":"YulBlock","src":"33694:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33716:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"33724:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33712:3:26"},"nodeType":"YulFunctionCall","src":"33712:14:26"},{"hexValue":"5769746864726177206e6f7420747261646572","kind":"string","nodeType":"YulLiteral","src":"33728:21:26","type":"","value":"Withdraw not trader"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33705:6:26"},"nodeType":"YulFunctionCall","src":"33705:45:26"},"nodeType":"YulExpressionStatement","src":"33705:45:26"}]},"name":"store_literal_in_memory_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33686:6:26","type":""}],"src":"33588:169:26"},{"body":{"nodeType":"YulBlock","src":"33909:220:26","statements":[{"nodeType":"YulAssignment","src":"33919:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33985:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"33990:2:26","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33926:58:26"},"nodeType":"YulFunctionCall","src":"33926:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33919:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34091:3:26"}],"functionName":{"name":"store_literal_in_memory_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367","nodeType":"YulIdentifier","src":"34002:88:26"},"nodeType":"YulFunctionCall","src":"34002:93:26"},"nodeType":"YulExpressionStatement","src":"34002:93:26"},{"nodeType":"YulAssignment","src":"34104:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34115:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"34120:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34111:3:26"},"nodeType":"YulFunctionCall","src":"34111:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34104:3:26"}]}]},"name":"abi_encode_t_stringliteral_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33897:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33905:3:26","type":""}],"src":"33763:366:26"},{"body":{"nodeType":"YulBlock","src":"34306:248:26","statements":[{"nodeType":"YulAssignment","src":"34316:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34328:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34339:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34324:3:26"},"nodeType":"YulFunctionCall","src":"34324:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34316:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34363:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34374:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34359:3:26"},"nodeType":"YulFunctionCall","src":"34359:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34382:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"34388:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34378:3:26"},"nodeType":"YulFunctionCall","src":"34378:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34352:6:26"},"nodeType":"YulFunctionCall","src":"34352:47:26"},"nodeType":"YulExpressionStatement","src":"34352:47:26"},{"nodeType":"YulAssignment","src":"34408:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34542:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34416:124:26"},"nodeType":"YulFunctionCall","src":"34416:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34408:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34286:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34301:4:26","type":""}],"src":"34135:419:26"},{"body":{"nodeType":"YulBlock","src":"34666:68:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34688:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"34696:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34684:3:26"},"nodeType":"YulFunctionCall","src":"34684:14:26"},{"hexValue":"5769746864726177205665726966696572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"34700:26:26","type":"","value":"Withdraw Verifier failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34677:6:26"},"nodeType":"YulFunctionCall","src":"34677:50:26"},"nodeType":"YulExpressionStatement","src":"34677:50:26"}]},"name":"store_literal_in_memory_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34658:6:26","type":""}],"src":"34560:174:26"},{"body":{"nodeType":"YulBlock","src":"34886:220:26","statements":[{"nodeType":"YulAssignment","src":"34896:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34962:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"34967:2:26","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34903:58:26"},"nodeType":"YulFunctionCall","src":"34903:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34896:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35068:3:26"}],"functionName":{"name":"store_literal_in_memory_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983","nodeType":"YulIdentifier","src":"34979:88:26"},"nodeType":"YulFunctionCall","src":"34979:93:26"},"nodeType":"YulExpressionStatement","src":"34979:93:26"},{"nodeType":"YulAssignment","src":"35081:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35092:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"35097:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35088:3:26"},"nodeType":"YulFunctionCall","src":"35088:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35081:3:26"}]}]},"name":"abi_encode_t_stringliteral_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34874:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34882:3:26","type":""}],"src":"34740:366:26"},{"body":{"nodeType":"YulBlock","src":"35283:248:26","statements":[{"nodeType":"YulAssignment","src":"35293:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35305:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35316:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35301:3:26"},"nodeType":"YulFunctionCall","src":"35301:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35293:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35340:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35351:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35336:3:26"},"nodeType":"YulFunctionCall","src":"35336:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35359:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"35365:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35355:3:26"},"nodeType":"YulFunctionCall","src":"35355:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35329:6:26"},"nodeType":"YulFunctionCall","src":"35329:47:26"},"nodeType":"YulExpressionStatement","src":"35329:47:26"},{"nodeType":"YulAssignment","src":"35385:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35519:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35393:124:26"},"nodeType":"YulFunctionCall","src":"35393:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35385:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35263:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35278:4:26","type":""}],"src":"35112:419:26"},{"body":{"nodeType":"YulBlock","src":"35643:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35665:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"35673:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35661:3:26"},"nodeType":"YulFunctionCall","src":"35661:14:26"},{"hexValue":"496e646578206f7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"35677:21:26","type":"","value":"Index out of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35654:6:26"},"nodeType":"YulFunctionCall","src":"35654:45:26"},"nodeType":"YulExpressionStatement","src":"35654:45:26"}]},"name":"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35635:6:26","type":""}],"src":"35537:169:26"},{"body":{"nodeType":"YulBlock","src":"35858:220:26","statements":[{"nodeType":"YulAssignment","src":"35868:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35934:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"35939:2:26","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35875:58:26"},"nodeType":"YulFunctionCall","src":"35875:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35868:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36040:3:26"}],"functionName":{"name":"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","nodeType":"YulIdentifier","src":"35951:88:26"},"nodeType":"YulFunctionCall","src":"35951:93:26"},"nodeType":"YulExpressionStatement","src":"35951:93:26"},{"nodeType":"YulAssignment","src":"36053:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36064:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"36069:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36060:3:26"},"nodeType":"YulFunctionCall","src":"36060:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36053:3:26"}]}]},"name":"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35846:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35854:3:26","type":""}],"src":"35712:366:26"},{"body":{"nodeType":"YulBlock","src":"36255:248:26","statements":[{"nodeType":"YulAssignment","src":"36265:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36277:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36288:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36273:3:26"},"nodeType":"YulFunctionCall","src":"36273:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36265:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36312:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36323:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36308:3:26"},"nodeType":"YulFunctionCall","src":"36308:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36331:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"36337:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36327:3:26"},"nodeType":"YulFunctionCall","src":"36327:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36301:6:26"},"nodeType":"YulFunctionCall","src":"36301:47:26"},"nodeType":"YulExpressionStatement","src":"36301:47:26"},{"nodeType":"YulAssignment","src":"36357:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36491:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36365:124:26"},"nodeType":"YulFunctionCall","src":"36365:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36357:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36235:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36250:4:26","type":""}],"src":"36084:419:26"},{"body":{"nodeType":"YulBlock","src":"36537:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36554:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36557:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36547:6:26"},"nodeType":"YulFunctionCall","src":"36547:88:26"},"nodeType":"YulExpressionStatement","src":"36547:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36651:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"36654:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36644:6:26"},"nodeType":"YulFunctionCall","src":"36644:15:26"},"nodeType":"YulExpressionStatement","src":"36644:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36675:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36678:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36668:6:26"},"nodeType":"YulFunctionCall","src":"36668:15:26"},"nodeType":"YulExpressionStatement","src":"36668:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"36509:180:26"},{"body":{"nodeType":"YulBlock","src":"36746:51:26","statements":[{"nodeType":"YulAssignment","src":"36756:34:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36781:1:26","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"36784:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"36777:3:26"},"nodeType":"YulFunctionCall","src":"36777:13:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"36756:8:26"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36727:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"36737:8:26","type":""}],"src":"36695:102:26"},{"body":{"nodeType":"YulBlock","src":"36876:775:26","statements":[{"nodeType":"YulAssignment","src":"36886:15:26","value":{"name":"_power","nodeType":"YulIdentifier","src":"36895:6:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"36886:5:26"}]},{"nodeType":"YulAssignment","src":"36910:14:26","value":{"name":"_base","nodeType":"YulIdentifier","src":"36919:5:26"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"36910:4:26"}]},{"body":{"nodeType":"YulBlock","src":"36968:677:26","statements":[{"body":{"nodeType":"YulBlock","src":"37056:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37058:16:26"},"nodeType":"YulFunctionCall","src":"37058:18:26"},"nodeType":"YulExpressionStatement","src":"37058:18:26"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"37034:4:26"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"37044:3:26"},{"name":"base","nodeType":"YulIdentifier","src":"37049:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"37040:3:26"},"nodeType":"YulFunctionCall","src":"37040:14:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37031:2:26"},"nodeType":"YulFunctionCall","src":"37031:24:26"},"nodeType":"YulIf","src":"37028:50:26"},{"body":{"nodeType":"YulBlock","src":"37123:419:26","statements":[{"nodeType":"YulAssignment","src":"37503:25:26","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"37516:5:26"},{"name":"base","nodeType":"YulIdentifier","src":"37523:4:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37512:3:26"},"nodeType":"YulFunctionCall","src":"37512:16:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"37503:5:26"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"37098:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"37108:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37094:3:26"},"nodeType":"YulFunctionCall","src":"37094:16:26"},"nodeType":"YulIf","src":"37091:451:26"},{"nodeType":"YulAssignment","src":"37555:23:26","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"37567:4:26"},{"name":"base","nodeType":"YulIdentifier","src":"37573:4:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37563:3:26"},"nodeType":"YulFunctionCall","src":"37563:15:26"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"37555:4:26"}]},{"nodeType":"YulAssignment","src":"37591:44:26","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"37626:8:26"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"37603:22:26"},"nodeType":"YulFunctionCall","src":"37603:32:26"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"37591:8:26"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"36944:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"36954:1:26","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36941:2:26"},"nodeType":"YulFunctionCall","src":"36941:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"36957:2:26","statements":[]},"pre":{"nodeType":"YulBlock","src":"36937:3:26","statements":[]},"src":"36933:712:26"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"36831:6:26","type":""},{"name":"_base","nodeType":"YulTypedName","src":"36839:5:26","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"36846:8:26","type":""},{"name":"max","nodeType":"YulTypedName","src":"36856:3:26","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"36864:5:26","type":""},{"name":"base","nodeType":"YulTypedName","src":"36871:4:26","type":""}],"src":"36803:848:26"},{"body":{"nodeType":"YulBlock","src":"37717:1013:26","statements":[{"body":{"nodeType":"YulBlock","src":"37912:20:26","statements":[{"nodeType":"YulAssignment","src":"37914:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"37923:1:26","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"37914:5:26"}]},{"nodeType":"YulLeave","src":"37925:5:26"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"37902:8:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37895:6:26"},"nodeType":"YulFunctionCall","src":"37895:16:26"},"nodeType":"YulIf","src":"37892:40:26"},{"body":{"nodeType":"YulBlock","src":"37957:20:26","statements":[{"nodeType":"YulAssignment","src":"37959:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"37968:1:26","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"37959:5:26"}]},{"nodeType":"YulLeave","src":"37970:5:26"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"37951:4:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37944:6:26"},"nodeType":"YulFunctionCall","src":"37944:12:26"},"nodeType":"YulIf","src":"37941:36:26"},{"cases":[{"body":{"nodeType":"YulBlock","src":"38087:20:26","statements":[{"nodeType":"YulAssignment","src":"38089:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"38098:1:26","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"38089:5:26"}]},{"nodeType":"YulLeave","src":"38100:5:26"}]},"nodeType":"YulCase","src":"38080:27:26","value":{"kind":"number","nodeType":"YulLiteral","src":"38085:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"38131:176:26","statements":[{"body":{"nodeType":"YulBlock","src":"38166:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"38168:16:26"},"nodeType":"YulFunctionCall","src":"38168:18:26"},"nodeType":"YulExpressionStatement","src":"38168:18:26"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"38151:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"38161:3:26","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38148:2:26"},"nodeType":"YulFunctionCall","src":"38148:17:26"},"nodeType":"YulIf","src":"38145:43:26"},{"nodeType":"YulAssignment","src":"38201:25:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38214:1:26","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"38217:8:26"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"38210:3:26"},"nodeType":"YulFunctionCall","src":"38210:16:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"38201:5:26"}]},{"body":{"nodeType":"YulBlock","src":"38257:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"38259:16:26"},"nodeType":"YulFunctionCall","src":"38259:18:26"},"nodeType":"YulExpressionStatement","src":"38259:18:26"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"38245:5:26"},{"name":"max","nodeType":"YulIdentifier","src":"38252:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38242:2:26"},"nodeType":"YulFunctionCall","src":"38242:14:26"},"nodeType":"YulIf","src":"38239:40:26"},{"nodeType":"YulLeave","src":"38292:5:26"}]},"nodeType":"YulCase","src":"38116:191:26","value":{"kind":"number","nodeType":"YulLiteral","src":"38121:1:26","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"38037:4:26"},"nodeType":"YulSwitch","src":"38030:277:26"},{"body":{"nodeType":"YulBlock","src":"38439:123:26","statements":[{"nodeType":"YulAssignment","src":"38453:28:26","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"38466:4:26"},{"name":"exponent","nodeType":"YulIdentifier","src":"38472:8:26"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"38462:3:26"},"nodeType":"YulFunctionCall","src":"38462:19:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"38453:5:26"}]},{"body":{"nodeType":"YulBlock","src":"38512:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"38514:16:26"},"nodeType":"YulFunctionCall","src":"38514:18:26"},"nodeType":"YulExpressionStatement","src":"38514:18:26"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"38500:5:26"},{"name":"max","nodeType":"YulIdentifier","src":"38507:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38497:2:26"},"nodeType":"YulFunctionCall","src":"38497:14:26"},"nodeType":"YulIf","src":"38494:40:26"},{"nodeType":"YulLeave","src":"38547:5:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"38342:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"38348:2:26","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"38339:2:26"},"nodeType":"YulFunctionCall","src":"38339:12:26"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"38356:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"38366:2:26","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"38353:2:26"},"nodeType":"YulFunctionCall","src":"38353:16:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38335:3:26"},"nodeType":"YulFunctionCall","src":"38335:35:26"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"38391:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"38397:3:26","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"38388:2:26"},"nodeType":"YulFunctionCall","src":"38388:13:26"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"38406:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"38416:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"38403:2:26"},"nodeType":"YulFunctionCall","src":"38403:16:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38384:3:26"},"nodeType":"YulFunctionCall","src":"38384:36:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"38319:2:26"},"nodeType":"YulFunctionCall","src":"38319:111:26"},"nodeType":"YulIf","src":"38316:246:26"},{"nodeType":"YulAssignment","src":"38572:57:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38606:1:26","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"38609:4:26"},{"name":"exponent","nodeType":"YulIdentifier","src":"38615:8:26"},{"name":"max","nodeType":"YulIdentifier","src":"38625:3:26"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"38587:18:26"},"nodeType":"YulFunctionCall","src":"38587:42:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"38572:5:26"},{"name":"base","nodeType":"YulIdentifier","src":"38579:4:26"}]},{"body":{"nodeType":"YulBlock","src":"38668:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"38670:16:26"},"nodeType":"YulFunctionCall","src":"38670:18:26"},"nodeType":"YulExpressionStatement","src":"38670:18:26"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"38645:5:26"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"38656:3:26"},{"name":"base","nodeType":"YulIdentifier","src":"38661:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"38652:3:26"},"nodeType":"YulFunctionCall","src":"38652:14:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38642:2:26"},"nodeType":"YulFunctionCall","src":"38642:25:26"},"nodeType":"YulIf","src":"38639:51:26"},{"nodeType":"YulAssignment","src":"38699:25:26","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"38712:5:26"},{"name":"base","nodeType":"YulIdentifier","src":"38719:4:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"38708:3:26"},"nodeType":"YulFunctionCall","src":"38708:16:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"38699:5:26"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"37687:4:26","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"37693:8:26","type":""},{"name":"max","nodeType":"YulTypedName","src":"37703:3:26","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"37711:5:26","type":""}],"src":"37657:1073:26"},{"body":{"nodeType":"YulBlock","src":"38800:161:26","statements":[{"nodeType":"YulAssignment","src":"38810:30:26","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"38835:4:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"38818:16:26"},"nodeType":"YulFunctionCall","src":"38818:22:26"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"38810:4:26"}]},{"nodeType":"YulAssignment","src":"38849:38:26","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"38878:8:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"38861:16:26"},"nodeType":"YulFunctionCall","src":"38861:26:26"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"38849:8:26"}]},{"nodeType":"YulAssignment","src":"38897:57:26","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"38927:4:26"},{"name":"exponent","nodeType":"YulIdentifier","src":"38933:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"38943:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"38906:20:26"},"nodeType":"YulFunctionCall","src":"38906:48:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"38897:5:26"}]}]},"name":"checked_exp_t_uint32_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"38775:4:26","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"38781:8:26","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"38794:5:26","type":""}],"src":"38736:225:26"},{"body":{"nodeType":"YulBlock","src":"39073:129:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39095:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"39103:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39091:3:26"},"nodeType":"YulFunctionCall","src":"39091:14:26"},{"hexValue":"4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c6561","kind":"string","nodeType":"YulLiteral","src":"39107:34:26","type":"","value":"Merkle tree is full. No more lea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39084:6:26"},"nodeType":"YulFunctionCall","src":"39084:58:26"},"nodeType":"YulExpressionStatement","src":"39084:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39163:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"39171:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39159:3:26"},"nodeType":"YulFunctionCall","src":"39159:15:26"},{"hexValue":"7665732063616e206265206164646564","kind":"string","nodeType":"YulLiteral","src":"39176:18:26","type":"","value":"ves can be added"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39152:6:26"},"nodeType":"YulFunctionCall","src":"39152:43:26"},"nodeType":"YulExpressionStatement","src":"39152:43:26"}]},"name":"store_literal_in_memory_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39065:6:26","type":""}],"src":"38967:235:26"},{"body":{"nodeType":"YulBlock","src":"39354:220:26","statements":[{"nodeType":"YulAssignment","src":"39364:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39430:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"39435:2:26","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39371:58:26"},"nodeType":"YulFunctionCall","src":"39371:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39364:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39536:3:26"}],"functionName":{"name":"store_literal_in_memory_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f","nodeType":"YulIdentifier","src":"39447:88:26"},"nodeType":"YulFunctionCall","src":"39447:93:26"},"nodeType":"YulExpressionStatement","src":"39447:93:26"},{"nodeType":"YulAssignment","src":"39549:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39560:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"39565:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39556:3:26"},"nodeType":"YulFunctionCall","src":"39556:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39549:3:26"}]}]},"name":"abi_encode_t_stringliteral_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39342:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39350:3:26","type":""}],"src":"39208:366:26"},{"body":{"nodeType":"YulBlock","src":"39751:248:26","statements":[{"nodeType":"YulAssignment","src":"39761:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39773:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"39784:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39769:3:26"},"nodeType":"YulFunctionCall","src":"39769:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39761:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39808:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"39819:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39804:3:26"},"nodeType":"YulFunctionCall","src":"39804:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39827:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"39833:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39823:3:26"},"nodeType":"YulFunctionCall","src":"39823:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39797:6:26"},"nodeType":"YulFunctionCall","src":"39797:47:26"},"nodeType":"YulExpressionStatement","src":"39797:47:26"},{"nodeType":"YulAssignment","src":"39853:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39987:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39861:124:26"},"nodeType":"YulFunctionCall","src":"39861:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39853:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39731:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39746:4:26","type":""}],"src":"39580:419:26"},{"body":{"nodeType":"YulBlock","src":"40038:140:26","statements":[{"nodeType":"YulAssignment","src":"40048:24:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40070:1:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"40053:16:26"},"nodeType":"YulFunctionCall","src":"40053:19:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40048:1:26"}]},{"nodeType":"YulAssignment","src":"40081:24:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40103:1:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"40086:16:26"},"nodeType":"YulFunctionCall","src":"40086:19:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40081:1:26"}]},{"body":{"nodeType":"YulBlock","src":"40127:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"40129:16:26"},"nodeType":"YulFunctionCall","src":"40129:18:26"},"nodeType":"YulExpressionStatement","src":"40129:18:26"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40124:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40117:6:26"},"nodeType":"YulFunctionCall","src":"40117:9:26"},"nodeType":"YulIf","src":"40114:35:26"},{"nodeType":"YulAssignment","src":"40158:14:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40167:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"40170:1:26"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"40163:3:26"},"nodeType":"YulFunctionCall","src":"40163:9:26"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"40158:1:26"}]}]},"name":"mod_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40027:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"40030:1:26","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"40036:1:26","type":""}],"src":"40005:173:26"},{"body":{"nodeType":"YulBlock","src":"40225:141:26","statements":[{"nodeType":"YulAssignment","src":"40235:24:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40257:1:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"40240:16:26"},"nodeType":"YulFunctionCall","src":"40240:19:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40235:1:26"}]},{"nodeType":"YulAssignment","src":"40268:24:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40290:1:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"40273:16:26"},"nodeType":"YulFunctionCall","src":"40273:19:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40268:1:26"}]},{"body":{"nodeType":"YulBlock","src":"40314:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"40316:16:26"},"nodeType":"YulFunctionCall","src":"40316:18:26"},"nodeType":"YulExpressionStatement","src":"40316:18:26"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40311:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40304:6:26"},"nodeType":"YulFunctionCall","src":"40304:9:26"},"nodeType":"YulIf","src":"40301:35:26"},{"nodeType":"YulAssignment","src":"40346:14:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40355:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"40358:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"40351:3:26"},"nodeType":"YulFunctionCall","src":"40351:9:26"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"40346:1:26"}]}]},"name":"checked_div_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40214:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"40217:1:26","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"40223:1:26","type":""}],"src":"40184:182:26"},{"body":{"nodeType":"YulBlock","src":"40414:133:26","statements":[{"nodeType":"YulAssignment","src":"40424:32:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40450:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"40433:16:26"},"nodeType":"YulFunctionCall","src":"40433:23:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"40424:5:26"}]},{"body":{"nodeType":"YulBlock","src":"40490:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"40492:16:26"},"nodeType":"YulFunctionCall","src":"40492:18:26"},"nodeType":"YulExpressionStatement","src":"40492:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40471:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"40478:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"40468:2:26"},"nodeType":"YulFunctionCall","src":"40468:21:26"},"nodeType":"YulIf","src":"40465:47:26"},{"nodeType":"YulAssignment","src":"40521:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40532:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"40539:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40528:3:26"},"nodeType":"YulFunctionCall","src":"40528:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"40521:3:26"}]}]},"name":"increment_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40400:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"40410:3:26","type":""}],"src":"40372:175:26"},{"body":{"nodeType":"YulBlock","src":"40596:154:26","statements":[{"nodeType":"YulAssignment","src":"40606:24:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40628:1:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"40611:16:26"},"nodeType":"YulFunctionCall","src":"40611:19:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40606:1:26"}]},{"nodeType":"YulAssignment","src":"40639:24:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40661:1:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"40644:16:26"},"nodeType":"YulFunctionCall","src":"40644:19:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40639:1:26"}]},{"nodeType":"YulAssignment","src":"40672:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40683:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"40686:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40679:3:26"},"nodeType":"YulFunctionCall","src":"40679:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"40672:3:26"}]},{"body":{"nodeType":"YulBlock","src":"40721:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"40723:16:26"},"nodeType":"YulFunctionCall","src":"40723:18:26"},"nodeType":"YulExpressionStatement","src":"40723:18:26"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"40704:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"40709:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40701:2:26"},"nodeType":"YulFunctionCall","src":"40701:19:26"},"nodeType":"YulIf","src":"40698:45:26"}]},"name":"checked_add_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40583:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"40586:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"40592:3:26","type":""}],"src":"40553:197:26"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IFinalizeVerifier_$49_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IFinalizeVerifier_$49_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IFinalizeVerifier_$49_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IFinalizeVerifier_$49__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IFinalizeVerifier_$49_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IDepositVerifier_$13_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IDepositVerifier_$13_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDepositVerifier_$13_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IDepositVerifier_$13__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDepositVerifier_$13_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ERC20_$4386_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$4386_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$4386_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$4386__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$4386_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function cleanup_t_uint120(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint120_to_t_uint120_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint120(value))\n    }\n\n    function abi_encode_tuple_t_uint8_t_uint120_t_uint120__to_t_uint8_t_uint120_t_uint120__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint120_to_t_uint120_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint120_to_t_uint120_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct ModelOutput\n    function abi_decode_t_struct$_ModelOutput_$648_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 64) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes32t_struct$_ModelOutput_$648_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_struct$_ModelOutput_$648_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_NodeStatus_$655(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_NodeStatus_$655(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_NodeStatus_$655(value)\n    }\n\n    function convert_t_enum$_NodeStatus_$655_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_NodeStatus_$655(value)\n    }\n\n    function abi_encode_t_enum$_NodeStatus_$655_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_NodeStatus_$655_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_NodeStatus_$655__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_NodeStatus_$655_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IWithdrawVerifier_$25_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IWithdrawVerifier_$25_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IWithdrawVerifier_$25_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IWithdrawVerifier_$25__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IWithdrawVerifier_$25_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ISwapVerifier_$37_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapVerifier_$37_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapVerifier_$37_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapVerifier_$37__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapVerifier_$37_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IHasher_$63(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IHasher_$63(value) {\n        if iszero(eq(value, cleanup_t_contract$_IHasher_$63(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IHasher_$63(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IHasher_$63(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IHasher_$63t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IHasher_$63(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IHasher_$63_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IHasher_$63_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IHasher_$63_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IHasher_$63__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IHasher_$63_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint248(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint248(value) {\n        if iszero(eq(value, cleanup_t_uint248(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint248(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint248(value)\n    }\n\n    function abi_decode_tuple_t_uint248(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint248(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_left_248(value) -> newValue {\n        newValue :=\n\n        shl(248, value)\n\n    }\n\n    function leftAlign_t_uint8(value) -> aligned {\n        aligned := shift_left_248(value)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint8(cleanup_t_uint8(value)))\n    }\n\n    function shift_left_8(value) -> newValue {\n        newValue :=\n\n        shl(8, value)\n\n    }\n\n    function leftAlign_t_uint248(value) -> aligned {\n        aligned := shift_left_8(value)\n    }\n\n    function abi_encode_t_uint248_to_t_uint248_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint248(cleanup_t_uint248(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint8_t_uint248__to_t_uint8_t_uint248__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 1)\n\n        abi_encode_t_uint248_to_t_uint248_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 31)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$4_memory_ptr(value) -> length {\n\n        length := 0x04\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$4_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$4_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$4_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[4] -> uint256[4]\n    function abi_encode_t_array$_t_uint256_$4_memory_ptr_to_t_array$_t_uint256_$4_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$4_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$4_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$4_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$4_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$4_memory_ptr_t_bytes_calldata_ptr__to_t_array$_t_uint256_$4_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_array$_t_uint256_$4_memory_ptr_to_t_array$_t_uint256_$4_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Swap Verifier failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b2d1fbffe506301108019a4ddf86f8955286e32c3252ffed972732332ff35dd6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit not trader\")\n\n    }\n\n    function abi_encode_t_stringliteral_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d00801e29eb4f22e113b5f0af0b6d95de05be0745753fba4daa99ae0bce1d69_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_array$_t_uint256_$5_memory_ptr(value) -> length {\n\n        length := 0x05\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$5_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$5_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[5] -> uint256[5]\n    function abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$5_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$5_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$5_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr_t_bytes_calldata_ptr__to_t_array$_t_uint256_$5_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function store_literal_in_memory_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit Verifier failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6af293b5e6a6b188a216749ddf246adadeb06ddae8de7f52838145aa382af282_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e(memPtr) {\n\n        mstore(add(memPtr, 0), \"_left should be inside the field\")\n\n    }\n\n    function abi_encode_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_484a118bbfb5f36c2b9c9ea96bab229f2cb51c08909f46858af4284d072ce09e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e(memPtr) {\n\n        mstore(add(memPtr, 0), \"_right should be inside the fiel\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6542fa7ce511fbc255ce93f94c5fe79a03559888b6c0d6b4bd92b57ef65f3b4e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_array$_t_uint256_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[3] -> uint256[3]\n    function abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr_t_bytes_calldata_ptr__to_t_array$_t_uint256_$3_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function store_literal_in_memory_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9(memPtr) {\n\n        mstore(add(memPtr, 0), \"finalize: verify failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3005b4a122af68cba445f22585a35e05bf03cf9a50604fe57b569bf4dd23db9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw not trader\")\n\n    }\n\n    function abi_encode_t_stringliteral_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43f7fdb50b14c05a860a770937f8d42df7a423f41ebd1b226eb47460ad54e367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw Verifier failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e02af87a6492870ea37723bc68ee095ce13d967298d7876842f6cf5d2291983_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(memPtr) {\n\n        mstore(add(memPtr, 0), \"Index out of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint32_t_uint32(base, exponent) -> power {\n        base := cleanup_t_uint32(base)\n        exponent := cleanup_t_uint32(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffff)\n\n    }\n\n    function store_literal_in_memory_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Merkle tree is full. No more lea\")\n\n        mstore(add(memPtr, 32), \"ves can be added\")\n\n    }\n\n    function abi_encode_t_stringliteral_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e1b0d3223b576af8acefbf4bc415cabe89147b071ad734930a1eafe9157c844f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function mod_t_uint32(x, y) -> r {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_div_t_uint32(x, y) -> r {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint32(x, y) -> sum {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffff) { panic_error_0x11() }\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"72":[{"length":32,"start":6877},{"length":32,"start":7375}],"667":[{"length":32,"start":2743},{"length":32,"start":4749},{"length":32,"start":6959}],"670":[{"length":32,"start":1217},{"length":32,"start":2904},{"length":32,"start":4910}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101425760003560e01c80638de533a4116100b8578063ebf0c7171161007c578063ebf0c7171461037d578063ec7329591461039b578063ed33639f146103b9578063f178e47c146103d7578063fc7e9c6f14610407578063ff709ee81461042557610142565b80638de533a4146102c75780638ea3099e146102e5578063aefb78d014610315578063c4b5239f14610331578063e82955881461034d57610142565b80634ecf518b1161010a5780634ecf518b146101dd578063513a4f07146101fb5780635c758f8e1461022d57806361c3305c14610249578063823db3d214610279578063864eb164146102a957610142565b806314fd7b351461014757806326120c8814610165578063414a37ba14610183578063479015cd146101a1578063499f712e146101bf575b600080fd5b61014f610443565b60405161015c9190611e7f565b60405180910390f35b61016d610469565b60405161017a9190611ebb565b60405180910390f35b61018b61048f565b6040516101989190611eef565b60405180910390f35b6101a96104b3565b6040516101b69190611eef565b60405180910390f35b6101c76104bf565b6040516101d49190611f2b565b60405180910390f35b6101e56104e3565b6040516101f29190611f65565b60405180910390f35b61021560048036038101906102109190611fc0565b6104f7565b60405161022493929190612033565b60405180910390f35b610247600480360381019061024291906120f3565b610564565b005b610263600480360381019061025e9190611fc0565b61081e565b60405161027091906121de565b60405180910390f35b610293600480360381019061028e9190612263565b61083e565b6040516102a09190611f65565b60405180910390f35b6102b1610c0d565b6040516102be919061231e565b60405180910390f35b6102cf610c33565b6040516102dc919061235a565b60405180910390f35b6102ff60048036038101906102fa91906123b3565b610c59565b60405161030c9190612415565b60405180910390f35b61032f600480360381019061032a9190612430565b610e7b565b005b61034b60048036038101906103469190612263565b611082565b005b610367600480360381019061036291906124a4565b611412565b6040516103749190612415565b60405180910390f35b610385611ab1565b6040516103929190612415565b60405180910390f35b6103a3611ab7565b6040516103b09190611eef565b60405180910390f35b6103c1611adb565b6040516103ce91906124f2565b60405180910390f35b6103f160048036038101906103ec91906124a4565b611aff565b6040516103fe9190612415565b60405180910390f35b61040f611b17565b60405161041c9190611f65565b60405180910390f35b61042d611b2d565b60405161043a9190611f2b565b60405180910390f35b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60078060000154905081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900463ffffffff1681565b60096020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a90046effffffffffffffffffffffffffffff16908060000160109054906101000a90046effffffffffffffffffffffffffffff16905083565b61056c611d54565b60025460001c816000600481106105865761058561250d565b5b6020020181815250508460001c816001600481106105a7576105a661250d565b5b602002018181525050600760000154816002600481106105ca576105c961250d565b5b6020020181815250508360000160208101906105e69190612568565b8460200160208101906105f991906125ec565b60405160200161060a929190612685565b604051602081830303815290604052610622906126ee565b60001c816003600481106106395761063861250d565b5b602002018181525050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663404568b58285856040518463ffffffff1660e01b81526004016106a19392919061285e565b602060405180830381865afa1580156106be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e291906128c8565b610721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071890612952565b60405180910390fd5b61072a84611b51565b6009600087815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a8154816effffffffffffffffffffffffffffff02191690836effffffffffffffffffffffffffffff16021790555060408201518160000160106101000a8154816effffffffffffffffffffffffffffff02191690836effffffffffffffffffffffffffffff16021790555090505060016008600087815260200190815260200160002060006101000a81548160ff0219169083600281111561081257610811612167565b5b02179055505050505050565b60086020528060005260406000206000915054906101000a900460ff1681565b6000610848611d76565b8760001c816000600581106108605761085f61250d565b5b6020020181815250508473ffffffffffffffffffffffffffffffffffffffff1663b2b4e62f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d89190612987565b60001c816001600581106108ef576108ee61250d565b5b602002018181525050868160026005811061090d5761090c61250d565b5b602002018181525050858160036005811061092b5761092a61250d565b5b6020020181815250508473ffffffffffffffffffffffffffffffffffffffff168160046005811061095f5761095e61250d565b5b6020020181815250508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cd90612a00565b60405180910390fd5b600360049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663839ded658286866040518463ffffffff1660e01b8152600401610a3593929190612aa4565b602060405180830381865afa158015610a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7691906128c8565b610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac90612b22565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd86308a6040518463ffffffff1660e01b8152600401610b1293929190612b51565b6020604051808303816000875af1158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5591906128c8565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8630896040518463ffffffff1660e01b8152600401610bb393929190612b51565b6020604051808303816000875af1158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf691906128c8565b50610c0088611ba3565b9150509695505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c10610cc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb790612bd4565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10610d25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1c90612c66565b60405180910390fd5b60008360001c905060008573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b8152600401610d6a929190612c86565b6040805180830381865afa158015610d86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610daa9190612cc4565b80925081935050507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180610de157610de0612d04565b5b8460001c830891508573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b8152600401610e24929190612c86565b6040805180830381865afa158015610e40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e649190612cc4565b80925081935050508160001b925050509392505050565b610e83611d98565b60025460001c81600060038110610e9d57610e9c61250d565b5b6020020181815250508460001c81600160038110610ebe57610ebd61250d565b5b6020020181815250508360001c81600260038110610edf57610ede61250d565b5b602002018181525050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637509e3798285856040518463ffffffff1660e01b8152600401610f4793929190612db7565b602060405180830381865afa158015610f64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8891906128c8565b610fc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbe90612e35565b60405180910390fd5b610fd084611ba3565b5060096000868152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a8154906effffffffffffffffffffffffffffff02191690556000820160106101000a8154906effffffffffffffffffffffffffffff0219169055505060026008600087815260200190815260200160002060006101000a81548160ff0219169083600281111561107657611075612167565b5b02179055505050505050565b61108a611d76565b60025460001c816000600581106110a4576110a361250d565b5b6020020181815250508660001c816001600581106110c5576110c461250d565b5b60200201818152505085816002600581106110e3576110e261250d565b5b60200201818152505084816003600581106111015761110061250d565b5b6020020181815250508373ffffffffffffffffffffffffffffffffffffffff16816004600581106111355761113461250d565b5b6020020181815250508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a390612ea1565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663839ded658285856040518463ffffffff1660e01b815260040161120b93929190612aa4565b602060405180830381865afa158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c91906128c8565b61128b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128290612f0d565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3086896040518463ffffffff1660e01b81526004016112e893929190612b51565b6020604051808303816000875af1158015611307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132b91906128c8565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3086886040518463ffffffff1660e01b815260040161138993929190612b51565b6020604051808303816000875af11580156113a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cc91906128c8565b5060026008600089815260200190815260200160002060006101000a81548160ff0219169083600281111561140457611403612167565b5b021790555050505050505050565b6000808203611446577f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b9050611aac565b60018203611479577f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d60001b9050611aac565b600282036114ac577f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20060001b9050611aac565b600382036114df577f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb60001b9050611aac565b60048203611512577f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c960001b9050611aac565b60058203611545577f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495960001b9050611aac565b60068203611578577f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c60001b9050611aac565b600782036115ab577f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb460001b9050611aac565b600882036115de577f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8060001b9050611aac565b60098203611610577e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00760001b9050611aac565b600a8203611643577f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3060001b9050611aac565b600b8203611676577f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e560001b9050611aac565b600c82036116a9577f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f60001b9050611aac565b600d82036116dc577f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd60001b9050611aac565b600e820361170f577f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10860001b9050611aac565b600f8203611742577f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b660001b9050611aac565b60108203611775577f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185460001b9050611aac565b601182036117a8577f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea60001b9050611aac565b601282036117db577f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d60001b9050611aac565b6013820361180e577f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0560001b9050611aac565b60148203611841577f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d460001b9050611aac565b60158203611874577f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296760001b9050611aac565b601682036118a7577f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345360001b9050611aac565b601782036118da577f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4860001b9050611aac565b6018820361190d577f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd160001b9050611aac565b60198203611940577f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c60001b9050611aac565b601a8203611973577f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9960001b9050611aac565b601b82036119a6577f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35460001b9050611aac565b601c82036119d8577e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d60001b9050611aac565b601d8203611a0b577f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42760001b9050611aac565b601e8203611a3e577f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb60001b9050611aac565b601f8203611a71577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc60001b9050611aac565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa390612f79565b60405180910390fd5b919050565b60025481565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090505481565b600360009054906101000a900463ffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b611b59611dba565b6040518060600160405280600060ff16815260200160006effffffffffffffffffffffffffffff16815260200160006effffffffffffffffffffffffffffff168152509050919050565b600080600360009054906101000a900463ffffffff16905060008054906101000a900463ffffffff166002611bd891906130fb565b63ffffffff168163ffffffff1603611c25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1c9061319c565b60405180910390fd5b6000819050600084905060008060005b60008054906101000a900463ffffffff1663ffffffff168163ffffffff161015611d19576000600286611c6891906131bc565b63ffffffff1603611caa57839250611c858163ffffffff16611412565b915083600160008363ffffffff16815260200190815260200160002081905550611cca565b600160008263ffffffff1681526020019081526020016000205492508391505b611cf57f00000000000000000000000000000000000000000000000000000000000000008484610c59565b9350600285611d0491906131ed565b94508080611d119061321e565b915050611c35565b50600185611d27919061324a565b600360006101000a81548163ffffffff021916908363ffffffff1602179055508495505050505050919050565b6040518060800160405280600490602082028036833780820191505090505090565b6040518060a00160405280600590602082028036833780820191505090505090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060600160405280600060ff16815260200160006effffffffffffffffffffffffffffff16815260200160006effffffffffffffffffffffffffffff1681525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611e45611e40611e3b84611e00565b611e20565b611e00565b9050919050565b6000611e5782611e2a565b9050919050565b6000611e6982611e4c565b9050919050565b611e7981611e5e565b82525050565b6000602082019050611e946000830184611e70565b92915050565b6000611ea582611e4c565b9050919050565b611eb581611e9a565b82525050565b6000602082019050611ed06000830184611eac565b92915050565b6000819050919050565b611ee981611ed6565b82525050565b6000602082019050611f046000830184611ee0565b92915050565b6000611f1582611e4c565b9050919050565b611f2581611f0a565b82525050565b6000602082019050611f406000830184611f1c565b92915050565b600063ffffffff82169050919050565b611f5f81611f46565b82525050565b6000602082019050611f7a6000830184611f56565b92915050565b600080fd5b600080fd5b6000819050919050565b611f9d81611f8a565b8114611fa857600080fd5b50565b600081359050611fba81611f94565b92915050565b600060208284031215611fd657611fd5611f80565b5b6000611fe484828501611fab565b91505092915050565b600060ff82169050919050565b61200381611fed565b82525050565b60006effffffffffffffffffffffffffffff82169050919050565b61202d81612009565b82525050565b60006060820190506120486000830186611ffa565b6120556020830185612024565b6120626040830184612024565b949350505050565b600080fd5b6000604082840312156120855761208461206a565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126120b3576120b261208e565b5b8235905067ffffffffffffffff8111156120d0576120cf612093565b5b6020830191508360018202830111156120ec576120eb612098565b5b9250929050565b6000806000806080858703121561210d5761210c611f80565b5b600061211b87828801611fab565b945050602061212c8782880161206f565b935050606085013567ffffffffffffffff81111561214d5761214c611f85565b5b6121598782880161209d565b925092505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106121a7576121a6612167565b5b50565b60008190506121b882612196565b919050565b60006121c8826121aa565b9050919050565b6121d8816121bd565b82525050565b60006020820190506121f360008301846121cf565b92915050565b61220281611ed6565b811461220d57600080fd5b50565b60008135905061221f816121f9565b92915050565b600061223082611e00565b9050919050565b61224081612225565b811461224b57600080fd5b50565b60008135905061225d81612237565b92915050565b60008060008060008060a087890312156122805761227f611f80565b5b600061228e89828a01611fab565b965050602061229f89828a01612210565b95505060406122b089828a01612210565b94505060606122c189828a0161224e565b935050608087013567ffffffffffffffff8111156122e2576122e1611f85565b5b6122ee89828a0161209d565b92509250509295509295509295565b600061230882611e4c565b9050919050565b612318816122fd565b82525050565b6000602082019050612333600083018461230f565b92915050565b600061234482611e4c565b9050919050565b61235481612339565b82525050565b600060208201905061236f600083018461234b565b92915050565b600061238082612225565b9050919050565b61239081612375565b811461239b57600080fd5b50565b6000813590506123ad81612387565b92915050565b6000806000606084860312156123cc576123cb611f80565b5b60006123da8682870161239e565b93505060206123eb86828701611fab565b92505060406123fc86828701611fab565b9150509250925092565b61240f81611f8a565b82525050565b600060208201905061242a6000830184612406565b92915050565b6000806000806060858703121561244a57612449611f80565b5b600061245887828801611fab565b945050602061246987828801611fab565b935050604085013567ffffffffffffffff81111561248a57612489611f85565b5b6124968782880161209d565b925092505092959194509250565b6000602082840312156124ba576124b9611f80565b5b60006124c884828501612210565b91505092915050565b60006124dc82611e4c565b9050919050565b6124ec816124d1565b82525050565b600060208201905061250760008301846124e3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61254581611fed565b811461255057600080fd5b50565b6000813590506125628161253c565b92915050565b60006020828403121561257e5761257d611f80565b5b600061258c84828501612553565b91505092915050565b60007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6125c981612595565b81146125d457600080fd5b50565b6000813590506125e6816125c0565b92915050565b60006020828403121561260257612601611f80565b5b6000612610848285016125d7565b91505092915050565b60008160f81b9050919050565b600061263182612619565b9050919050565b61264961264482611fed565b612626565b82525050565b60008160081b9050919050565b60006126678261264f565b9050919050565b61267f61267a82612595565b61265c565b82525050565b60006126918285612638565b6001820191506126a1828461266e565b601f820191508190509392505050565b600081519050919050565b6000819050602082019050919050565b60006126d88251611f8a565b80915050919050565b600082821b905092915050565b60006126f9826126b1565b82612703846126bc565b905061270e816126cc565b9250602082101561274e576127497fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026126e1565b831692505b5050919050565b600060049050919050565b600081905092915050565b6000819050919050565b61277e81611ed6565b82525050565b60006127908383612775565b60208301905092915050565b6000602082019050919050565b6127b281612755565b6127bc8184612760565b92506127c78261276b565b8060005b838110156127f85781516127df8782612784565b96506127ea8361279c565b9250506001810190506127cb565b505050505050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061283d8385612800565b935061284a838584612811565b61285383612820565b840190509392505050565b600060a08201905061287360008301866127a9565b8181036080830152612886818486612831565b9050949350505050565b60008115159050919050565b6128a581612890565b81146128b057600080fd5b50565b6000815190506128c28161289c565b92915050565b6000602082840312156128de576128dd611f80565b5b60006128ec848285016128b3565b91505092915050565b600082825260208201905092915050565b7f53776170205665726966696572206661696c6564000000000000000000000000600082015250565b600061293c6014836128f5565b915061294782612906565b602082019050919050565b6000602082019050818103600083015261296b8161292f565b9050919050565b60008151905061298181611f94565b92915050565b60006020828403121561299d5761299c611f80565b5b60006129ab84828501612972565b91505092915050565b7f4465706f736974206e6f74207472616465720000000000000000000000000000600082015250565b60006129ea6012836128f5565b91506129f5826129b4565b602082019050919050565b60006020820190508181036000830152612a19816129dd565b9050919050565b600060059050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b612a5681612a20565b612a608184612a2b565b9250612a6b82612a36565b8060005b83811015612a9c578151612a838782612784565b9650612a8e83612a40565b925050600181019050612a6f565b505050505050565b600060c082019050612ab96000830186612a4d565b81810360a0830152612acc818486612831565b9050949350505050565b7f4465706f736974205665726966696572206661696c6564000000000000000000600082015250565b6000612b0c6017836128f5565b9150612b1782612ad6565b602082019050919050565b60006020820190508181036000830152612b3b81612aff565b9050919050565b612b4b81612225565b82525050565b6000606082019050612b666000830186612b42565b612b736020830185612b42565b612b806040830184611ee0565b949350505050565b7f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64600082015250565b6000612bbe6020836128f5565b9150612bc982612b88565b602082019050919050565b60006020820190508181036000830152612bed81612bb1565b9050919050565b7f5f72696768742073686f756c6420626520696e7369646520746865206669656c60008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612c506021836128f5565b9150612c5b82612bf4565b604082019050919050565b60006020820190508181036000830152612c7f81612c43565b9050919050565b6000604082019050612c9b6000830185611ee0565b612ca86020830184611ee0565b9392505050565b600081519050612cbe816121f9565b92915050565b60008060408385031215612cdb57612cda611f80565b5b6000612ce985828601612caf565b9250506020612cfa85828601612caf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060039050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b612d6981612d33565b612d738184612d3e565b9250612d7e82612d49565b8060005b83811015612daf578151612d968782612784565b9650612da183612d53565b925050600181019050612d82565b505050505050565b6000608082019050612dcc6000830186612d60565b8181036060830152612ddf818486612831565b9050949350505050565b7f66696e616c697a653a20766572696679206661696c6564000000000000000000600082015250565b6000612e1f6017836128f5565b9150612e2a82612de9565b602082019050919050565b60006020820190508181036000830152612e4e81612e12565b9050919050565b7f5769746864726177206e6f742074726164657200000000000000000000000000600082015250565b6000612e8b6013836128f5565b9150612e9682612e55565b602082019050919050565b60006020820190508181036000830152612eba81612e7e565b9050919050565b7f5769746864726177205665726966696572206661696c65640000000000000000600082015250565b6000612ef76018836128f5565b9150612f0282612ec1565b602082019050919050565b60006020820190508181036000830152612f2681612eea565b9050919050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b6000612f636013836128f5565b9150612f6e82612f2d565b602082019050919050565b60006020820190508181036000830152612f9281612f56565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111561301f57808604811115612ffb57612ffa612f99565b5b600185161561300a5780820291505b808102905061301885612fc8565b9450612fdf565b94509492505050565b60008261303857600190506130f4565b8161304657600090506130f4565b816001811461305c576002811461306657613095565b60019150506130f4565b60ff84111561307857613077612f99565b5b8360020a91508482111561308f5761308e612f99565b5b506130f4565b5060208310610133831016604e8410600b84101617156130ca5782820a9050838111156130c5576130c4612f99565b5b6130f4565b6130d78484846001612fd5565b925090508184048111156130ee576130ed612f99565b5b81810290505b9392505050565b600061310682611f46565b915061311183611f46565b925061312263ffffffff8484613028565b905092915050565b7f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160008201527f7665732063616e20626520616464656400000000000000000000000000000000602082015250565b60006131866030836128f5565b91506131918261312a565b604082019050919050565b600060208201905081810360008301526131b581613179565b9050919050565b60006131c782611f46565b91506131d283611f46565b9250826131e2576131e1612d04565b5b828206905092915050565b60006131f882611f46565b915061320383611f46565b92508261321357613212612d04565b5b828204905092915050565b600061322982611f46565b915063ffffffff820361323f5761323e612f99565b5b600182019050919050565b600061325582611f46565b915061326083611f46565b9250828201905063ffffffff81111561327c5761327b612f99565b5b9291505056fea2646970667358221220d1e8d5ba4a0e871a7423a555ec9da90e72d3d025e54a217816fe2cc1ea7bc3a164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DE533A4 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xEBF0C717 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xEBF0C717 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xEC732959 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xED33639F EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xF178E47C EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xFC7E9C6F EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xFF709EE8 EQ PUSH2 0x425 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x8DE533A4 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x8EA3099E EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xAEFB78D0 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xC4B5239F EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xE8295588 EQ PUSH2 0x34D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x4ECF518B GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x4ECF518B EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x513A4F07 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x5C758F8E EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x61C3305C EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x823DB3D2 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x864EB164 EQ PUSH2 0x2A9 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x14FD7B35 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x26120C88 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x414A37BA EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x479015CD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x499F712E EQ PUSH2 0x1BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x1082 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x385 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40F PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42D PUSH2 0x1B2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP2 JUMP JUMPDEST PUSH1 0x7 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x56C PUSH2 0x1D54 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SHR DUP2 PUSH1 0x0 PUSH1 0x4 DUP2 LT PUSH2 0x586 JUMPI PUSH2 0x585 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH1 0x0 SHR DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x5A7 JUMPI PUSH2 0x5A6 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x7 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x5CA JUMPI PUSH2 0x5C9 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x60A SWAP3 SWAP2 SWAP1 PUSH2 0x2685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x622 SWAP1 PUSH2 0x26EE JUMP JUMPDEST PUSH1 0x0 SHR DUP2 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x639 JUMPI PUSH2 0x638 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x404568B5 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP1 PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72A DUP5 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x812 JUMPI PUSH2 0x811 PUSH2 0x2167 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 PUSH2 0x1D76 JUMP JUMPDEST DUP8 PUSH1 0x0 SHR DUP2 PUSH1 0x0 PUSH1 0x5 DUP2 LT PUSH2 0x860 JUMPI PUSH2 0x85F PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB2B4E62F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x0 SHR DUP2 PUSH1 0x1 PUSH1 0x5 DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x2 PUSH1 0x5 DUP2 LT PUSH2 0x90D JUMPI PUSH2 0x90C PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 PUSH1 0x3 PUSH1 0x5 DUP2 LT PUSH2 0x92B JUMPI PUSH2 0x92A PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 PUSH1 0x5 DUP2 LT PUSH2 0x95F JUMPI PUSH2 0x95E PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CD SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x839DED65 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA35 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA76 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAC SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB12 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB55 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP PUSH2 0xC00 DUP9 PUSH2 0x1BA3 JUMP JUMPDEST SWAP2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP4 PUSH1 0x0 SHR LT PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB7 SWAP1 PUSH2 0x2BD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP3 PUSH1 0x0 SHR LT PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1C SWAP1 PUSH2 0x2C66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF47D33B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP3 SWAP2 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP1 PUSH2 0xDE1 JUMPI PUSH2 0xDE0 PUSH2 0x2D04 JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x0 SHR DUP4 ADDMOD SWAP2 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF47D33B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE24 SWAP3 SWAP2 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE64 SWAP2 SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH1 0x0 SHL SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE83 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SHR DUP2 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0xE9D JUMPI PUSH2 0xE9C PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH1 0x0 SHR DUP2 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0xEBE JUMPI PUSH2 0xEBD PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x0 SHR DUP2 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0xEDF JUMPI PUSH2 0xEDE PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7509E379 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBE SWAP1 PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD0 DUP5 PUSH2 0x1BA3 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH1 0x2 PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1076 JUMPI PUSH2 0x1075 PUSH2 0x2167 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x108A PUSH2 0x1D76 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SHR DUP2 PUSH1 0x0 PUSH1 0x5 DUP2 LT PUSH2 0x10A4 JUMPI PUSH2 0x10A3 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP7 PUSH1 0x0 SHR DUP2 PUSH1 0x1 PUSH1 0x5 DUP2 LT PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 PUSH1 0x2 PUSH1 0x5 DUP2 LT PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x3 PUSH1 0x5 DUP2 LT PUSH2 0x1101 JUMPI PUSH2 0x1100 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 PUSH1 0x5 DUP2 LT PUSH2 0x1135 JUMPI PUSH2 0x1134 PUSH2 0x250D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A3 SWAP1 PUSH2 0x2EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x839DED65 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1228 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0x128B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1282 SWAP1 PUSH2 0x2F0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP7 DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1307 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x132B SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP7 DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1389 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13CC SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x8 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1404 JUMPI PUSH2 0x1403 PUSH2 0x2167 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x1446 JUMPI PUSH32 0x2FE54C60D3ACABF3343A35B6EBA15DB4821B340F76E741E2249685ED4899AF6C PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1 DUP3 SUB PUSH2 0x1479 JUMPI PUSH32 0x256A6135777EEE2FD26F54B8B7037A25439D5235CAEE224154186D2B8A52E31D PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x14AC JUMPI PUSH32 0x1151949895E82AB19924DE92C40A3D6F7BCB60D92B00504B8199613683F0C200 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x14DF JUMPI PUSH32 0x20121EE811489FF8D61F09FB89E313F14959A0F28BB428A20DBA6B0B068B3BDB PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x1512 JUMPI PUSH32 0xA89CA6FFA14CC462CFEDB842C30ED221A50A3D6BF022A6A57DC82AB24C157C9 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x5 DUP3 SUB PUSH2 0x1545 JUMPI PUSH32 0x24CA05C2B5CD42E890D6BE94C68D0689F4F21C9CEC9C0F13FE41D566DFB54959 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x6 DUP3 SUB PUSH2 0x1578 JUMPI PUSH32 0x1CCB97C932565A92C60156BDBA2D08F3BF1377464E025CEE765679E604A7315C PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x7 DUP3 SUB PUSH2 0x15AB JUMPI PUSH32 0x19156FBD7D1A8BF5CBA8909367DE1B624534EBAB4F0F79E003BCCDD1B182BDB4 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x8 DUP3 SUB PUSH2 0x15DE JUMPI PUSH32 0x261AF8C1F0912E465744641409F622D466C3920AC6E5FF37E36604CB11DFFF80 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x9 DUP3 SUB PUSH2 0x1610 JUMPI PUSH31 0x58459724FF6CA5A1652FCBC3E82B93895CF08E975B19BEAB3F54C217D1C007 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xA DUP3 SUB PUSH2 0x1643 JUMPI PUSH32 0x1F04EF20DEE48D39984D8EABE768A70EAFA6310AD20849D4573C3C40C2AD1E30 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xB DUP3 SUB PUSH2 0x1676 JUMPI PUSH32 0x1BEA3DEC5DAB51567CE7E200A30F7BA6D4276AEAA53E2686F962A46C66D511E5 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xC DUP3 SUB PUSH2 0x16A9 JUMPI PUSH32 0xEE0F941E2DA4B9E31C3CA97A40D8FA9CE68D97C084177071B3CB46CD3372F0F PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xD DUP3 SUB PUSH2 0x16DC JUMPI PUSH32 0x1CA9503E8935884501BBAF20BE14EB4C46B89772C97B96E3B2EBF3A36A948BBD PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xE DUP3 SUB PUSH2 0x170F JUMPI PUSH32 0x133A80E30697CD55D8F7D4B0965B7BE24057BA5DC3DA898EE2187232446CB108 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0xF DUP3 SUB PUSH2 0x1742 JUMPI PUSH32 0x13E6D8FC88839ED76E182C2A779AF5B2C0DA9DD18C90427A644F7E148A6253B6 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x10 DUP3 SUB PUSH2 0x1775 JUMPI PUSH32 0x1EB16B057A477F4BC8F572EA6BEE39561098F78F15BFB3699DCBB7BD8DB61854 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x11 DUP3 SUB PUSH2 0x17A8 JUMPI PUSH32 0xDA2CB16A1CEAABF1C16B838F7A9E3F2A3A3088D9E0A6DEBAA748114620696EA PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x12 DUP3 SUB PUSH2 0x17DB JUMPI PUSH32 0x24A3B3D822420B14B5D8CB6C28A574F01E98EA9E940551D2EBD75CEE12649F9D PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x13 DUP3 SUB PUSH2 0x180E JUMPI PUSH32 0x198622ACBD783D1B0D9064105B1FC8E4D8889DE95C4C519B3F635809FE6AFC05 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x14 DUP3 SUB PUSH2 0x1841 JUMPI PUSH32 0x29D7ED391256CCC3EA596C86E933B89FF339D25EA8DDCED975AE2FE30B5296D4 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x15 DUP3 SUB PUSH2 0x1874 JUMPI PUSH32 0x19BE59F2F0413CE78C0C3703A3A5451B1D7F39629FA33ABD11548A76065B2967 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x16 DUP3 SUB PUSH2 0x18A7 JUMPI PUSH32 0x1FF3F61797E538B70E619310D33F2A063E7EB59104E112E95738DA1254DC3453 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x17 DUP3 SUB PUSH2 0x18DA JUMPI PUSH32 0x10C16AE9959CF8358980D9DD9616E48228737310A10E2B6B731C1A548F036C48 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x18 DUP3 SUB PUSH2 0x190D JUMPI PUSH32 0xBA433A63174A90AC20992E75E3095496812B652685B5E1A2EAE0B1BF4E8FCD1 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x19 DUP3 SUB PUSH2 0x1940 JUMPI PUSH32 0x19DDB9DF2BC98D987D0DFECA9D2B643DEAFAB8F7036562E627C3667266A044C PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1A DUP3 SUB PUSH2 0x1973 JUMPI PUSH32 0x2D3C88B23175C5A5565DB928414C66D1912B11ACF974B2E644CAAAC04739CE99 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1B DUP3 SUB PUSH2 0x19A6 JUMPI PUSH32 0x2EAB55F6AE4E66E32C5189EED5C470840863445760F5ED7E7B69B2A62600F354 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1C DUP3 SUB PUSH2 0x19D8 JUMPI PUSH31 0x2DF37A2642621802383CF952BF4DD1F32E05433BEEB1FD41031FB7EACE979D PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1D DUP3 SUB PUSH2 0x1A0B JUMPI PUSH32 0x104AEB41435DB66C3E62FECCC1D6F5D98D0A0ED75D1374DB457CF462E3A1F427 PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1E DUP3 SUB PUSH2 0x1A3E JUMPI PUSH32 0x1F3C6FD858E9A7D4B0D1F38E256A09D81D5A5E3C963987E2D4B814CFAB7C6EBB PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x1F DUP3 SUB PUSH2 0x1A71 JUMPI PUSH32 0x2C7A07D20DFF79D01FECEDC1134284A8D08436606C93693B67E333F671BF69CC PUSH1 0x0 SHL SWAP1 POP PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA3 SWAP1 PUSH2 0x2F79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x2FE54C60D3ACABF3343A35B6EBA15DB4821B340F76E741E2249685ED4899AF6C DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B59 PUSH2 0x1DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x2 PUSH2 0x1BD8 SWAP2 SWAP1 PUSH2 0x30FB JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND SUB PUSH2 0x1C25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1C SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1D19 JUMPI PUSH1 0x0 PUSH1 0x2 DUP7 PUSH2 0x1C68 SWAP2 SWAP1 PUSH2 0x31BC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SUB PUSH2 0x1CAA JUMPI DUP4 SWAP3 POP PUSH2 0x1C85 DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP DUP4 SWAP2 POP JUMPDEST PUSH2 0x1CF5 PUSH32 0x0 DUP5 DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP4 POP PUSH1 0x2 DUP6 PUSH2 0x1D04 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST SWAP5 POP DUP1 DUP1 PUSH2 0x1D11 SWAP1 PUSH2 0x321E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C35 JUMP JUMPDEST POP PUSH1 0x1 DUP6 PUSH2 0x1D27 SWAP2 SWAP1 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E45 PUSH2 0x1E40 PUSH2 0x1E3B DUP5 PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0x1E00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E57 DUP3 PUSH2 0x1E2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E69 DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E79 DUP2 PUSH2 0x1E5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E94 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA5 DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB5 DUP2 PUSH2 0x1E9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE9 DUP2 PUSH2 0x1ED6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F04 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F15 DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F25 DUP2 PUSH2 0x1F0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F5F DUP2 PUSH2 0x1F46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F9D DUP2 PUSH2 0x1F8A JUMP JUMPDEST DUP2 EQ PUSH2 0x1FA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FBA DUP2 PUSH2 0x1F94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD6 JUMPI PUSH2 0x1FD5 PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FE4 DUP5 DUP3 DUP6 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2003 DUP2 PUSH2 0x1FED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202D DUP2 PUSH2 0x2009 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2048 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FFA JUMP JUMPDEST PUSH2 0x2055 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x2062 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2024 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2085 JUMPI PUSH2 0x2084 PUSH2 0x206A JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20B3 JUMPI PUSH2 0x20B2 PUSH2 0x208E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x20EC JUMPI PUSH2 0x20EB PUSH2 0x2098 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x210D JUMPI PUSH2 0x210C PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x211B DUP8 DUP3 DUP9 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x212C DUP8 DUP3 DUP9 ADD PUSH2 0x206F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x214D JUMPI PUSH2 0x214C PUSH2 0x1F85 JUMP JUMPDEST JUMPDEST PUSH2 0x2159 DUP8 DUP3 DUP9 ADD PUSH2 0x209D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x21A7 JUMPI PUSH2 0x21A6 PUSH2 0x2167 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x21B8 DUP3 PUSH2 0x2196 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C8 DUP3 PUSH2 0x21AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D8 DUP2 PUSH2 0x21BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x1ED6 JUMP JUMPDEST DUP2 EQ PUSH2 0x220D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x221F DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2230 DUP3 PUSH2 0x1E00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2240 DUP2 PUSH2 0x2225 JUMP JUMPDEST DUP2 EQ PUSH2 0x224B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225D DUP2 PUSH2 0x2237 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2280 JUMPI PUSH2 0x227F PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228E DUP10 DUP3 DUP11 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x229F DUP10 DUP3 DUP11 ADD PUSH2 0x2210 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x22B0 DUP10 DUP3 DUP11 ADD PUSH2 0x2210 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x22C1 DUP10 DUP3 DUP11 ADD PUSH2 0x224E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x1F85 JUMP JUMPDEST JUMPDEST PUSH2 0x22EE DUP10 DUP3 DUP11 ADD PUSH2 0x209D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2308 DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2318 DUP2 PUSH2 0x22FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2333 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x230F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2344 DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2354 DUP2 PUSH2 0x2339 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x236F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x234B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2380 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2390 DUP2 PUSH2 0x2375 JUMP JUMPDEST DUP2 EQ PUSH2 0x239B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AD DUP2 PUSH2 0x2387 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23CC JUMPI PUSH2 0x23CB PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23DA DUP7 DUP3 DUP8 ADD PUSH2 0x239E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x23EB DUP7 DUP3 DUP8 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23FC DUP7 DUP3 DUP8 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x240F DUP2 PUSH2 0x1F8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x242A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x244A JUMPI PUSH2 0x2449 PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2458 DUP8 DUP3 DUP9 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2469 DUP8 DUP3 DUP9 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x248A JUMPI PUSH2 0x2489 PUSH2 0x1F85 JUMP JUMPDEST JUMPDEST PUSH2 0x2496 DUP8 DUP3 DUP9 ADD PUSH2 0x209D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24BA JUMPI PUSH2 0x24B9 PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C8 DUP5 DUP3 DUP6 ADD PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DC DUP3 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EC DUP2 PUSH2 0x24D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2507 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2545 DUP2 PUSH2 0x1FED JUMP JUMPDEST DUP2 EQ PUSH2 0x2550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2562 DUP2 PUSH2 0x253C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x257E JUMPI PUSH2 0x257D PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x258C DUP5 DUP3 DUP6 ADD PUSH2 0x2553 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C9 DUP2 PUSH2 0x2595 JUMP JUMPDEST DUP2 EQ PUSH2 0x25D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25E6 DUP2 PUSH2 0x25C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2602 JUMPI PUSH2 0x2601 PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2610 DUP5 DUP3 DUP6 ADD PUSH2 0x25D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2631 DUP3 PUSH2 0x2619 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2649 PUSH2 0x2644 DUP3 PUSH2 0x1FED JUMP JUMPDEST PUSH2 0x2626 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2667 DUP3 PUSH2 0x264F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x267F PUSH2 0x267A DUP3 PUSH2 0x2595 JUMP JUMPDEST PUSH2 0x265C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2691 DUP3 DUP6 PUSH2 0x2638 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH2 0x26A1 DUP3 DUP5 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x1F DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D8 DUP3 MLOAD PUSH2 0x1F8A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F9 DUP3 PUSH2 0x26B1 JUMP JUMPDEST DUP3 PUSH2 0x2703 DUP5 PUSH2 0x26BC JUMP JUMPDEST SWAP1 POP PUSH2 0x270E DUP2 PUSH2 0x26CC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x274E JUMPI PUSH2 0x2749 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x26E1 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x277E DUP2 PUSH2 0x1ED6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2790 DUP4 DUP4 PUSH2 0x2775 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B2 DUP2 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x27BC DUP2 DUP5 PUSH2 0x2760 JUMP JUMPDEST SWAP3 POP PUSH2 0x27C7 DUP3 PUSH2 0x276B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27F8 JUMPI DUP2 MLOAD PUSH2 0x27DF DUP8 DUP3 PUSH2 0x2784 JUMP JUMPDEST SWAP7 POP PUSH2 0x27EA DUP4 PUSH2 0x279C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27CB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x283D DUP4 DUP6 PUSH2 0x2800 JUMP JUMPDEST SWAP4 POP PUSH2 0x284A DUP4 DUP6 DUP5 PUSH2 0x2811 JUMP JUMPDEST PUSH2 0x2853 DUP4 PUSH2 0x2820 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2873 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x27A9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2886 DUP2 DUP5 DUP7 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A5 DUP2 PUSH2 0x2890 JUMP JUMPDEST DUP2 EQ PUSH2 0x28B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x28C2 DUP2 PUSH2 0x289C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28DE JUMPI PUSH2 0x28DD PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28EC DUP5 DUP3 DUP6 ADD PUSH2 0x28B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53776170205665726966696572206661696C6564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293C PUSH1 0x14 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2947 DUP3 PUSH2 0x2906 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x296B DUP2 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2981 DUP2 PUSH2 0x1F94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x299D JUMPI PUSH2 0x299C PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29AB DUP5 DUP3 DUP6 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465706F736974206E6F74207472616465720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29EA PUSH1 0x12 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F5 DUP3 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A19 DUP2 PUSH2 0x29DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A56 DUP2 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x2A60 DUP2 DUP5 PUSH2 0x2A2B JUMP JUMPDEST SWAP3 POP PUSH2 0x2A6B DUP3 PUSH2 0x2A36 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A9C JUMPI DUP2 MLOAD PUSH2 0x2A83 DUP8 DUP3 PUSH2 0x2784 JUMP JUMPDEST SWAP7 POP PUSH2 0x2A8E DUP4 PUSH2 0x2A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A6F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2AB9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2A4D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2ACC DUP2 DUP5 DUP7 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4465706F736974205665726966696572206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0C PUSH1 0x17 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B17 DUP3 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B3B DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B4B DUP2 PUSH2 0x2225 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B66 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2B42 JUMP JUMPDEST PUSH2 0x2B73 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B42 JUMP JUMPDEST PUSH2 0x2B80 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EE0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5F6C6566742073686F756C6420626520696E7369646520746865206669656C64 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBE PUSH1 0x20 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC9 DUP3 PUSH2 0x2B88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BED DUP2 PUSH2 0x2BB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5F72696768742073686F756C6420626520696E7369646520746865206669656C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C50 PUSH1 0x21 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5B DUP3 PUSH2 0x2BF4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C7F DUP2 PUSH2 0x2C43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C9B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x2CA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EE0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CBE DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CDB JUMPI PUSH2 0x2CDA PUSH2 0x1F80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CE9 DUP6 DUP3 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CFA DUP6 DUP3 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D69 DUP2 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x2D73 DUP2 DUP5 PUSH2 0x2D3E JUMP JUMPDEST SWAP3 POP PUSH2 0x2D7E DUP3 PUSH2 0x2D49 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DAF JUMPI DUP2 MLOAD PUSH2 0x2D96 DUP8 DUP3 PUSH2 0x2784 JUMP JUMPDEST SWAP7 POP PUSH2 0x2DA1 DUP4 PUSH2 0x2D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D82 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2DCC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D60 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2DDF DUP2 DUP5 DUP7 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x66696E616C697A653A20766572696679206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1F PUSH1 0x17 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2A DUP3 PUSH2 0x2DE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E4E DUP2 PUSH2 0x2E12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177206E6F742074726164657200000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E8B PUSH1 0x13 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E96 DUP3 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EBA DUP2 PUSH2 0x2E7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177205665726966696572206661696C65640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF7 PUSH1 0x18 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F02 DUP3 PUSH2 0x2EC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F26 DUP2 PUSH2 0x2EEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F63 PUSH1 0x13 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F6E DUP3 PUSH2 0x2F2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F92 DUP2 PUSH2 0x2F56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x301F JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2FFB JUMPI PUSH2 0x2FFA PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x300A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x3018 DUP6 PUSH2 0x2FC8 JUMP JUMPDEST SWAP5 POP PUSH2 0x2FDF JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3038 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x30F4 JUMP JUMPDEST DUP2 PUSH2 0x3046 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x30F4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x305C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3066 JUMPI PUSH2 0x3095 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x30F4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3078 JUMPI PUSH2 0x3077 PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x308F JUMPI PUSH2 0x308E PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST POP PUSH2 0x30F4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x30CA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x30C5 JUMPI PUSH2 0x30C4 PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST PUSH2 0x30F4 JUMP JUMPDEST PUSH2 0x30D7 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2FD5 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x30EE JUMPI PUSH2 0x30ED PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3106 DUP3 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0x3111 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP3 POP PUSH2 0x3122 PUSH4 0xFFFFFFFF DUP5 DUP5 PUSH2 0x3028 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D65726B6C6520747265652069732066756C6C2E204E6F206D6F7265206C6561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7665732063616E20626520616464656400000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3186 PUSH1 0x30 DUP4 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3191 DUP3 PUSH2 0x312A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31B5 DUP2 PUSH2 0x3179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C7 DUP3 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0x31D2 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x31E2 JUMPI PUSH2 0x31E1 PUSH2 0x2D04 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F8 DUP3 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0x3203 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3213 JUMPI PUSH2 0x3212 PUSH2 0x2D04 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3229 DUP3 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x323F JUMPI PUSH2 0x323E PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3255 DUP3 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0x3260 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x327C JUMPI PUSH2 0x327B PUSH2 0x2F99 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xE8 0xD5 0xBA 0x4A 0xE DUP8 BYTE PUSH21 0x23A555EC9DA90E72D3D025E54A217816FE2CC1EA7B 0xC3 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"561:4182:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;806:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;675:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:122:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;853:28:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;639:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;564:20:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;945:54:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3279:686;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;887:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1530:872;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;720:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;767:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1452:596:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3971:587:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2408:865;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3028:5724:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;943:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;359:122;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;526:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;888:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;968:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;603:30:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;806:41;;;;;;;;;;;;;:::o;675:39::-;;;;;;;;;;;;;:::o;231:122:1:-;276:77;231:122;:::o;853:28:2:-;;;;;;;;;:::o;639:30::-;;;:::o;564:20:1:-;;;;;;;;;;;;:::o;945:54:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3279:686::-;3421:31;;:::i;:::-;3489:15;;3481:24;;3462:13;3476:1;3462:16;;;;;;;:::i;:::-;;;;;:43;;;;;3542:10;3534:19;;3515:13;3529:1;3515:16;;;;;;;:::i;:::-;;;;;:38;;;;;3582:10;:25;;;3563:13;3577:1;3563:16;;;;;;;:::i;:::-;;;;;:44;;;;;3669:11;:21;;;;;;;;;;:::i;:::-;3692:11;:18;;;;;;;;;;:::i;:::-;3652:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3644:68;;;:::i;:::-;3636:77;;3617:13;3631:1;3617:16;;;;;;;:::i;:::-;;;;;:96;;;;;3744:12;;;;;;;;;;;:19;;;3764:13;3779:6;;3744:42;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3723:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;3876:22;3886:11;3876:9;:22::i;:::-;3843:18;:30;3862:10;3843:30;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3937:21;3908:14;:26;3923:10;3908:26;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3411:554;3279:686;;;;:::o;887:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;1530:872::-;1702:6;1720:31;;:::i;:::-;1788:6;1780:15;;1761:13;1775:1;1761:16;;;;;;;:::i;:::-;;;;;:34;;;;;1838:6;1832:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1824:31;;1805:13;1819:1;1805:16;;;;;;;:::i;:::-;;;;;:50;;;;;1892:9;1865:13;1879:1;1865:16;;;;;;;:::i;:::-;;;;;:37;;;;;1939:9;1912:13;1926:1;1912:16;;;;;;;:::i;:::-;;;;;:37;;;;;1994:6;1978:24;;1959:13;1973:1;1959:16;;;;;;;:::i;:::-;;;;;:43;;;;;2047:6;2033:20;;:10;:20;;;2012:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2128:15;;;;;;;;;;;:22;;;2151:13;2166:6;;2128:45;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2107:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;2233:7;:20;;;2254:6;2270:4;2277:9;2233:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2297:7;:20;;;2318:6;2334:4;2341:9;2297:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2369:26;2388:6;2369:18;:26::i;:::-;2362:33;;;1530:872;;;;;;;;:::o;720:41::-;;;;;;;;;;;;;:::o;767:33::-;;;;;;;;;;;;;:::o;1452:596:1:-;1574:7;276:77;1622:5;1614:14;;:27;1593:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;276:77;1738:6;1730:15;;:28;1709:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;1827:9;1847:5;1839:14;;1827:26;;1863:9;1895:7;:18;;;1914:1;1917;1895:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1886:33;;;;;;;;276:77;1933:38;;;;;:::i;:::-;;1951:6;1943:15;;1940:1;1933:38;1929:42;;1990:7;:18;;;2009:1;2012;1990:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1981:33;;;;;;;;2039:1;2031:10;;2024:17;;;;1452:596;;;;;:::o;3971:587:2:-;4096:31;;:::i;:::-;4164:15;;4156:24;;4137:13;4151:1;4137:16;;;;;;;:::i;:::-;;;;;:43;;;;;4217:10;4209:19;;4190:13;4204:1;4190:16;;;;;;;:::i;:::-;;;;;:38;;;;;4265:7;4257:16;;4238:13;4252:1;4238:16;;;;;;;:::i;:::-;;;;;:35;;;;;4304:16;;;;;;;;;;;:23;;;4328:13;4343:6;;4304:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4283:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;4418:27;4437:7;4418:18;:27::i;:::-;;4462:18;:30;4481:10;4462:30;;;;;;;;;;;;4455:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4531:20;4502:14;:26;4517:10;4502:26;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4086:472;3971:587;;;;:::o;2408:865::-;2586:31;;:::i;:::-;2654:4;;2646:13;;2627;2641:1;2627:16;;;;;;;:::i;:::-;;;;;:32;;;;;2696:10;2688:19;;2669:13;2683:1;2669:16;;;;;;;:::i;:::-;;;;;:38;;;;;2744:9;2717:13;2731:1;2717:16;;;;;;;:::i;:::-;;;;;:37;;;;;2791:9;2764:13;2778:1;2764:16;;;;;;;:::i;:::-;;;;;:37;;;;;2846:6;2830:24;;2811:13;2825:1;2811:16;;;;;;;:::i;:::-;;;;;:43;;;;;2899:6;2885:20;;:10;:20;;;2864:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;2981:16;;;;;;;;;;;:23;;;3005:13;3020:6;;2981:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2960:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;3088:7;:20;;;3117:4;3124:6;3132:9;3088:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3152:7;:20;;;3181:4;3188:6;3196:9;3152:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3246:20;3217:14;:26;3232:10;3217:26;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2576:697;2408:865;;;;;;:::o;3028:5724:1:-;3075:7;3103:1;3098;:6;3094:5651;;3170:66;3141:113;;3118:136;;;;3094:5651;3278:1;3273;:6;3269:5476;;3345:66;3316:113;;3293:136;;;;3269:5476;3453:1;3448;:6;3444:5301;;3520:66;3491:113;;3468:136;;;;3444:5301;3628:1;3623;:6;3619:5126;;3695:66;3666:113;;3643:136;;;;3619:5126;3803:1;3798;:6;3794:4951;;3870:66;3841:113;;3818:136;;;;3794:4951;3978:1;3973;:6;3969:4776;;4045:66;4016:113;;3993:136;;;;3969:4776;4153:1;4148;:6;4144:4601;;4220:66;4191:113;;4168:136;;;;4144:4601;4328:1;4323;:6;4319:4426;;4395:66;4366:113;;4343:136;;;;4319:4426;4503:1;4498;:6;4494:4251;;4570:66;4541:113;;4518:136;;;;4494:4251;4678:1;4673;:6;4669:4076;;4745:66;4716:113;;4693:136;;;;4669:4076;4853:2;4848:1;:7;4844:3901;;4921:66;4892:113;;4869:136;;;;4844:3901;5029:2;5024:1;:7;5020:3725;;5097:66;5068:113;;5045:136;;;;5020:3725;5205:2;5200:1;:7;5196:3549;;5273:66;5244:113;;5221:136;;;;5196:3549;5381:2;5376:1;:7;5372:3373;;5449:66;5420:113;;5397:136;;;;5372:3373;5557:2;5552:1;:7;5548:3197;;5625:66;5596:113;;5573:136;;;;5548:3197;5733:2;5728:1;:7;5724:3021;;5801:66;5772:113;;5749:136;;;;5724:3021;5909:2;5904:1;:7;5900:2845;;5977:66;5948:113;;5925:136;;;;5900:2845;6085:2;6080:1;:7;6076:2669;;6153:66;6124:113;;6101:136;;;;6076:2669;6261:2;6256:1;:7;6252:2493;;6329:66;6300:113;;6277:136;;;;6252:2493;6437:2;6432:1;:7;6428:2317;;6505:66;6476:113;;6453:136;;;;6428:2317;6613:2;6608:1;:7;6604:2141;;6681:66;6652:113;;6629:136;;;;6604:2141;6789:2;6784:1;:7;6780:1965;;6857:66;6828:113;;6805:136;;;;6780:1965;6965:2;6960:1;:7;6956:1789;;7033:66;7004:113;;6981:136;;;;6956:1789;7141:2;7136:1;:7;7132:1613;;7209:66;7180:113;;7157:136;;;;7132:1613;7317:2;7312:1;:7;7308:1437;;7385:66;7356:113;;7333:136;;;;7308:1437;7493:2;7488:1;:7;7484:1261;;7561:66;7532:113;;7509:136;;;;7484:1261;7669:2;7664:1;:7;7660:1085;;7737:66;7708:113;;7685:136;;;;7660:1085;7845:2;7840:1;:7;7836:909;;7913:66;7884:113;;7861:136;;;;7836:909;8021:2;8016:1;:7;8012:733;;8089:66;8060:113;;8037:136;;;;8012:733;8197:2;8192:1;:7;8188:557;;8265:66;8236:113;;8213:136;;;;8188:557;8373:2;8368:1;:7;8364:381;;8441:66;8412:113;;8389:136;;;;8364:381;8549:2;8544:1;:7;8540:205;;8617:66;8588:113;;8565:136;;;;8540:205;8716:29;;;;;;;;;;:::i;:::-;;;;;;;;3028:5724;;;;:::o;943:19::-;;;;:::o;359:122::-;404:77;359:122;:::o;526:31::-;;;:::o;888:49::-;;;;;;;;;;;;;;;;;:::o;968:27::-;;;;;;;;;;;;;:::o;603:30:2:-;;;:::o;4564:177::-;4640:15;;:::i;:::-;4717:17;;;;;;;;4726:1;4717:17;;;;;;4729:1;4717:17;;;;;;4732:1;4717:17;;;;;4710:24;;4564:177;;;:::o;2054:885:1:-;2104:12;2128:17;2148:9;;;;;;;;;;;2128:29;;2215:6;;;;;;;;;;2209:1;2202:19;;;;:::i;:::-;2188:33;;:10;:33;;;2167:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;2305:19;2327:10;2305:32;;2347:24;2374:5;2347:32;;2389:12;2411:13;2440:8;2435:434;2458:6;;;;;;;;;;2454:10;;:1;:10;;;2435:434;;;2509:1;2504;2489:12;:16;;;;:::i;:::-;:21;;;2485:276;;2537:16;2530:23;;2579:8;2585:1;2579:8;;:5;:8::i;:::-;2571:16;;2625;2605:14;:17;2620:1;2605:17;;;;;;;;;;;;;:36;;;;2485:276;;;2687:14;:17;2702:1;2687:17;;;;;;;;;;;;;;2680:24;;2730:16;2722:24;;2485:276;2793:34;2807:6;2815:4;2821:5;2793:13;:34::i;:::-;2774:53;;2857:1;2841:17;;;;;:::i;:::-;;;2466:3;;;;;:::i;:::-;;;;2435:434;;;;2904:1;2891:10;:14;;;;:::i;:::-;2879:9;;:26;;;;;;;;;;;;;;;;;;2922:10;2915:17;;;;;;;2054:885;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:126:26:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:150::-;559:9;592:37;623:5;592:37;:::i;:::-;579:50;;485:150;;;:::o;641:179::-;752:61;807:5;752:61;:::i;:::-;747:3;740:74;641:179;;:::o;826:270::-;943:4;981:2;970:9;966:18;958:26;;994:95;1086:1;1075:9;1071:17;1062:6;994:95;:::i;:::-;826:270;;;;:::o;1102:149::-;1175:9;1208:37;1239:5;1208:37;:::i;:::-;1195:50;;1102:149;;;:::o;1257:177::-;1367:60;1421:5;1367:60;:::i;:::-;1362:3;1355:73;1257:177;;:::o;1440:268::-;1556:4;1594:2;1583:9;1579:18;1571:26;;1607:94;1698:1;1687:9;1683:17;1674:6;1607:94;:::i;:::-;1440:268;;;;:::o;1714:77::-;1751:7;1780:5;1769:16;;1714:77;;;:::o;1797:118::-;1884:24;1902:5;1884:24;:::i;:::-;1879:3;1872:37;1797:118;;:::o;1921:222::-;2014:4;2052:2;2041:9;2037:18;2029:26;;2065:71;2133:1;2122:9;2118:17;2109:6;2065:71;:::i;:::-;1921:222;;;;:::o;2149:140::-;2213:9;2246:37;2277:5;2246:37;:::i;:::-;2233:50;;2149:140;;;:::o;2295:159::-;2396:51;2441:5;2396:51;:::i;:::-;2391:3;2384:64;2295:159;;:::o;2460:250::-;2567:4;2605:2;2594:9;2590:18;2582:26;;2618:85;2700:1;2689:9;2685:17;2676:6;2618:85;:::i;:::-;2460:250;;;;:::o;2716:93::-;2752:7;2792:10;2785:5;2781:22;2770:33;;2716:93;;;:::o;2815:115::-;2900:23;2917:5;2900:23;:::i;:::-;2895:3;2888:36;2815:115;;:::o;2936:218::-;3027:4;3065:2;3054:9;3050:18;3042:26;;3078:69;3144:1;3133:9;3129:17;3120:6;3078:69;:::i;:::-;2936:218;;;;:::o;3241:117::-;3350:1;3347;3340:12;3364:117;3473:1;3470;3463:12;3487:77;3524:7;3553:5;3542:16;;3487:77;;;:::o;3570:122::-;3643:24;3661:5;3643:24;:::i;:::-;3636:5;3633:35;3623:63;;3682:1;3679;3672:12;3623:63;3570:122;:::o;3698:139::-;3744:5;3782:6;3769:20;3760:29;;3798:33;3825:5;3798:33;:::i;:::-;3698:139;;;;:::o;3843:329::-;3902:6;3951:2;3939:9;3930:7;3926:23;3922:32;3919:119;;;3957:79;;:::i;:::-;3919:119;4077:1;4102:53;4147:7;4138:6;4127:9;4123:22;4102:53;:::i;:::-;4092:63;;4048:117;3843:329;;;;:::o;4178:86::-;4213:7;4253:4;4246:5;4242:16;4231:27;;4178:86;;;:::o;4270:112::-;4353:22;4369:5;4353:22;:::i;:::-;4348:3;4341:35;4270:112;;:::o;4388:116::-;4425:7;4465:32;4458:5;4454:44;4443:55;;4388:116;;;:::o;4510:118::-;4597:24;4615:5;4597:24;:::i;:::-;4592:3;4585:37;4510:118;;:::o;4634:434::-;4779:4;4817:2;4806:9;4802:18;4794:26;;4830:67;4894:1;4883:9;4879:17;4870:6;4830:67;:::i;:::-;4907:72;4975:2;4964:9;4960:18;4951:6;4907:72;:::i;:::-;4989;5057:2;5046:9;5042:18;5033:6;4989:72;:::i;:::-;4634:434;;;;;;:::o;5074:117::-;5183:1;5180;5173:12;5223:234;5299:5;5340:2;5331:6;5326:3;5322:16;5318:25;5315:112;;;5346:79;;:::i;:::-;5315:112;5445:6;5436:15;;5223:234;;;;:::o;5463:117::-;5572:1;5569;5562:12;5586:117;5695:1;5692;5685:12;5709:117;5818:1;5815;5808:12;5845:552;5902:8;5912:6;5962:3;5955:4;5947:6;5943:17;5939:27;5929:122;;5970:79;;:::i;:::-;5929:122;6083:6;6070:20;6060:30;;6113:18;6105:6;6102:30;6099:117;;;6135:79;;:::i;:::-;6099:117;6249:4;6241:6;6237:17;6225:29;;6303:3;6295:4;6287:6;6283:17;6273:8;6269:32;6266:41;6263:128;;;6310:79;;:::i;:::-;6263:128;5845:552;;;;;:::o;6403:878::-;6521:6;6529;6537;6545;6594:3;6582:9;6573:7;6569:23;6565:33;6562:120;;;6601:79;;:::i;:::-;6562:120;6721:1;6746:53;6791:7;6782:6;6771:9;6767:22;6746:53;:::i;:::-;6736:63;;6692:117;6848:2;6874:83;6949:7;6940:6;6929:9;6925:22;6874:83;:::i;:::-;6864:93;;6819:148;7034:2;7023:9;7019:18;7006:32;7065:18;7057:6;7054:30;7051:117;;;7087:79;;:::i;:::-;7051:117;7200:64;7256:7;7247:6;7236:9;7232:22;7200:64;:::i;:::-;7182:82;;;;6977:297;6403:878;;;;;;;:::o;7287:180::-;7335:77;7332:1;7325:88;7432:4;7429:1;7422:15;7456:4;7453:1;7446:15;7473:119;7560:1;7553:5;7550:12;7540:46;;7566:18;;:::i;:::-;7540:46;7473:119;:::o;7598:139::-;7649:7;7678:5;7667:16;;7684:47;7725:5;7684:47;:::i;:::-;7598:139;;;:::o;7743:::-;7805:9;7838:38;7870:5;7838:38;:::i;:::-;7825:51;;7743:139;;;:::o;7888:155::-;7987:49;8030:5;7987:49;:::i;:::-;7982:3;7975:62;7888:155;;:::o;8049:246::-;8154:4;8192:2;8181:9;8177:18;8169:26;;8205:83;8285:1;8274:9;8270:17;8261:6;8205:83;:::i;:::-;8049:246;;;;:::o;8301:122::-;8374:24;8392:5;8374:24;:::i;:::-;8367:5;8364:35;8354:63;;8413:1;8410;8403:12;8354:63;8301:122;:::o;8429:139::-;8475:5;8513:6;8500:20;8491:29;;8529:33;8556:5;8529:33;:::i;:::-;8429:139;;;;:::o;8574:96::-;8611:7;8640:24;8658:5;8640:24;:::i;:::-;8629:35;;8574:96;;;:::o;8676:122::-;8749:24;8767:5;8749:24;:::i;:::-;8742:5;8739:35;8729:63;;8788:1;8785;8778:12;8729:63;8676:122;:::o;8804:139::-;8850:5;8888:6;8875:20;8866:29;;8904:33;8931:5;8904:33;:::i;:::-;8804:139;;;;:::o;8949:1109::-;9055:6;9063;9071;9079;9087;9095;9144:3;9132:9;9123:7;9119:23;9115:33;9112:120;;;9151:79;;:::i;:::-;9112:120;9271:1;9296:53;9341:7;9332:6;9321:9;9317:22;9296:53;:::i;:::-;9286:63;;9242:117;9398:2;9424:53;9469:7;9460:6;9449:9;9445:22;9424:53;:::i;:::-;9414:63;;9369:118;9526:2;9552:53;9597:7;9588:6;9577:9;9573:22;9552:53;:::i;:::-;9542:63;;9497:118;9654:2;9680:53;9725:7;9716:6;9705:9;9701:22;9680:53;:::i;:::-;9670:63;;9625:118;9810:3;9799:9;9795:19;9782:33;9842:18;9834:6;9831:30;9828:117;;;9864:79;;:::i;:::-;9828:117;9977:64;10033:7;10024:6;10013:9;10009:22;9977:64;:::i;:::-;9959:82;;;;9753:298;8949:1109;;;;;;;;:::o;10064:150::-;10138:9;10171:37;10202:5;10171:37;:::i;:::-;10158:50;;10064:150;;;:::o;10220:179::-;10331:61;10386:5;10331:61;:::i;:::-;10326:3;10319:74;10220:179;;:::o;10405:270::-;10522:4;10560:2;10549:9;10545:18;10537:26;;10573:95;10665:1;10654:9;10650:17;10641:6;10573:95;:::i;:::-;10405:270;;;;:::o;10681:146::-;10751:9;10784:37;10815:5;10784:37;:::i;:::-;10771:50;;10681:146;;;:::o;10833:171::-;10940:57;10991:5;10940:57;:::i;:::-;10935:3;10928:70;10833:171;;:::o;11010:262::-;11123:4;11161:2;11150:9;11146:18;11138:26;;11174:91;11262:1;11251:9;11247:17;11238:6;11174:91;:::i;:::-;11010:262;;;;:::o;11278:110::-;11329:7;11358:24;11376:5;11358:24;:::i;:::-;11347:35;;11278:110;;;:::o;11394:150::-;11481:38;11513:5;11481:38;:::i;:::-;11474:5;11471:49;11461:77;;11534:1;11531;11524:12;11461:77;11394:150;:::o;11550:167::-;11610:5;11648:6;11635:20;11626:29;;11664:47;11705:5;11664:47;:::i;:::-;11550:167;;;;:::o;11723:647::-;11814:6;11822;11830;11879:2;11867:9;11858:7;11854:23;11850:32;11847:119;;;11885:79;;:::i;:::-;11847:119;12005:1;12030:67;12089:7;12080:6;12069:9;12065:22;12030:67;:::i;:::-;12020:77;;11976:131;12146:2;12172:53;12217:7;12208:6;12197:9;12193:22;12172:53;:::i;:::-;12162:63;;12117:118;12274:2;12300:53;12345:7;12336:6;12325:9;12321:22;12300:53;:::i;:::-;12290:63;;12245:118;11723:647;;;;;:::o;12376:118::-;12463:24;12481:5;12463:24;:::i;:::-;12458:3;12451:37;12376:118;;:::o;12500:222::-;12593:4;12631:2;12620:9;12616:18;12608:26;;12644:71;12712:1;12701:9;12697:17;12688:6;12644:71;:::i;:::-;12500:222;;;;:::o;12728:817::-;12816:6;12824;12832;12840;12889:2;12877:9;12868:7;12864:23;12860:32;12857:119;;;12895:79;;:::i;:::-;12857:119;13015:1;13040:53;13085:7;13076:6;13065:9;13061:22;13040:53;:::i;:::-;13030:63;;12986:117;13142:2;13168:53;13213:7;13204:6;13193:9;13189:22;13168:53;:::i;:::-;13158:63;;13113:118;13298:2;13287:9;13283:18;13270:32;13329:18;13321:6;13318:30;13315:117;;;13351:79;;:::i;:::-;13315:117;13464:64;13520:7;13511:6;13500:9;13496:22;13464:64;:::i;:::-;13446:82;;;;13241:297;12728:817;;;;;;;:::o;13551:329::-;13610:6;13659:2;13647:9;13638:7;13634:23;13630:32;13627:119;;;13665:79;;:::i;:::-;13627:119;13785:1;13810:53;13855:7;13846:6;13835:9;13831:22;13810:53;:::i;:::-;13800:63;;13756:117;13551:329;;;;:::o;13886:140::-;13950:9;13983:37;14014:5;13983:37;:::i;:::-;13970:50;;13886:140;;;:::o;14032:159::-;14133:51;14178:5;14133:51;:::i;:::-;14128:3;14121:64;14032:159;;:::o;14197:250::-;14304:4;14342:2;14331:9;14327:18;14319:26;;14355:85;14437:1;14426:9;14422:17;14413:6;14355:85;:::i;:::-;14197:250;;;;:::o;14453:180::-;14501:77;14498:1;14491:88;14598:4;14595:1;14588:15;14622:4;14619:1;14612:15;14639:118;14710:22;14726:5;14710:22;:::i;:::-;14703:5;14700:33;14690:61;;14747:1;14744;14737:12;14690:61;14639:118;:::o;14763:135::-;14807:5;14845:6;14832:20;14823:29;;14861:31;14886:5;14861:31;:::i;:::-;14763:135;;;;:::o;14904:325::-;14961:6;15010:2;14998:9;14989:7;14985:23;14981:32;14978:119;;;15016:79;;:::i;:::-;14978:119;15136:1;15161:51;15204:7;15195:6;15184:9;15180:22;15161:51;:::i;:::-;15151:61;;15107:115;14904:325;;;;:::o;15235:148::-;15272:7;15312:64;15305:5;15301:76;15290:87;;15235:148;;;:::o;15389:122::-;15462:24;15480:5;15462:24;:::i;:::-;15455:5;15452:35;15442:63;;15501:1;15498;15491:12;15442:63;15389:122;:::o;15517:139::-;15563:5;15601:6;15588:20;15579:29;;15617:33;15644:5;15617:33;:::i;:::-;15517:139;;;;:::o;15662:329::-;15721:6;15770:2;15758:9;15749:7;15745:23;15741:32;15738:119;;;15776:79;;:::i;:::-;15738:119;15896:1;15921:53;15966:7;15957:6;15946:9;15942:22;15921:53;:::i;:::-;15911:63;;15867:117;15662:329;;;;:::o;15997:96::-;16031:8;16080:5;16075:3;16071:15;16050:36;;15997:96;;;:::o;16099:93::-;16136:7;16165:21;16180:5;16165:21;:::i;:::-;16154:32;;16099:93;;;:::o;16198:149::-;16299:41;16317:22;16333:5;16317:22;:::i;:::-;16299:41;:::i;:::-;16294:3;16287:54;16198:149;;:::o;16353:92::-;16385:8;16432:5;16429:1;16425:13;16404:34;;16353:92;;;:::o;16451:93::-;16490:7;16519:19;16532:5;16519:19;:::i;:::-;16508:30;;16451:93;;;:::o;16550:157::-;16655:45;16675:24;16693:5;16675:24;:::i;:::-;16655:45;:::i;:::-;16650:3;16643:58;16550:157;;:::o;16713:388::-;16849:3;16864:71;16931:3;16922:6;16864:71;:::i;:::-;16960:1;16955:3;16951:11;16944:18;;16972:75;17043:3;17034:6;16972:75;:::i;:::-;17072:2;17067:3;17063:12;17056:19;;17092:3;17085:10;;16713:388;;;;;:::o;17107:98::-;17158:6;17192:5;17186:12;17176:22;;17107:98;;;:::o;17211:116::-;17262:4;17285:3;17277:11;;17315:4;17310:3;17306:14;17298:22;;17211:116;;;:::o;17333:154::-;17376:11;17412:29;17436:3;17430:10;17412:29;:::i;:::-;17475:5;17451:29;;17388:99;17333:154;;;:::o;17493:107::-;17537:8;17587:5;17581:4;17577:16;17556:37;;17493:107;;;;:::o;17606:594::-;17690:5;17721:38;17753:5;17721:38;:::i;:::-;17784:5;17811:40;17845:5;17811:40;:::i;:::-;17799:52;;17870:35;17896:8;17870:35;:::i;:::-;17861:44;;17929:2;17921:6;17918:14;17915:278;;;18000:169;18085:66;18055:6;18051:2;18047:15;18044:1;18040:23;18000:169;:::i;:::-;17977:5;17956:227;17947:236;;17915:278;17696:504;;17606:594;;;:::o;18206:104::-;18271:6;18299:4;18289:14;;18206:104;;;:::o;18316:143::-;18413:11;18450:3;18435:18;;18316:143;;;;:::o;18465:98::-;18530:4;18553:3;18545:11;;18465:98;;;:::o;18569:108::-;18646:24;18664:5;18646:24;:::i;:::-;18641:3;18634:37;18569:108;;:::o;18683:179::-;18752:10;18773:46;18815:3;18807:6;18773:46;:::i;:::-;18851:4;18846:3;18842:14;18828:28;;18683:179;;;;:::o;18868:111::-;18936:4;18968;18963:3;18959:14;18951:22;;18868:111;;;:::o;19017:694::-;19153:52;19199:5;19153:52;:::i;:::-;19221:84;19298:6;19293:3;19221:84;:::i;:::-;19214:91;;19329:54;19377:5;19329:54;:::i;:::-;19406:7;19437:1;19422:282;19447:6;19444:1;19441:13;19422:282;;;19523:6;19517:13;19550:63;19609:3;19594:13;19550:63;:::i;:::-;19543:70;;19636:58;19687:6;19636:58;:::i;:::-;19626:68;;19482:222;19469:1;19466;19462:9;19457:14;;19422:282;;;19426:14;19129:582;;;19017:694;;:::o;19717:168::-;19800:11;19834:6;19829:3;19822:19;19874:4;19869:3;19865:14;19850:29;;19717:168;;;;:::o;19891:146::-;19988:6;19983:3;19978;19965:30;20029:1;20020:6;20015:3;20011:16;20004:27;19891:146;;;:::o;20043:102::-;20084:6;20135:2;20131:7;20126:2;20119:5;20115:14;20111:28;20101:38;;20043:102;;;:::o;20173:314::-;20269:3;20290:70;20353:6;20348:3;20290:70;:::i;:::-;20283:77;;20370:56;20419:6;20414:3;20407:5;20370:56;:::i;:::-;20451:29;20473:6;20451:29;:::i;:::-;20446:3;20442:39;20435:46;;20173:314;;;;;:::o;20493:533::-;20688:4;20726:3;20715:9;20711:19;20703:27;;20740:117;20854:1;20843:9;20839:17;20830:6;20740:117;:::i;:::-;20905:9;20899:4;20895:20;20889:3;20878:9;20874:19;20867:49;20933:86;21014:4;21005:6;20997;20933:86;:::i;:::-;20925:94;;20493:533;;;;;;:::o;21032:90::-;21066:7;21109:5;21102:13;21095:21;21084:32;;21032:90;;;:::o;21128:116::-;21198:21;21213:5;21198:21;:::i;:::-;21191:5;21188:32;21178:60;;21234:1;21231;21224:12;21178:60;21128:116;:::o;21250:137::-;21304:5;21335:6;21329:13;21320:22;;21351:30;21375:5;21351:30;:::i;:::-;21250:137;;;;:::o;21393:345::-;21460:6;21509:2;21497:9;21488:7;21484:23;21480:32;21477:119;;;21515:79;;:::i;:::-;21477:119;21635:1;21660:61;21713:7;21704:6;21693:9;21689:22;21660:61;:::i;:::-;21650:71;;21606:125;21393:345;;;;:::o;21744:169::-;21828:11;21862:6;21857:3;21850:19;21902:4;21897:3;21893:14;21878:29;;21744:169;;;;:::o;21919:170::-;22059:22;22055:1;22047:6;22043:14;22036:46;21919:170;:::o;22095:366::-;22237:3;22258:67;22322:2;22317:3;22258:67;:::i;:::-;22251:74;;22334:93;22423:3;22334:93;:::i;:::-;22452:2;22447:3;22443:12;22436:19;;22095:366;;;:::o;22467:419::-;22633:4;22671:2;22660:9;22656:18;22648:26;;22720:9;22714:4;22710:20;22706:1;22695:9;22691:17;22684:47;22748:131;22874:4;22748:131;:::i;:::-;22740:139;;22467:419;;;:::o;22892:143::-;22949:5;22980:6;22974:13;22965:22;;22996:33;23023:5;22996:33;:::i;:::-;22892:143;;;;:::o;23041:351::-;23111:6;23160:2;23148:9;23139:7;23135:23;23131:32;23128:119;;;23166:79;;:::i;:::-;23128:119;23286:1;23311:64;23367:7;23358:6;23347:9;23343:22;23311:64;:::i;:::-;23301:74;;23257:128;23041:351;;;;:::o;23398:168::-;23538:20;23534:1;23526:6;23522:14;23515:44;23398:168;:::o;23572:366::-;23714:3;23735:67;23799:2;23794:3;23735:67;:::i;:::-;23728:74;;23811:93;23900:3;23811:93;:::i;:::-;23929:2;23924:3;23920:12;23913:19;;23572:366;;;:::o;23944:419::-;24110:4;24148:2;24137:9;24133:18;24125:26;;24197:9;24191:4;24187:20;24183:1;24172:9;24168:17;24161:47;24225:131;24351:4;24225:131;:::i;:::-;24217:139;;23944:419;;;:::o;24369:104::-;24434:6;24462:4;24452:14;;24369:104;;;:::o;24479:143::-;24576:11;24613:3;24598:18;;24479:143;;;;:::o;24628:98::-;24693:4;24716:3;24708:11;;24628:98;;;:::o;24732:111::-;24800:4;24832;24827:3;24823:14;24815:22;;24732:111;;;:::o;24881:694::-;25017:52;25063:5;25017:52;:::i;:::-;25085:84;25162:6;25157:3;25085:84;:::i;:::-;25078:91;;25193:54;25241:5;25193:54;:::i;:::-;25270:7;25301:1;25286:282;25311:6;25308:1;25305:13;25286:282;;;25387:6;25381:13;25414:63;25473:3;25458:13;25414:63;:::i;:::-;25407:70;;25500:58;25551:6;25500:58;:::i;:::-;25490:68;;25346:222;25333:1;25330;25326:9;25321:14;;25286:282;;;25290:14;24993:582;;;24881:694;;:::o;25581:533::-;25776:4;25814:3;25803:9;25799:19;25791:27;;25828:117;25942:1;25931:9;25927:17;25918:6;25828:117;:::i;:::-;25993:9;25987:4;25983:20;25977:3;25966:9;25962:19;25955:49;26021:86;26102:4;26093:6;26085;26021:86;:::i;:::-;26013:94;;25581:533;;;;;;:::o;26120:173::-;26260:25;26256:1;26248:6;26244:14;26237:49;26120:173;:::o;26299:366::-;26441:3;26462:67;26526:2;26521:3;26462:67;:::i;:::-;26455:74;;26538:93;26627:3;26538:93;:::i;:::-;26656:2;26651:3;26647:12;26640:19;;26299:366;;;:::o;26671:419::-;26837:4;26875:2;26864:9;26860:18;26852:26;;26924:9;26918:4;26914:20;26910:1;26899:9;26895:17;26888:47;26952:131;27078:4;26952:131;:::i;:::-;26944:139;;26671:419;;;:::o;27096:118::-;27183:24;27201:5;27183:24;:::i;:::-;27178:3;27171:37;27096:118;;:::o;27220:442::-;27369:4;27407:2;27396:9;27392:18;27384:26;;27420:71;27488:1;27477:9;27473:17;27464:6;27420:71;:::i;:::-;27501:72;27569:2;27558:9;27554:18;27545:6;27501:72;:::i;:::-;27583;27651:2;27640:9;27636:18;27627:6;27583:72;:::i;:::-;27220:442;;;;;;:::o;27668:182::-;27808:34;27804:1;27796:6;27792:14;27785:58;27668:182;:::o;27856:366::-;27998:3;28019:67;28083:2;28078:3;28019:67;:::i;:::-;28012:74;;28095:93;28184:3;28095:93;:::i;:::-;28213:2;28208:3;28204:12;28197:19;;27856:366;;;:::o;28228:419::-;28394:4;28432:2;28421:9;28417:18;28409:26;;28481:9;28475:4;28471:20;28467:1;28456:9;28452:17;28445:47;28509:131;28635:4;28509:131;:::i;:::-;28501:139;;28228:419;;;:::o;28653:220::-;28793:34;28789:1;28781:6;28777:14;28770:58;28862:3;28857:2;28849:6;28845:15;28838:28;28653:220;:::o;28879:366::-;29021:3;29042:67;29106:2;29101:3;29042:67;:::i;:::-;29035:74;;29118:93;29207:3;29118:93;:::i;:::-;29236:2;29231:3;29227:12;29220:19;;28879:366;;;:::o;29251:419::-;29417:4;29455:2;29444:9;29440:18;29432:26;;29504:9;29498:4;29494:20;29490:1;29479:9;29475:17;29468:47;29532:131;29658:4;29532:131;:::i;:::-;29524:139;;29251:419;;;:::o;29676:332::-;29797:4;29835:2;29824:9;29820:18;29812:26;;29848:71;29916:1;29905:9;29901:17;29892:6;29848:71;:::i;:::-;29929:72;29997:2;29986:9;29982:18;29973:6;29929:72;:::i;:::-;29676:332;;;;;:::o;30014:143::-;30071:5;30102:6;30096:13;30087:22;;30118:33;30145:5;30118:33;:::i;:::-;30014:143;;;;:::o;30163:507::-;30242:6;30250;30299:2;30287:9;30278:7;30274:23;30270:32;30267:119;;;30305:79;;:::i;:::-;30267:119;30425:1;30450:64;30506:7;30497:6;30486:9;30482:22;30450:64;:::i;:::-;30440:74;;30396:128;30563:2;30589:64;30645:7;30636:6;30625:9;30621:22;30589:64;:::i;:::-;30579:74;;30534:129;30163:507;;;;;:::o;30676:180::-;30724:77;30721:1;30714:88;30821:4;30818:1;30811:15;30845:4;30842:1;30835:15;30862:104;30927:6;30955:4;30945:14;;30862:104;;;:::o;30972:143::-;31069:11;31106:3;31091:18;;30972:143;;;;:::o;31121:98::-;31186:4;31209:3;31201:11;;31121:98;;;:::o;31225:111::-;31293:4;31325;31320:3;31316:14;31308:22;;31225:111;;;:::o;31374:694::-;31510:52;31556:5;31510:52;:::i;:::-;31578:84;31655:6;31650:3;31578:84;:::i;:::-;31571:91;;31686:54;31734:5;31686:54;:::i;:::-;31763:7;31794:1;31779:282;31804:6;31801:1;31798:13;31779:282;;;31880:6;31874:13;31907:63;31966:3;31951:13;31907:63;:::i;:::-;31900:70;;31993:58;32044:6;31993:58;:::i;:::-;31983:68;;31839:222;31826:1;31823;31819:9;31814:14;;31779:282;;;31783:14;31486:582;;;31374:694;;:::o;32074:532::-;32269:4;32307:3;32296:9;32292:19;32284:27;;32321:117;32435:1;32424:9;32420:17;32411:6;32321:117;:::i;:::-;32485:9;32479:4;32475:20;32470:2;32459:9;32455:18;32448:48;32513:86;32594:4;32585:6;32577;32513:86;:::i;:::-;32505:94;;32074:532;;;;;;:::o;32612:173::-;32752:25;32748:1;32740:6;32736:14;32729:49;32612:173;:::o;32791:366::-;32933:3;32954:67;33018:2;33013:3;32954:67;:::i;:::-;32947:74;;33030:93;33119:3;33030:93;:::i;:::-;33148:2;33143:3;33139:12;33132:19;;32791:366;;;:::o;33163:419::-;33329:4;33367:2;33356:9;33352:18;33344:26;;33416:9;33410:4;33406:20;33402:1;33391:9;33387:17;33380:47;33444:131;33570:4;33444:131;:::i;:::-;33436:139;;33163:419;;;:::o;33588:169::-;33728:21;33724:1;33716:6;33712:14;33705:45;33588:169;:::o;33763:366::-;33905:3;33926:67;33990:2;33985:3;33926:67;:::i;:::-;33919:74;;34002:93;34091:3;34002:93;:::i;:::-;34120:2;34115:3;34111:12;34104:19;;33763:366;;;:::o;34135:419::-;34301:4;34339:2;34328:9;34324:18;34316:26;;34388:9;34382:4;34378:20;34374:1;34363:9;34359:17;34352:47;34416:131;34542:4;34416:131;:::i;:::-;34408:139;;34135:419;;;:::o;34560:174::-;34700:26;34696:1;34688:6;34684:14;34677:50;34560:174;:::o;34740:366::-;34882:3;34903:67;34967:2;34962:3;34903:67;:::i;:::-;34896:74;;34979:93;35068:3;34979:93;:::i;:::-;35097:2;35092:3;35088:12;35081:19;;34740:366;;;:::o;35112:419::-;35278:4;35316:2;35305:9;35301:18;35293:26;;35365:9;35359:4;35355:20;35351:1;35340:9;35336:17;35329:47;35393:131;35519:4;35393:131;:::i;:::-;35385:139;;35112:419;;;:::o;35537:169::-;35677:21;35673:1;35665:6;35661:14;35654:45;35537:169;:::o;35712:366::-;35854:3;35875:67;35939:2;35934:3;35875:67;:::i;:::-;35868:74;;35951:93;36040:3;35951:93;:::i;:::-;36069:2;36064:3;36060:12;36053:19;;35712:366;;;:::o;36084:419::-;36250:4;36288:2;36277:9;36273:18;36265:26;;36337:9;36331:4;36327:20;36323:1;36312:9;36308:17;36301:47;36365:131;36491:4;36365:131;:::i;:::-;36357:139;;36084:419;;;:::o;36509:180::-;36557:77;36554:1;36547:88;36654:4;36651:1;36644:15;36678:4;36675:1;36668:15;36695:102;36737:8;36784:5;36781:1;36777:13;36756:34;;36695:102;;;:::o;36803:848::-;36864:5;36871:4;36895:6;36886:15;;36919:5;36910:14;;36933:712;36954:1;36944:8;36941:15;36933:712;;;37049:4;37044:3;37040:14;37034:4;37031:24;37028:50;;;37058:18;;:::i;:::-;37028:50;37108:1;37098:8;37094:16;37091:451;;;37523:4;37516:5;37512:16;37503:25;;37091:451;37573:4;37567;37563:15;37555:23;;37603:32;37626:8;37603:32;:::i;:::-;37591:44;;36933:712;;;36803:848;;;;;;;:::o;37657:1073::-;37711:5;37902:8;37892:40;;37923:1;37914:10;;37925:5;;37892:40;37951:4;37941:36;;37968:1;37959:10;;37970:5;;37941:36;38037:4;38085:1;38080:27;;;;38121:1;38116:191;;;;38030:277;;38080:27;38098:1;38089:10;;38100:5;;;38116:191;38161:3;38151:8;38148:17;38145:43;;;38168:18;;:::i;:::-;38145:43;38217:8;38214:1;38210:16;38201:25;;38252:3;38245:5;38242:14;38239:40;;;38259:18;;:::i;:::-;38239:40;38292:5;;;38030:277;;38416:2;38406:8;38403:16;38397:3;38391:4;38388:13;38384:36;38366:2;38356:8;38353:16;38348:2;38342:4;38339:12;38335:35;38319:111;38316:246;;;38472:8;38466:4;38462:19;38453:28;;38507:3;38500:5;38497:14;38494:40;;;38514:18;;:::i;:::-;38494:40;38547:5;;38316:246;38587:42;38625:3;38615:8;38609:4;38606:1;38587:42;:::i;:::-;38572:57;;;;38661:4;38656:3;38652:14;38645:5;38642:25;38639:51;;;38670:18;;:::i;:::-;38639:51;38719:4;38712:5;38708:16;38699:25;;37657:1073;;;;;;:::o;38736:225::-;38794:5;38818:22;38835:4;38818:22;:::i;:::-;38810:30;;38861:26;38878:8;38861:26;:::i;:::-;38849:38;;38906:48;38943:10;38933:8;38927:4;38906:48;:::i;:::-;38897:57;;38736:225;;;;:::o;38967:235::-;39107:34;39103:1;39095:6;39091:14;39084:58;39176:18;39171:2;39163:6;39159:15;39152:43;38967:235;:::o;39208:366::-;39350:3;39371:67;39435:2;39430:3;39371:67;:::i;:::-;39364:74;;39447:93;39536:3;39447:93;:::i;:::-;39565:2;39560:3;39556:12;39549:19;;39208:366;;;:::o;39580:419::-;39746:4;39784:2;39773:9;39769:18;39761:26;;39833:9;39827:4;39823:20;39819:1;39808:9;39804:17;39797:47;39861:131;39987:4;39861:131;:::i;:::-;39853:139;;39580:419;;;:::o;40005:173::-;40036:1;40053:19;40070:1;40053:19;:::i;:::-;40048:24;;40086:19;40103:1;40086:19;:::i;:::-;40081:24;;40124:1;40114:35;;40129:18;;:::i;:::-;40114:35;40170:1;40167;40163:9;40158:14;;40005:173;;;;:::o;40184:182::-;40223:1;40240:19;40257:1;40240:19;:::i;:::-;40235:24;;40273:19;40290:1;40273:19;:::i;:::-;40268:24;;40311:1;40301:35;;40316:18;;:::i;:::-;40301:35;40358:1;40355;40351:9;40346:14;;40184:182;;;;:::o;40372:175::-;40410:3;40433:23;40450:5;40433:23;:::i;:::-;40424:32;;40478:10;40471:5;40468:21;40465:47;;40492:18;;:::i;:::-;40465:47;40539:1;40532:5;40528:13;40521:20;;40372:175;;;:::o;40553:197::-;40592:3;40611:19;40628:1;40611:19;:::i;:::-;40606:24;;40644:19;40661:1;40644:19;:::i;:::-;40639:24;;40686:1;40683;40679:9;40672:16;;40709:10;40704:3;40701:19;40698:45;;;40723:18;;:::i;:::-;40698:45;40553:197;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2596800","executionCost":"infinite","totalCost":"infinite"},"external":{"FIELD_SIZE()":"397","TOKEN_A()":"infinite","TOKEN_B()":"infinite","ZERO_VALUE()":"373","deposit(bytes32,uint256,uint256,address,bytes)":"infinite","depositVerifier()":"infinite","filledSubtrees(uint256)":"2853","finalize(bytes32,bytes32,bytes)":"infinite","finalizeVerifier()":"infinite","hashLeftRight(address,bytes32,bytes32)":"infinite","hasher()":"infinite","levels()":"2491","modelInput()":"2533","nextIndex()":"2581","nodeStatusPool(bytes32)":"2974","root()":"2451","swapVerifier()":"infinite","transact(bytes32,(uint8,uint248),bytes)":"infinite","transactionResults(bytes32)":"infinite","withdraw(bytes32,uint256,uint256,address,bytes)":"infinite","withdrawVerifier()":"infinite","zeros(uint256)":"1544"},"internal":{"_transact(struct ModelOutput calldata)":"infinite"}},"methodIdentifiers":{"FIELD_SIZE()":"414a37ba","TOKEN_A()":"ff709ee8","TOKEN_B()":"499f712e","ZERO_VALUE()":"ec732959","deposit(bytes32,uint256,uint256,address,bytes)":"823db3d2","depositVerifier()":"26120c88","filledSubtrees(uint256)":"f178e47c","finalize(bytes32,bytes32,bytes)":"aefb78d0","finalizeVerifier()":"14fd7b35","hashLeftRight(address,bytes32,bytes32)":"8ea3099e","hasher()":"ed33639f","levels()":"4ecf518b","modelInput()":"479015cd","nextIndex()":"fc7e9c6f","nodeStatusPool(bytes32)":"61c3305c","root()":"ebf0c717","swapVerifier()":"8de533a4","transact(bytes32,(uint8,uint248),bytes)":"5c758f8e","transactionResults(bytes32)":"513a4f07","withdraw(bytes32,uint256,uint256,address,bytes)":"c4b5239f","withdrawVerifier()":"864eb164","zeros(uint256)":"e8295588"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"contract IDepositVerifier\",\"name\":\"_depositVerifier\",\"type\":\"address\"},{\"internalType\":\"contract IWithdrawVerifier\",\"name\":\"_withdrawVerifier\",\"type\":\"address\"},{\"internalType\":\"contract ISwapVerifier\",\"name\":\"_swapVerifier\",\"type\":\"address\"},{\"internalType\":\"contract IFinalizeVerifier\",\"name\":\"_finalizeVerifier\",\"type\":\"address\"},{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_A\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_B\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_cNode\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_balanceA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_balanceB\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositVerifier\",\"outputs\":[{\"internalType\":\"contract IDepositVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_cNode2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeVerifier\",\"outputs\":[{\"internalType\":\"contract IFinalizeVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasher\",\"outputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modelInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainlinkPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nodeStatusPool\",\"outputs\":[{\"internalType\":\"enum NodeStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapVerifier\",\"outputs\":[{\"internalType\":\"contract ISwapVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifier\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"direction\",\"type\":\"uint8\"},{\"internalType\":\"uint248\",\"name\":\"amount\",\"type\":\"uint248\"}],\"internalType\":\"struct ModelOutput\",\"name\":\"modelOutput\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"transactionResults\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"direction\",\"type\":\"uint8\"},{\"internalType\":\"uint120\",\"name\":\"amountA\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"amountB\",\"type\":\"uint120\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_balanceA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_balanceB\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawVerifier\",\"outputs\":[{\"internalType\":\"contract IWithdrawVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"hashLeftRight(address,bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"zeros(uint256)\":{\"details\":\"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Relayer.sol\":\"Relayer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/IVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IDepositVerifier {\\n    function verify(\\n        uint256[5] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface IWithdrawVerifier {\\n    function verify(\\n        uint256[5] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface ISwapVerifier {\\n    function verify(\\n        uint256[4] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\\ninterface IFinalizeVerifier {\\n    function verify(\\n        uint256[3] calldata _publicInputs,\\n        bytes calldata _proof\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x9abb94139f2ce3b43e24529956ac86e8c9bfaf956526375b7bfdf8fa767fcfa8\",\"license\":\"MIT\"},\"contracts/MerkleTree.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHasher {\\n    function MiMCSponge(\\n        uint256 in_xL,\\n        uint256 in_xR\\n    ) external pure returns (uint256 xL, uint256 xR);\\n}\\n\\ncontract MerkleTree {\\n    uint256 public constant FIELD_SIZE =\\n        21888242871839275222246405745257275088548364400416034343698204186575808495617;\\n    uint256 public constant ZERO_VALUE =\\n        21663839004416932945382355908790599225266501822907911457504978515578255421292; // = keccak256(\\\"tornado\\\") % FIELD_SIZE\\n    IHasher public immutable hasher;\\n\\n    uint32 public levels;\\n\\n    // the following variables are made public for easier testing and debugging and\\n    // are not supposed to be accessed in regular code\\n\\n    // filledSubtrees and roots could be bytes32[size], but using mappings makes it cheaper because\\n    // it removes index range check on every interaction\\n    mapping(uint256 => bytes32) public filledSubtrees;\\n    bytes32 public root;\\n    uint32 public nextIndex = 0;\\n\\n    constructor(uint32 _levels, IHasher _hasher) {\\n        require(_levels > 0, \\\"_levels should be greater than zero\\\");\\n        require(_levels < 32, \\\"_levels should be less than 32\\\");\\n        levels = _levels;\\n        hasher = _hasher;\\n\\n        for (uint32 i = 0; i < _levels; i++) {\\n            filledSubtrees[i] = zeros(i);\\n        }\\n\\n        root = zeros(_levels - 1);\\n    }\\n\\n    /**\\n    @dev Hash 2 tree leaves, returns MiMC(_left, _right)\\n  */\\n    function hashLeftRight(\\n        IHasher _hasher,\\n        bytes32 _left,\\n        bytes32 _right\\n    ) public pure returns (bytes32) {\\n        require(\\n            uint256(_left) < FIELD_SIZE,\\n            \\\"_left should be inside the field\\\"\\n        );\\n        require(\\n            uint256(_right) < FIELD_SIZE,\\n            \\\"_right should be inside the field\\\"\\n        );\\n        uint256 R = uint256(_left);\\n        uint256 C = 0;\\n        (R, C) = _hasher.MiMCSponge(R, C);\\n        R = addmod(R, uint256(_right), FIELD_SIZE);\\n        (R, C) = _hasher.MiMCSponge(R, C);\\n        return bytes32(R);\\n    }\\n\\n    function _insert(bytes32 _leaf) internal returns (uint32 index) {\\n        uint32 _nextIndex = nextIndex;\\n        require(\\n            _nextIndex != uint32(2) ** levels,\\n            \\\"Merkle tree is full. No more leaves can be added\\\"\\n        );\\n        uint32 currentIndex = _nextIndex;\\n        bytes32 currentLevelHash = _leaf;\\n        bytes32 left;\\n        bytes32 right;\\n\\n        for (uint32 i = 0; i < levels; i++) {\\n            if (currentIndex % 2 == 0) {\\n                left = currentLevelHash;\\n                right = zeros(i);\\n                filledSubtrees[i] = currentLevelHash;\\n            } else {\\n                left = filledSubtrees[i];\\n                right = currentLevelHash;\\n            }\\n            currentLevelHash = hashLeftRight(hasher, left, right);\\n            currentIndex /= 2;\\n        }\\n\\n        nextIndex = _nextIndex + 1;\\n        return _nextIndex;\\n    }\\n\\n    /// @dev provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\\n    function zeros(uint256 i) public pure returns (bytes32) {\\n        if (i == 0)\\n            return\\n                bytes32(\\n                    0x2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c\\n                );\\n        else if (i == 1)\\n            return\\n                bytes32(\\n                    0x256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d\\n                );\\n        else if (i == 2)\\n            return\\n                bytes32(\\n                    0x1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200\\n                );\\n        else if (i == 3)\\n            return\\n                bytes32(\\n                    0x20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb\\n                );\\n        else if (i == 4)\\n            return\\n                bytes32(\\n                    0x0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9\\n                );\\n        else if (i == 5)\\n            return\\n                bytes32(\\n                    0x24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959\\n                );\\n        else if (i == 6)\\n            return\\n                bytes32(\\n                    0x1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c\\n                );\\n        else if (i == 7)\\n            return\\n                bytes32(\\n                    0x19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4\\n                );\\n        else if (i == 8)\\n            return\\n                bytes32(\\n                    0x261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80\\n                );\\n        else if (i == 9)\\n            return\\n                bytes32(\\n                    0x0058459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007\\n                );\\n        else if (i == 10)\\n            return\\n                bytes32(\\n                    0x1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30\\n                );\\n        else if (i == 11)\\n            return\\n                bytes32(\\n                    0x1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5\\n                );\\n        else if (i == 12)\\n            return\\n                bytes32(\\n                    0x0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f\\n                );\\n        else if (i == 13)\\n            return\\n                bytes32(\\n                    0x1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd\\n                );\\n        else if (i == 14)\\n            return\\n                bytes32(\\n                    0x133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108\\n                );\\n        else if (i == 15)\\n            return\\n                bytes32(\\n                    0x13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6\\n                );\\n        else if (i == 16)\\n            return\\n                bytes32(\\n                    0x1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854\\n                );\\n        else if (i == 17)\\n            return\\n                bytes32(\\n                    0x0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea\\n                );\\n        else if (i == 18)\\n            return\\n                bytes32(\\n                    0x24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d\\n                );\\n        else if (i == 19)\\n            return\\n                bytes32(\\n                    0x198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05\\n                );\\n        else if (i == 20)\\n            return\\n                bytes32(\\n                    0x29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4\\n                );\\n        else if (i == 21)\\n            return\\n                bytes32(\\n                    0x19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967\\n                );\\n        else if (i == 22)\\n            return\\n                bytes32(\\n                    0x1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453\\n                );\\n        else if (i == 23)\\n            return\\n                bytes32(\\n                    0x10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48\\n                );\\n        else if (i == 24)\\n            return\\n                bytes32(\\n                    0x0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1\\n                );\\n        else if (i == 25)\\n            return\\n                bytes32(\\n                    0x019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c\\n                );\\n        else if (i == 26)\\n            return\\n                bytes32(\\n                    0x2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99\\n                );\\n        else if (i == 27)\\n            return\\n                bytes32(\\n                    0x2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354\\n                );\\n        else if (i == 28)\\n            return\\n                bytes32(\\n                    0x002df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d\\n                );\\n        else if (i == 29)\\n            return\\n                bytes32(\\n                    0x104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427\\n                );\\n        else if (i == 30)\\n            return\\n                bytes32(\\n                    0x1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb\\n                );\\n        else if (i == 31)\\n            return\\n                bytes32(\\n                    0x2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc\\n                );\\n        else revert(\\\"Index out of bounds\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x08e1b84cb095fc445a4c89f9b9ffb32329ffbc2abf247cf47cdedf15e81e054f\",\"license\":\"MIT\"},\"contracts/Relayer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport {MerkleTree, IHasher} from \\\"./MerkleTree.sol\\\";\\nimport {ERC20} from \\\"solmate/tokens/ERC20.sol\\\";\\nimport {Vault} from \\\"./Vault.sol\\\";\\nimport {IDepositVerifier, IWithdrawVerifier, ISwapVerifier, IFinalizeVerifier} from \\\"./IVerifier.sol\\\";\\n\\nstruct ModelOutput {\\n    uint8 direction;\\n    uint248 amount;\\n}\\n\\nstruct ModelInput {\\n    uint256 chainlinkPrice;\\n}\\n\\nenum NodeStatus {\\n    EMPTY,\\n    TRANSACTED,\\n    NULLIFIED\\n}\\n\\nstruct TxResult {\\n    uint8 direction;\\n    uint120 amountA;\\n    uint120 amountB;\\n}\\n\\ncontract Relayer is MerkleTree {\\n    \\n    ERC20 immutable public TOKEN_A;\\n    ERC20 immutable public TOKEN_B;\\n    IDepositVerifier public depositVerifier;\\n    IWithdrawVerifier public withdrawVerifier;\\n    ISwapVerifier public swapVerifier;\\n    IFinalizeVerifier public finalizeVerifier;\\n    ModelInput public modelInput;\\n    mapping(bytes32 => NodeStatus) public nodeStatusPool;\\n    mapping(bytes32 => TxResult) public transactionResults;\\n\\n    constructor(\\n        ERC20 _tokenA,\\n        ERC20 _tokenB,\\n        IDepositVerifier _depositVerifier,\\n        IWithdrawVerifier _withdrawVerifier,\\n        ISwapVerifier _swapVerifier,\\n        IFinalizeVerifier _finalizeVerifier,\\n        IHasher _hasher\\n    ) MerkleTree(32, _hasher) {\\n        TOKEN_A = _tokenA;\\n        TOKEN_B = _tokenB;\\n        depositVerifier = _depositVerifier;\\n        withdrawVerifier = _withdrawVerifier;\\n        swapVerifier = _swapVerifier;\\n        finalizeVerifier = _finalizeVerifier;\\n    }\\n\\n    function deposit(\\n        bytes32 _cNode,\\n        uint256 _balanceA,\\n        uint256 _balanceB,\\n        address _vault,\\n        bytes calldata _proof\\n    ) public returns (uint32) {\\n        uint256[5] memory _publicInputs;\\n        _publicInputs[0] = uint256(_cNode);\\n        _publicInputs[1] = uint256(Vault(_vault).cModel());\\n        _publicInputs[2] = uint256(_balanceA);\\n        _publicInputs[3] = uint256(_balanceB);\\n        _publicInputs[4] = uint256(uint160(_vault));\\n        require(\\n            msg.sender == _vault,\\n            \\\"Deposit not trader\\\"\\n        );\\n        require(\\n            depositVerifier.verify(_publicInputs, _proof),\\n            \\\"Deposit Verifier failed\\\"\\n        );\\n\\n        TOKEN_A.transferFrom(_vault, address(this), _balanceA);\\n        TOKEN_B.transferFrom(_vault, address(this), _balanceB);\\n\\n        return MerkleTree._insert(_cNode);\\n    }\\n\\n    function withdraw(\\n        bytes32 _nullifier,\\n        uint256 _balanceA,\\n        uint256 _balanceB,\\n        address _vault,\\n        bytes calldata _proof\\n    ) public {\\n        uint256[5] memory _publicInputs;\\n        _publicInputs[0] = uint256(root);\\n        _publicInputs[1] = uint256(_nullifier);\\n        _publicInputs[2] = uint256(_balanceA);\\n        _publicInputs[3] = uint256(_balanceB);\\n        _publicInputs[4] = uint256(uint160(_vault));\\n        require(\\n            msg.sender == _vault,\\n            \\\"Withdraw not trader\\\"\\n        );\\n        require(\\n            withdrawVerifier.verify(_publicInputs, _proof),\\n            \\\"Withdraw Verifier failed\\\"\\n        );\\n\\n        TOKEN_A.transferFrom(address(this), _vault, _balanceA);\\n        TOKEN_B.transferFrom(address(this), _vault, _balanceB);\\n\\n        nodeStatusPool[_nullifier] = NodeStatus.NULLIFIED;\\n    }\\n\\n    function transact(\\n        bytes32 _nullifier,\\n        ModelOutput calldata modelOutput,\\n        bytes calldata _proof\\n    ) public {\\n        uint256[4] memory _publicInputs;\\n        _publicInputs[0] = uint256(MerkleTree.root);\\n        _publicInputs[1] = uint256(_nullifier);\\n        _publicInputs[2] = modelInput.chainlinkPrice;\\n        _publicInputs[3] = uint256(bytes32(abi.encodePacked(modelOutput.direction, modelOutput.amount)));\\n        require(\\n            swapVerifier.verify(_publicInputs, _proof),\\n            \\\"Swap Verifier failed\\\"\\n        );\\n\\n        transactionResults[_nullifier] = _transact(modelOutput);\\n        nodeStatusPool[_nullifier] = NodeStatus.TRANSACTED;\\n    }\\n\\n    function finalize(\\n        bytes32 _nullifier,\\n        bytes32 _cNode2,\\n        bytes calldata _proof\\n    ) public {\\n        uint256[3] memory _publicInputs;\\n        _publicInputs[0] = uint256(MerkleTree.root);\\n        _publicInputs[1] = uint256(_nullifier);\\n        _publicInputs[2] = uint256(_cNode2);\\n        require(\\n            finalizeVerifier.verify(_publicInputs, _proof),\\n            \\\"finalize: verify failed\\\"\\n        );\\n        \\n        MerkleTree._insert(_cNode2);\\n        delete transactionResults[_nullifier];\\n        nodeStatusPool[_nullifier] = NodeStatus.NULLIFIED;\\n    }\\n\\n    function _transact(ModelOutput calldata _modelOutput) private pure returns (TxResult memory) {\\n        // TODO swap with 1inch aggregator\\n        return TxResult(0, 0, 0);\\n    }\\n}\\n\",\"keccak256\":\"0x9ed2086414fbdb4d710e42bb878f1b98e8173e945e5aa379cb7757820ba6beca\",\"license\":\"MIT\"},\"contracts/Vault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\nimport {ERC20} from \\\"solmate/tokens/ERC20.sol\\\";\\nimport {Owned} from \\\"solmate/auth/Owned.sol\\\";\\n\\ninterface IRelayer {\\n    function deposit(\\n        bytes32 _cNode,\\n        bytes32 _cModel,\\n        uint256 _balanceA,\\n        uint256 _balanceB,\\n        bytes calldata _proof\\n    ) external returns (uint32);\\n\\n    function withdraw(\\n        bytes32 _nullifier,\\n        uint256 _balanceA,\\n        uint256 _balanceB,\\n        address _vault,\\n        bytes calldata _proof\\n    ) external;\\n\\n    function TOKEN_A() external returns (ERC20);\\n    function TOKEN_B() external returns (ERC20);\\n}\\n\\nenum VaultState {\\n    DEPOSIT,\\n    WAITING,\\n    WITHDRAW\\n}\\n\\ncontract Vault is Owned {\\n    \\n    IRelayer immutable public relayer;\\n    bytes32 public cModel;\\n    mapping(address => uint256) public userWeights;\\n    uint256 public totalWeights;\\n    uint256 public afterBalance;\\n    VaultState public state;\\n\\n    constructor(\\n        IRelayer _relayer,\\n        address _trader,\\n        bytes32 _cModel\\n    ) Owned(_trader) {\\n        relayer = _relayer;\\n        cModel = _cModel;\\n        relayer.TOKEN_A().approve(address(relayer), type(uint256).max);\\n        relayer.TOKEN_B().approve(address(relayer), type(uint256).max);\\n    }\\n\\n    modifier requireState(VaultState _state) {\\n        require(state == _state, \\\"Invalid Vault state\\\");\\n        _;\\n    }\\n\\n    function userDeposit(uint256 amount) public requireState(VaultState.DEPOSIT) {\\n        relayer.TOKEN_A().transferFrom(msg.sender, address(this), amount);\\n        userWeights[msg.sender] += amount;\\n        totalWeights += amount;\\n    }\\n\\n    function depositToRelayer(\\n        bytes32 _cNode,\\n        bytes calldata _proof\\n    ) public requireState(VaultState.DEPOSIT) onlyOwner {\\n        // TODO swap A to B and make 50 50\\n        uint256 balanceA = relayer.TOKEN_A().balanceOf(address(this));\\n        uint256 balanceB = relayer.TOKEN_B().balanceOf(address(this));\\n        relayer.deposit(_cNode, cModel, balanceA, balanceB, _proof);\\n        state = VaultState.WAITING;\\n    }\\n\\n    function withdrawFromRelayer(\\n        bytes32 _nullifier,\\n        uint256 _balanceA,\\n        uint256 _balanceB,\\n        bytes calldata _proof\\n    ) public requireState(VaultState.WAITING) onlyOwner {\\n        relayer.withdraw(_nullifier, _balanceA, _balanceB, address(this), _proof);\\n        // TODO swap B to A\\n        afterBalance = relayer.TOKEN_A().balanceOf(address(this));\\n        state = VaultState.WITHDRAW;\\n    }\\n\\n    function userWithdraw(address to) public requireState(VaultState.WITHDRAW) {       \\n        uint256 amount = afterBalance * userWeights[to] / totalWeights;\\n        relayer.TOKEN_A().transferFrom(address(this), to, amount);\\n    }\\n}\",\"keccak256\":\"0xfc379b25c765e6687a7b5c0c357542e2789e0512c95e670516f74128334ecaac\",\"license\":\"MIT\"},\"lib/solmate/src/auth/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Simple single owner authorization mixin.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)\\nabstract contract Owned {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            OWNERSHIP STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    address public owner;\\n\\n    modifier onlyOwner() virtual {\\n        require(msg.sender == owner, \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(address _owner) {\\n        owner = _owner;\\n\\n        emit OwnershipTransferred(address(0), _owner);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             OWNERSHIP LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\"},\"lib/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[{"astId":74,"contract":"contracts/Relayer.sol:Relayer","label":"levels","offset":0,"slot":"0","type":"t_uint32"},{"astId":78,"contract":"contracts/Relayer.sol:Relayer","label":"filledSubtrees","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_bytes32)"},{"astId":80,"contract":"contracts/Relayer.sol:Relayer","label":"root","offset":0,"slot":"2","type":"t_bytes32"},{"astId":83,"contract":"contracts/Relayer.sol:Relayer","label":"nextIndex","offset":0,"slot":"3","type":"t_uint32"},{"astId":673,"contract":"contracts/Relayer.sol:Relayer","label":"depositVerifier","offset":4,"slot":"3","type":"t_contract(IDepositVerifier)13"},{"astId":676,"contract":"contracts/Relayer.sol:Relayer","label":"withdrawVerifier","offset":0,"slot":"4","type":"t_contract(IWithdrawVerifier)25"},{"astId":679,"contract":"contracts/Relayer.sol:Relayer","label":"swapVerifier","offset":0,"slot":"5","type":"t_contract(ISwapVerifier)37"},{"astId":682,"contract":"contracts/Relayer.sol:Relayer","label":"finalizeVerifier","offset":0,"slot":"6","type":"t_contract(IFinalizeVerifier)49"},{"astId":685,"contract":"contracts/Relayer.sol:Relayer","label":"modelInput","offset":0,"slot":"7","type":"t_struct(ModelInput)651_storage"},{"astId":690,"contract":"contracts/Relayer.sol:Relayer","label":"nodeStatusPool","offset":0,"slot":"8","type":"t_mapping(t_bytes32,t_enum(NodeStatus)655)"},{"astId":695,"contract":"contracts/Relayer.sol:Relayer","label":"transactionResults","offset":0,"slot":"9","type":"t_mapping(t_bytes32,t_struct(TxResult)662_storage)"}],"types":{"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IDepositVerifier)13":{"encoding":"inplace","label":"contract IDepositVerifier","numberOfBytes":"20"},"t_contract(IFinalizeVerifier)49":{"encoding":"inplace","label":"contract IFinalizeVerifier","numberOfBytes":"20"},"t_contract(ISwapVerifier)37":{"encoding":"inplace","label":"contract ISwapVerifier","numberOfBytes":"20"},"t_contract(IWithdrawVerifier)25":{"encoding":"inplace","label":"contract IWithdrawVerifier","numberOfBytes":"20"},"t_enum(NodeStatus)655":{"encoding":"inplace","label":"enum NodeStatus","numberOfBytes":"1"},"t_mapping(t_bytes32,t_enum(NodeStatus)655)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => enum NodeStatus)","numberOfBytes":"32","value":"t_enum(NodeStatus)655"},"t_mapping(t_bytes32,t_struct(TxResult)662_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct TxResult)","numberOfBytes":"32","value":"t_struct(TxResult)662_storage"},"t_mapping(t_uint256,t_bytes32)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_struct(ModelInput)651_storage":{"encoding":"inplace","label":"struct ModelInput","members":[{"astId":650,"contract":"contracts/Relayer.sol:Relayer","label":"chainlinkPrice","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(TxResult)662_storage":{"encoding":"inplace","label":"struct TxResult","members":[{"astId":657,"contract":"contracts/Relayer.sol:Relayer","label":"direction","offset":0,"slot":"0","type":"t_uint8"},{"astId":659,"contract":"contracts/Relayer.sol:Relayer","label":"amountA","offset":1,"slot":"0","type":"t_uint120"},{"astId":661,"contract":"contracts/Relayer.sol:Relayer","label":"amountB","offset":16,"slot":"0","type":"t_uint120"}],"numberOfBytes":"32"},"t_uint120":{"encoding":"inplace","label":"uint120","numberOfBytes":"15"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Vault.sol":{"IRelayer":{"abi":[{"inputs":[],"name":"TOKEN_A","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"TOKEN_B","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_cNode","type":"bytes32"},{"internalType":"bytes32","name":"_cModel","type":"bytes32"},{"internalType":"uint256","name":"_balanceA","type":"uint256"},{"internalType":"uint256","name":"_balanceB","type":"uint256"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"deposit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_nullifier","type":"bytes32"},{"internalType":"uint256","name":"_balanceA","type":"uint256"},{"internalType":"uint256","name":"_balanceB","type":"uint256"},{"internalType":"address","name":"_vault","type":"address"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"TOKEN_A()":"ff709ee8","TOKEN_B()":"499f712e","deposit(bytes32,bytes32,uint256,uint256,bytes)":"61f6c033","withdraw(bytes32,uint256,uint256,address,bytes)":"c4b5239f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TOKEN_A\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_B\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_cNode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_cModel\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_balanceA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_balanceB\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_balanceA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_balanceB\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault.sol\":\"IRelayer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/Vault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\nimport {ERC20} from \\\"solmate/tokens/ERC20.sol\\\";\\nimport {Owned} from \\\"solmate/auth/Owned.sol\\\";\\n\\ninterface IRelayer {\\n    function deposit(\\n        bytes32 _cNode,\\n        bytes32 _cModel,\\n        uint256 _balanceA,\\n        uint256 _balanceB,\\n        bytes calldata _proof\\n    ) external returns (uint32);\\n\\n    function withdraw(\\n        bytes32 _nullifier,\\n        uint256 _balanceA,\\n        uint256 _balanceB,\\n        address _vault,\\n        bytes calldata _proof\\n    ) external;\\n\\n    function TOKEN_A() external returns (ERC20);\\n    function TOKEN_B() external returns (ERC20);\\n}\\n\\nenum VaultState {\\n    DEPOSIT,\\n    WAITING,\\n    WITHDRAW\\n}\\n\\ncontract Vault is Owned {\\n    \\n    IRelayer immutable public relayer;\\n    bytes32 public cModel;\\n    mapping(address => uint256) public userWeights;\\n    uint256 public totalWeights;\\n    uint256 public afterBalance;\\n    VaultState public state;\\n\\n    constructor(\\n        IRelayer _relayer,\\n        address _trader,\\n        bytes32 _cModel\\n    ) Owned(_trader) {\\n        relayer = _relayer;\\n        cModel = _cModel;\\n        relayer.TOKEN_A().approve(address(relayer), type(uint256).max);\\n        relayer.TOKEN_B().approve(address(relayer), type(uint256).max);\\n    }\\n\\n    modifier requireState(VaultState _state) {\\n        require(state == _state, \\\"Invalid Vault state\\\");\\n        _;\\n    }\\n\\n    function userDeposit(uint256 amount) public requireState(VaultState.DEPOSIT) {\\n        relayer.TOKEN_A().transferFrom(msg.sender, address(this), amount);\\n        userWeights[msg.sender] += amount;\\n        totalWeights += amount;\\n    }\\n\\n    function depositToRelayer(\\n        bytes32 _cNode,\\n        bytes calldata _proof\\n    ) public requireState(VaultState.DEPOSIT) onlyOwner {\\n        // TODO swap A to B and make 50 50\\n        uint256 balanceA = relayer.TOKEN_A().balanceOf(address(this));\\n        uint256 balanceB = relayer.TOKEN_B().balanceOf(address(this));\\n        relayer.deposit(_cNode, cModel, balanceA, balanceB, _proof);\\n        state = VaultState.WAITING;\\n    }\\n\\n    function withdrawFromRelayer(\\n        bytes32 _nullifier,\\n        uint256 _balanceA,\\n        uint256 _balanceB,\\n        bytes calldata _proof\\n    ) public requireState(VaultState.WAITING) onlyOwner {\\n        relayer.withdraw(_nullifier, _balanceA, _balanceB, address(this), _proof);\\n        // TODO swap B to A\\n        afterBalance = relayer.TOKEN_A().balanceOf(address(this));\\n        state = VaultState.WITHDRAW;\\n    }\\n\\n    function userWithdraw(address to) public requireState(VaultState.WITHDRAW) {       \\n        uint256 amount = afterBalance * userWeights[to] / totalWeights;\\n        relayer.TOKEN_A().transferFrom(address(this), to, amount);\\n    }\\n}\",\"keccak256\":\"0xfc379b25c765e6687a7b5c0c357542e2789e0512c95e670516f74128334ecaac\",\"license\":\"MIT\"},\"lib/solmate/src/auth/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Simple single owner authorization mixin.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)\\nabstract contract Owned {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            OWNERSHIP STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    address public owner;\\n\\n    modifier onlyOwner() virtual {\\n        require(msg.sender == owner, \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(address _owner) {\\n        owner = _owner;\\n\\n        emit OwnershipTransferred(address(0), _owner);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             OWNERSHIP LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\"},\"lib/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"Vault":{"abi":[{"inputs":[{"internalType":"contract IRelayer","name":"_relayer","type":"address"},{"internalType":"address","name":"_trader","type":"address"},{"internalType":"bytes32","name":"_cModel","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"afterBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cModel","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_cNode","type":"bytes32"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"depositToRelayer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"relayer","outputs":[{"internalType":"contract IRelayer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"state","outputs":[{"internalType":"enum VaultState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalWeights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"userDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userWeights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"userWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_nullifier","type":"bytes32"},{"internalType":"uint256","name":"_balanceA","type":"uint256"},{"internalType":"uint256","name":"_balanceB","type":"uint256"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"withdrawFromRelayer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1280":{"entryPoint":null,"id":1280,"parameterSlots":3,"returnSlots":0},"@_3979":{"entryPoint":null,"id":3979,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":998,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":1418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1057,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_ERC20_$4386_fromMemory":{"entryPoint":1218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IRelayer_$1204_fromMemory":{"entryPoint":949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":1441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ERC20_$4386_fromMemory":{"entryPoint":1241,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IRelayer_$1204t_addresst_bytes32_fromMemory":{"entryPoint":1080,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1291,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1318,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":1335,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":883,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1380,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1021,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ERC20_$4386":{"entryPoint":1172,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IRelayer_$1204":{"entryPoint":903,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":851,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1308,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":846,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":972,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":1392,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1031,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ERC20_$4386":{"entryPoint":1192,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IRelayer_$1204":{"entryPoint":923,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4584:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"630:51:26","statements":[{"nodeType":"YulAssignment","src":"640:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"669:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"651:17:26"},"nodeType":"YulFunctionCall","src":"651:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"640:7:26"}]}]},"name":"cleanup_t_contract$_IRelayer_$1204","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"612:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"622:7:26","type":""}],"src":"568:113:26"},{"body":{"nodeType":"YulBlock","src":"747:96:26","statements":[{"body":{"nodeType":"YulBlock","src":"821:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"833:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"823:6:26"},"nodeType":"YulFunctionCall","src":"823:12:26"},"nodeType":"YulExpressionStatement","src":"823:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"770:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"812:5:26"}],"functionName":{"name":"cleanup_t_contract$_IRelayer_$1204","nodeType":"YulIdentifier","src":"777:34:26"},"nodeType":"YulFunctionCall","src":"777:41:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"767:2:26"},"nodeType":"YulFunctionCall","src":"767:52:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"760:6:26"},"nodeType":"YulFunctionCall","src":"760:60:26"},"nodeType":"YulIf","src":"757:80:26"}]},"name":"validator_revert_t_contract$_IRelayer_$1204","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"740:5:26","type":""}],"src":"687:156:26"},{"body":{"nodeType":"YulBlock","src":"929:97:26","statements":[{"nodeType":"YulAssignment","src":"939:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"954:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"948:5:26"},"nodeType":"YulFunctionCall","src":"948:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"939:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1014:5:26"}],"functionName":{"name":"validator_revert_t_contract$_IRelayer_$1204","nodeType":"YulIdentifier","src":"970:43:26"},"nodeType":"YulFunctionCall","src":"970:50:26"},"nodeType":"YulExpressionStatement","src":"970:50:26"}]},"name":"abi_decode_t_contract$_IRelayer_$1204_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"907:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"915:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"923:5:26","type":""}],"src":"849:177:26"},{"body":{"nodeType":"YulBlock","src":"1075:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"1132:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1141:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1144:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1134:6:26"},"nodeType":"YulFunctionCall","src":"1134:12:26"},"nodeType":"YulExpressionStatement","src":"1134:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1098:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1123:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1105:17:26"},"nodeType":"YulFunctionCall","src":"1105:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1095:2:26"},"nodeType":"YulFunctionCall","src":"1095:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1088:6:26"},"nodeType":"YulFunctionCall","src":"1088:43:26"},"nodeType":"YulIf","src":"1085:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1068:5:26","type":""}],"src":"1032:122:26"},{"body":{"nodeType":"YulBlock","src":"1223:80:26","statements":[{"nodeType":"YulAssignment","src":"1233:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1248:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1242:5:26"},"nodeType":"YulFunctionCall","src":"1242:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1233:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1291:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1264:26:26"},"nodeType":"YulFunctionCall","src":"1264:33:26"},"nodeType":"YulExpressionStatement","src":"1264:33:26"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1201:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1209:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1217:5:26","type":""}],"src":"1160:143:26"},{"body":{"nodeType":"YulBlock","src":"1354:32:26","statements":[{"nodeType":"YulAssignment","src":"1364:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1375:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1364:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1336:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1346:7:26","type":""}],"src":"1309:77:26"},{"body":{"nodeType":"YulBlock","src":"1435:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"1492:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1501:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1504:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1494:6:26"},"nodeType":"YulFunctionCall","src":"1494:12:26"},"nodeType":"YulExpressionStatement","src":"1494:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1458:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1483:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1465:17:26"},"nodeType":"YulFunctionCall","src":"1465:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1455:2:26"},"nodeType":"YulFunctionCall","src":"1455:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1448:6:26"},"nodeType":"YulFunctionCall","src":"1448:43:26"},"nodeType":"YulIf","src":"1445:63:26"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1428:5:26","type":""}],"src":"1392:122:26"},{"body":{"nodeType":"YulBlock","src":"1583:80:26","statements":[{"nodeType":"YulAssignment","src":"1593:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1608:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1602:5:26"},"nodeType":"YulFunctionCall","src":"1602:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1593:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1651:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1624:26:26"},"nodeType":"YulFunctionCall","src":"1624:33:26"},"nodeType":"YulExpressionStatement","src":"1624:33:26"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1561:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1569:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1577:5:26","type":""}],"src":"1520:143:26"},{"body":{"nodeType":"YulBlock","src":"1797:569:26","statements":[{"body":{"nodeType":"YulBlock","src":"1843:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1845:77:26"},"nodeType":"YulFunctionCall","src":"1845:79:26"},"nodeType":"YulExpressionStatement","src":"1845:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1818:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1827:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1814:3:26"},"nodeType":"YulFunctionCall","src":"1814:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1839:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1810:3:26"},"nodeType":"YulFunctionCall","src":"1810:32:26"},"nodeType":"YulIf","src":"1807:119:26"},{"nodeType":"YulBlock","src":"1936:145:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1951:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1965:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1955:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1980:91:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2043:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2054:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2039:3:26"},"nodeType":"YulFunctionCall","src":"2039:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2063:7:26"}],"functionName":{"name":"abi_decode_t_contract$_IRelayer_$1204_fromMemory","nodeType":"YulIdentifier","src":"1990:48:26"},"nodeType":"YulFunctionCall","src":"1990:81:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1980:6:26"}]}]},{"nodeType":"YulBlock","src":"2091:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2106:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2120:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2110:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2136:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2182:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2193:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2178:3:26"},"nodeType":"YulFunctionCall","src":"2178:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2202:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2146:31:26"},"nodeType":"YulFunctionCall","src":"2146:64:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2136:6:26"}]}]},{"nodeType":"YulBlock","src":"2230:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2245:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2259:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2249:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2275:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2321:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2332:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2317:3:26"},"nodeType":"YulFunctionCall","src":"2317:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2341:7:26"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"2285:31:26"},"nodeType":"YulFunctionCall","src":"2285:64:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2275:6:26"}]}]}]},"name":"abi_decode_tuple_t_contract$_IRelayer_$1204t_addresst_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1751:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1762:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1774:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1782:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1790:6:26","type":""}],"src":"1669:697:26"},{"body":{"nodeType":"YulBlock","src":"2431:51:26","statements":[{"nodeType":"YulAssignment","src":"2441:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2470:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2452:17:26"},"nodeType":"YulFunctionCall","src":"2452:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2441:7:26"}]}]},"name":"cleanup_t_contract$_ERC20_$4386","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2413:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2423:7:26","type":""}],"src":"2372:110:26"},{"body":{"nodeType":"YulBlock","src":"2545:93:26","statements":[{"body":{"nodeType":"YulBlock","src":"2616:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2625:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2628:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2618:6:26"},"nodeType":"YulFunctionCall","src":"2618:12:26"},"nodeType":"YulExpressionStatement","src":"2618:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2568:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2607:5:26"}],"functionName":{"name":"cleanup_t_contract$_ERC20_$4386","nodeType":"YulIdentifier","src":"2575:31:26"},"nodeType":"YulFunctionCall","src":"2575:38:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2565:2:26"},"nodeType":"YulFunctionCall","src":"2565:49:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2558:6:26"},"nodeType":"YulFunctionCall","src":"2558:57:26"},"nodeType":"YulIf","src":"2555:77:26"}]},"name":"validator_revert_t_contract$_ERC20_$4386","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2538:5:26","type":""}],"src":"2488:150:26"},{"body":{"nodeType":"YulBlock","src":"2721:94:26","statements":[{"nodeType":"YulAssignment","src":"2731:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2740:5:26"},"nodeType":"YulFunctionCall","src":"2740:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2731:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2803:5:26"}],"functionName":{"name":"validator_revert_t_contract$_ERC20_$4386","nodeType":"YulIdentifier","src":"2762:40:26"},"nodeType":"YulFunctionCall","src":"2762:47:26"},"nodeType":"YulExpressionStatement","src":"2762:47:26"}]},"name":"abi_decode_t_contract$_ERC20_$4386_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2707:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2715:5:26","type":""}],"src":"2644:171:26"},{"body":{"nodeType":"YulBlock","src":"2912:288:26","statements":[{"body":{"nodeType":"YulBlock","src":"2958:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2960:77:26"},"nodeType":"YulFunctionCall","src":"2960:79:26"},"nodeType":"YulExpressionStatement","src":"2960:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2933:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2929:3:26"},"nodeType":"YulFunctionCall","src":"2929:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2954:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2925:3:26"},"nodeType":"YulFunctionCall","src":"2925:32:26"},"nodeType":"YulIf","src":"2922:119:26"},{"nodeType":"YulBlock","src":"3051:142:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3066:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3080:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3070:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3095:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3155:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3166:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3151:3:26"},"nodeType":"YulFunctionCall","src":"3151:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3175:7:26"}],"functionName":{"name":"abi_decode_t_contract$_ERC20_$4386_fromMemory","nodeType":"YulIdentifier","src":"3105:45:26"},"nodeType":"YulFunctionCall","src":"3105:78:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3095:6:26"}]}]}]},"name":"abi_decode_tuple_t_contract$_ERC20_$4386_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2882:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2893:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2905:6:26","type":""}],"src":"2821:379:26"},{"body":{"nodeType":"YulBlock","src":"3271:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3288:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3311:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3293:17:26"},"nodeType":"YulFunctionCall","src":"3293:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3281:6:26"},"nodeType":"YulFunctionCall","src":"3281:37:26"},"nodeType":"YulExpressionStatement","src":"3281:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3259:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3266:3:26","type":""}],"src":"3206:118:26"},{"body":{"nodeType":"YulBlock","src":"3375:32:26","statements":[{"nodeType":"YulAssignment","src":"3385:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"3396:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3385:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3357:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3367:7:26","type":""}],"src":"3330:77:26"},{"body":{"nodeType":"YulBlock","src":"3478:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3495:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3518:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3500:17:26"},"nodeType":"YulFunctionCall","src":"3500:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3488:6:26"},"nodeType":"YulFunctionCall","src":"3488:37:26"},"nodeType":"YulExpressionStatement","src":"3488:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3466:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3473:3:26","type":""}],"src":"3413:118:26"},{"body":{"nodeType":"YulBlock","src":"3663:206:26","statements":[{"nodeType":"YulAssignment","src":"3673:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3685:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3696:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3681:3:26"},"nodeType":"YulFunctionCall","src":"3681:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3673:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3753:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3766:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3777:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3762:3:26"},"nodeType":"YulFunctionCall","src":"3762:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3709:43:26"},"nodeType":"YulFunctionCall","src":"3709:71:26"},"nodeType":"YulExpressionStatement","src":"3709:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3834:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3847:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3858:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3843:3:26"},"nodeType":"YulFunctionCall","src":"3843:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3790:43:26"},"nodeType":"YulFunctionCall","src":"3790:72:26"},"nodeType":"YulExpressionStatement","src":"3790:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3627:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3639:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3647:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3658:4:26","type":""}],"src":"3537:332:26"},{"body":{"nodeType":"YulBlock","src":"3917:48:26","statements":[{"nodeType":"YulAssignment","src":"3927:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3952:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3945:6:26"},"nodeType":"YulFunctionCall","src":"3945:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3938:6:26"},"nodeType":"YulFunctionCall","src":"3938:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3927:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3899:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3909:7:26","type":""}],"src":"3875:90:26"},{"body":{"nodeType":"YulBlock","src":"4011:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"4065:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4074:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4077:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4067:6:26"},"nodeType":"YulFunctionCall","src":"4067:12:26"},"nodeType":"YulExpressionStatement","src":"4067:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4034:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4056:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4041:14:26"},"nodeType":"YulFunctionCall","src":"4041:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4031:2:26"},"nodeType":"YulFunctionCall","src":"4031:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4024:6:26"},"nodeType":"YulFunctionCall","src":"4024:40:26"},"nodeType":"YulIf","src":"4021:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4004:5:26","type":""}],"src":"3971:116:26"},{"body":{"nodeType":"YulBlock","src":"4153:77:26","statements":[{"nodeType":"YulAssignment","src":"4163:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4178:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4172:5:26"},"nodeType":"YulFunctionCall","src":"4172:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4163:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4218:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"4194:23:26"},"nodeType":"YulFunctionCall","src":"4194:30:26"},"nodeType":"YulExpressionStatement","src":"4194:30:26"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4131:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4139:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4147:5:26","type":""}],"src":"4093:137:26"},{"body":{"nodeType":"YulBlock","src":"4310:271:26","statements":[{"body":{"nodeType":"YulBlock","src":"4356:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4358:77:26"},"nodeType":"YulFunctionCall","src":"4358:79:26"},"nodeType":"YulExpressionStatement","src":"4358:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4340:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4327:3:26"},"nodeType":"YulFunctionCall","src":"4327:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4352:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4323:3:26"},"nodeType":"YulFunctionCall","src":"4323:32:26"},"nodeType":"YulIf","src":"4320:119:26"},{"nodeType":"YulBlock","src":"4449:125:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4464:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4478:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4468:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4493:71:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4536:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4547:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4532:3:26"},"nodeType":"YulFunctionCall","src":"4532:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4556:7:26"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"4503:28:26"},"nodeType":"YulFunctionCall","src":"4503:61:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4493:6:26"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4280:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4291:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4303:6:26","type":""}],"src":"4236:345:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IRelayer_$1204(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IRelayer_$1204(value) {\n        if iszero(eq(value, cleanup_t_contract$_IRelayer_$1204(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IRelayer_$1204_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IRelayer_$1204(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IRelayer_$1204t_addresst_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IRelayer_$1204_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_ERC20_$4386(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$4386(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$4386(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$4386_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$4386(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$4386_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$4386_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b5060405162001daa38038062001daa833981810160405281019062000037919062000438565b81806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060018190555060805173ffffffffffffffffffffffffffffffffffffffff1663ff709ee86040518163ffffffff1660e01b81526004016020604051808303816000875af11580156200015f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001859190620004d9565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b36080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401620001e392919062000537565b6020604051808303816000875af115801562000203573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002299190620005a1565b5060805173ffffffffffffffffffffffffffffffffffffffff1663499f712e6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156200027a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002a09190620004d9565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b36080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401620002fe92919062000537565b6020604051808303816000875af11580156200031e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003449190620005a1565b50505050620005d3565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003808262000353565b9050919050565b6000620003948262000373565b9050919050565b620003a68162000387565b8114620003b257600080fd5b50565b600081519050620003c6816200039b565b92915050565b620003d78162000373565b8114620003e357600080fd5b50565b600081519050620003f781620003cc565b92915050565b6000819050919050565b6200041281620003fd565b81146200041e57600080fd5b50565b600081519050620004328162000407565b92915050565b6000806000606084860312156200045457620004536200034e565b5b60006200046486828701620003b5565b93505060206200047786828701620003e6565b92505060406200048a8682870162000421565b9150509250925092565b6000620004a18262000373565b9050919050565b620004b38162000494565b8114620004bf57600080fd5b50565b600081519050620004d381620004a8565b92915050565b600060208284031215620004f257620004f16200034e565b5b60006200050284828501620004c2565b91505092915050565b620005168162000373565b82525050565b6000819050919050565b62000531816200051c565b82525050565b60006040820190506200054e60008301856200050b565b6200055d602083018462000526565b9392505050565b60008115159050919050565b6200057b8162000564565b81146200058757600080fd5b50565b6000815190506200059b8162000570565b92915050565b600060208284031215620005ba57620005b96200034e565b5b6000620005ca848285016200058a565b91505092915050565b60805161178a620006206000396000818161030001528181610535015281816106430152818161074f0152818161082b01528181610ac801528181610b5d0152610d17015261178a6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063926323d511610071578063926323d51461017b578063b2b4e62f14610199578063c19d93fb146101b7578063f2fde38b146101d5578063f4725af4146101f1578063f868e7661461020d576100b4565b80630542631b146100b9578063556a6d8a146100d557806372a7fa5b146101055780638406c079146101215780638da5cb5b1461013f57806391daa9021461015d575b600080fd5b6100d360048036038101906100ce9190610f01565b610229565b005b6100ef60048036038101906100ea9190610f01565b610414565b6040516100fc9190610f47565b60405180910390f35b61011f600480360381019061011a9190610ffd565b61042c565b005b610129610829565b60405161013691906110bc565b60405180910390f35b61014761084d565b60405161015491906110e6565b60405180910390f35b610165610871565b6040516101729190610f47565b60405180910390f35b610183610877565b6040516101909190610f47565b60405180910390f35b6101a161087d565b6040516101ae9190611110565b60405180910390f35b6101bf610883565b6040516101cc91906111a2565b60405180910390f35b6101ef60048036038101906101ea9190610f01565b610896565b005b61020b600480360381019061020691906111e9565b6109c1565b005b61022760048036038101906102229190611271565b610c9e565b005b600280600281111561023e5761023d61112b565b5b600560009054906101000a900460ff1660028111156102605761025f61112b565b5b146102a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610297906112fb565b60405180910390fd5b6000600354600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546004546102f2919061134a565b6102fc91906113bb565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ff709ee86040518163ffffffff1660e01b81526004016020604051808303816000875af115801561036b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038f919061142a565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3085846040518463ffffffff1660e01b81526004016103cb93929190611457565b6020604051808303816000875af11580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e91906114c6565b50505050565b60026020528060005260406000206000915090505481565b60008060028111156104415761044061112b565b5b600560009054906101000a900460ff1660028111156104635761046261112b565b5b146104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a906112fb565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610531576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105289061153f565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ff709ee86040518163ffffffff1660e01b81526004016020604051808303816000875af11580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c4919061142a565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105fc91906110e6565b602060405180830381865afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d9190611574565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663499f712e6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d2919061142a565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161070a91906110e6565b602060405180830381865afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b9190611574565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166361f6c0338760015485858a8a6040518763ffffffff1660e01b81526004016107b2969594939291906115ff565b6020604051808303816000875af11580156107d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f59190611697565b506001600560006101000a81548160ff0219169083600281111561081c5761081b61112b565b5b0217905550505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60035481565b60015481565b600560009054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091b9061153f565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60018060028111156109d6576109d561112b565b5b600560009054906101000a900460ff1660028111156109f8576109f761112b565b5b14610a38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2f906112fb565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd9061153f565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c4b5239f8787873088886040518763ffffffff1660e01b8152600401610b29969594939291906116c4565b600060405180830381600087803b158015610b4357600080fd5b505af1158015610b57573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ff709ee86040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec919061142a565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c2491906110e6565b602060405180830381865afa158015610c41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c659190611574565b6004819055506002600560006101000a81548160ff02191690836002811115610c9157610c9061112b565b5b0217905550505050505050565b6000806002811115610cb357610cb261112b565b5b600560009054906101000a900460ff166002811115610cd557610cd461112b565b5b14610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c906112fb565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ff709ee86040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da6919061142a565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610de293929190611457565b6020604051808303816000875af1158015610e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2591906114c6565b5081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e759190611720565b925050819055508160036000828254610e8e9190611720565b925050819055505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ece82610ea3565b9050919050565b610ede81610ec3565b8114610ee957600080fd5b50565b600081359050610efb81610ed5565b92915050565b600060208284031215610f1757610f16610e99565b5b6000610f2584828501610eec565b91505092915050565b6000819050919050565b610f4181610f2e565b82525050565b6000602082019050610f5c6000830184610f38565b92915050565b6000819050919050565b610f7581610f62565b8114610f8057600080fd5b50565b600081359050610f9281610f6c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610fbd57610fbc610f98565b5b8235905067ffffffffffffffff811115610fda57610fd9610f9d565b5b602083019150836001820283011115610ff657610ff5610fa2565b5b9250929050565b60008060006040848603121561101657611015610e99565b5b600061102486828701610f83565b935050602084013567ffffffffffffffff81111561104557611044610e9e565b5b61105186828701610fa7565b92509250509250925092565b6000819050919050565b600061108261107d61107884610ea3565b61105d565b610ea3565b9050919050565b600061109482611067565b9050919050565b60006110a682611089565b9050919050565b6110b68161109b565b82525050565b60006020820190506110d160008301846110ad565b92915050565b6110e081610ec3565b82525050565b60006020820190506110fb60008301846110d7565b92915050565b61110a81610f62565b82525050565b60006020820190506111256000830184611101565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061116b5761116a61112b565b5b50565b600081905061117c8261115a565b919050565b600061118c8261116e565b9050919050565b61119c81611181565b82525050565b60006020820190506111b76000830184611193565b92915050565b6111c681610f2e565b81146111d157600080fd5b50565b6000813590506111e3816111bd565b92915050565b60008060008060006080868803121561120557611204610e99565b5b600061121388828901610f83565b9550506020611224888289016111d4565b9450506040611235888289016111d4565b935050606086013567ffffffffffffffff81111561125657611255610e9e565b5b61126288828901610fa7565b92509250509295509295909350565b60006020828403121561128757611286610e99565b5b6000611295848285016111d4565b91505092915050565b600082825260208201905092915050565b7f496e76616c6964205661756c7420737461746500000000000000000000000000600082015250565b60006112e560138361129e565b91506112f0826112af565b602082019050919050565b60006020820190508181036000830152611314816112d8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061135582610f2e565b915061136083610f2e565b925082820261136e81610f2e565b915082820484148315176113855761138461131b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006113c682610f2e565b91506113d183610f2e565b9250826113e1576113e061138c565b5b828204905092915050565b60006113f782610ec3565b9050919050565b611407816113ec565b811461141257600080fd5b50565b600081519050611424816113fe565b92915050565b6000602082840312156114405761143f610e99565b5b600061144e84828501611415565b91505092915050565b600060608201905061146c60008301866110d7565b61147960208301856110d7565b6114866040830184610f38565b949350505050565b60008115159050919050565b6114a38161148e565b81146114ae57600080fd5b50565b6000815190506114c08161149a565b92915050565b6000602082840312156114dc576114db610e99565b5b60006114ea848285016114b1565b91505092915050565b7f554e415554484f52495a45440000000000000000000000000000000000000000600082015250565b6000611529600c8361129e565b9150611534826114f3565b602082019050919050565b600060208201905081810360008301526115588161151c565b9050919050565b60008151905061156e816111bd565b92915050565b60006020828403121561158a57611589610e99565b5b60006115988482850161155f565b91505092915050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006115de83856115a1565b93506115eb8385846115b2565b6115f4836115c1565b840190509392505050565b600060a0820190506116146000830189611101565b6116216020830188611101565b61162e6040830187610f38565b61163b6060830186610f38565b818103608083015261164e8184866115d2565b9050979650505050505050565b600063ffffffff82169050919050565b6116748161165b565b811461167f57600080fd5b50565b6000815190506116918161166b565b92915050565b6000602082840312156116ad576116ac610e99565b5b60006116bb84828501611682565b91505092915050565b600060a0820190506116d96000830189611101565b6116e66020830188610f38565b6116f36040830187610f38565b61170060608301866110d7565b81810360808301526117138184866115d2565b9050979650505050505050565b600061172b82610f2e565b915061173683610f2e565b925082820190508082111561174e5761174d61131b565b5b9291505056fea264697066735822122059eda6a447b38547b4cba23edc63d1a613c85e885c15a52abde7af9efed1047164736f6c63430008110033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DAA CODESIZE SUB DUP1 PUSH3 0x1DAA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x438 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF709EE8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x15F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x185 SWAP2 SWAP1 PUSH3 0x4D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x80 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E3 SWAP3 SWAP2 SWAP1 PUSH3 0x537 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x203 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x229 SWAP2 SWAP1 PUSH3 0x5A1 JUMP JUMPDEST POP PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x499F712E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x27A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2A0 SWAP2 SWAP1 PUSH3 0x4D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x80 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2FE SWAP3 SWAP2 SWAP1 PUSH3 0x537 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x31E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x344 SWAP2 SWAP1 PUSH3 0x5A1 JUMP JUMPDEST POP POP POP POP PUSH3 0x5D3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x380 DUP3 PUSH3 0x353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x394 DUP3 PUSH3 0x373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3A6 DUP2 PUSH3 0x387 JUMP JUMPDEST DUP2 EQ PUSH3 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3C6 DUP2 PUSH3 0x39B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3D7 DUP2 PUSH3 0x373 JUMP JUMPDEST DUP2 EQ PUSH3 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3F7 DUP2 PUSH3 0x3CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x412 DUP2 PUSH3 0x3FD JUMP JUMPDEST DUP2 EQ PUSH3 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x432 DUP2 PUSH3 0x407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x454 JUMPI PUSH3 0x453 PUSH3 0x34E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x464 DUP7 DUP3 DUP8 ADD PUSH3 0x3B5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x477 DUP7 DUP3 DUP8 ADD PUSH3 0x3E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x48A DUP7 DUP3 DUP8 ADD PUSH3 0x421 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A1 DUP3 PUSH3 0x373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4B3 DUP2 PUSH3 0x494 JUMP JUMPDEST DUP2 EQ PUSH3 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4D3 DUP2 PUSH3 0x4A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4F2 JUMPI PUSH3 0x4F1 PUSH3 0x34E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x502 DUP5 DUP3 DUP6 ADD PUSH3 0x4C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x516 DUP2 PUSH3 0x373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x531 DUP2 PUSH3 0x51C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x54E PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x50B JUMP JUMPDEST PUSH3 0x55D PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x526 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x57B DUP2 PUSH3 0x564 JUMP JUMPDEST DUP2 EQ PUSH3 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x59B DUP2 PUSH3 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x5BA JUMPI PUSH3 0x5B9 PUSH3 0x34E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x5CA DUP5 DUP3 DUP6 ADD PUSH3 0x58A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x178A PUSH3 0x620 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x300 ADD MSTORE DUP2 DUP2 PUSH2 0x535 ADD MSTORE DUP2 DUP2 PUSH2 0x643 ADD MSTORE DUP2 DUP2 PUSH2 0x74F ADD MSTORE DUP2 DUP2 PUSH2 0x82B ADD MSTORE DUP2 DUP2 PUSH2 0xAC8 ADD MSTORE DUP2 DUP2 PUSH2 0xB5D ADD MSTORE PUSH2 0xD17 ADD MSTORE PUSH2 0x178A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x926323D5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x926323D5 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xB2B4E62F EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xF4725AF4 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xF868E766 EQ PUSH2 0x20D JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x542631B EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x556A6D8A EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x72A7FA5B EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x8406C079 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x91DAA902 EQ PUSH2 0x15D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x23E JUMPI PUSH2 0x23D PUSH2 0x112B JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x260 JUMPI PUSH2 0x25F PUSH2 0x112B JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x13BB JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF709EE8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x441 JUMPI PUSH2 0x440 PUSH2 0x112B JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x463 JUMPI PUSH2 0x462 PUSH2 0x112B JUMP JUMPDEST JUMPDEST EQ PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF709EE8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x499F712E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D2 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x727 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x61F6C033 DUP8 PUSH1 0x1 SLOAD DUP6 DUP6 DUP11 DUP11 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0x1697 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x81C JUMPI PUSH2 0x81B PUSH2 0x112B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x112B JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9F8 JUMPI PUSH2 0x9F7 PUSH2 0x112B JUMP JUMPDEST JUMPDEST EQ PUSH2 0xA38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2F SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABD SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC4B5239F DUP8 DUP8 DUP8 ADDRESS DUP9 DUP9 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB29 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF709EE8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBEC SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC65 SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0x112B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCB3 JUMPI PUSH2 0xCB2 PUSH2 0x112B JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD4 PUSH2 0x112B JUMP JUMPDEST JUMPDEST EQ PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0C SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF709EE8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA6 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE25 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST POP DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x1720 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE8E SWAP2 SWAP1 PUSH2 0x1720 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP3 PUSH2 0xEA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDE DUP2 PUSH2 0xEC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xEE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEFB DUP2 PUSH2 0xED5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH2 0xF16 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF25 DUP5 DUP3 DUP6 ADD PUSH2 0xEEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF41 DUP2 PUSH2 0xF2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF75 DUP2 PUSH2 0xF62 JUMP JUMPDEST DUP2 EQ PUSH2 0xF80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF92 DUP2 PUSH2 0xF6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xFBD JUMPI PUSH2 0xFBC PUSH2 0xF98 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDA JUMPI PUSH2 0xFD9 PUSH2 0xF9D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xFF6 JUMPI PUSH2 0xFF5 PUSH2 0xFA2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1016 JUMPI PUSH2 0x1015 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1024 DUP7 DUP3 DUP8 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0xE9E JUMP JUMPDEST JUMPDEST PUSH2 0x1051 DUP7 DUP3 DUP8 ADD PUSH2 0xFA7 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1082 PUSH2 0x107D PUSH2 0x1078 DUP5 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x105D JUMP JUMPDEST PUSH2 0xEA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1094 DUP3 PUSH2 0x1067 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A6 DUP3 PUSH2 0x1089 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B6 DUP2 PUSH2 0x109B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E0 DUP2 PUSH2 0xEC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x110A DUP2 PUSH2 0xF62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1125 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1101 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x116B JUMPI PUSH2 0x116A PUSH2 0x112B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x117C DUP3 PUSH2 0x115A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118C DUP3 PUSH2 0x116E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119C DUP2 PUSH2 0x1181 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1193 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11C6 DUP2 PUSH2 0xF2E JUMP JUMPDEST DUP2 EQ PUSH2 0x11D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E3 DUP2 PUSH2 0x11BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1205 JUMPI PUSH2 0x1204 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1213 DUP9 DUP3 DUP10 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1224 DUP9 DUP3 DUP10 ADD PUSH2 0x11D4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1235 DUP9 DUP3 DUP10 ADD PUSH2 0x11D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1256 JUMPI PUSH2 0x1255 PUSH2 0xE9E JUMP JUMPDEST JUMPDEST PUSH2 0x1262 DUP9 DUP3 DUP10 ADD PUSH2 0xFA7 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1295 DUP5 DUP3 DUP6 ADD PUSH2 0x11D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964205661756C7420737461746500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E5 PUSH1 0x13 DUP4 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP PUSH2 0x12F0 DUP3 PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1314 DUP2 PUSH2 0x12D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1355 DUP3 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1360 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x136E DUP2 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x131B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13C6 DUP3 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x13D1 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x13E1 JUMPI PUSH2 0x13E0 PUSH2 0x138C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F7 DUP3 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1407 DUP2 PUSH2 0x13EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1424 DUP2 PUSH2 0x13FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH2 0x143F PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x144E DUP5 DUP3 DUP6 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x146C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x1479 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x1486 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A3 DUP2 PUSH2 0x148E JUMP JUMPDEST DUP2 EQ PUSH2 0x14AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14C0 DUP2 PUSH2 0x149A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14DC JUMPI PUSH2 0x14DB PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14EA DUP5 DUP3 DUP6 ADD PUSH2 0x14B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1529 PUSH1 0xC DUP4 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP PUSH2 0x1534 DUP3 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1558 DUP2 PUSH2 0x151C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x156E DUP2 PUSH2 0x11BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x158A JUMPI PUSH2 0x1589 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1598 DUP5 DUP3 DUP6 ADD PUSH2 0x155F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DE DUP4 DUP6 PUSH2 0x15A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x15EB DUP4 DUP6 DUP5 PUSH2 0x15B2 JUMP JUMPDEST PUSH2 0x15F4 DUP4 PUSH2 0x15C1 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1614 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x1621 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x162E PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x163B PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xF38 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x164E DUP2 DUP5 DUP7 PUSH2 0x15D2 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0x165B JUMP JUMPDEST DUP2 EQ PUSH2 0x167F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1691 DUP2 PUSH2 0x166B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AC PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16BB DUP5 DUP3 DUP6 ADD PUSH2 0x1682 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x16D9 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x16E6 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x16F3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1700 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x10D7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1713 DUP2 DUP5 DUP7 PUSH2 0x15D2 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172B DUP3 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1736 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x174E JUMPI PUSH2 0x174D PUSH2 0x131B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xED 0xA6 LOG4 SELFBALANCE 0xB3 DUP6 SELFBALANCE 0xB4 0xCB LOG2 RETURNDATACOPY 0xDC PUSH4 0xD1A613C8 0x5E DUP9 0x5C ISZERO 0xA5 0x2A 0xBD 0xE7 0xAF SWAP15 INVALID 0xD1 DIV PUSH18 0x64736F6C6343000811003300000000000000 ","sourceMap":"699:2028:3:-:0;;;948:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1049:7;1053:6:24;1045:5;;:14;;;;;;;;;;;;;;;;;;1108:6;1075:40;;1104:1;1075:40;;;;;;;;;;;;1007:115;1078:8:3::1;1068:18;;;;;;;;::::0;::::1;1105:7;1096:6;:16;;;;1122:7;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:25;;;1156:7;;1166:17;1122:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1194:7;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:25;;;1228:7;;1238:17;1194:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;948:315:::0;;;699:2028;;88:117:26;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:113::-;622:7;651:24;669:5;651:24;:::i;:::-;640:35;;568:113;;;:::o;687:156::-;777:41;812:5;777:41;:::i;:::-;770:5;767:52;757:80;;833:1;830;823:12;757:80;687:156;:::o;849:177::-;923:5;954:6;948:13;939:22;;970:50;1014:5;970:50;:::i;:::-;849:177;;;;:::o;1032:122::-;1105:24;1123:5;1105:24;:::i;:::-;1098:5;1095:35;1085:63;;1144:1;1141;1134:12;1085:63;1032:122;:::o;1160:143::-;1217:5;1248:6;1242:13;1233:22;;1264:33;1291:5;1264:33;:::i;:::-;1160:143;;;;:::o;1309:77::-;1346:7;1375:5;1364:16;;1309:77;;;:::o;1392:122::-;1465:24;1483:5;1465:24;:::i;:::-;1458:5;1455:35;1445:63;;1504:1;1501;1494:12;1445:63;1392:122;:::o;1520:143::-;1577:5;1608:6;1602:13;1593:22;;1624:33;1651:5;1624:33;:::i;:::-;1520:143;;;;:::o;1669:697::-;1774:6;1782;1790;1839:2;1827:9;1818:7;1814:23;1810:32;1807:119;;;1845:79;;:::i;:::-;1807:119;1965:1;1990:81;2063:7;2054:6;2043:9;2039:22;1990:81;:::i;:::-;1980:91;;1936:145;2120:2;2146:64;2202:7;2193:6;2182:9;2178:22;2146:64;:::i;:::-;2136:74;;2091:129;2259:2;2285:64;2341:7;2332:6;2321:9;2317:22;2285:64;:::i;:::-;2275:74;;2230:129;1669:697;;;;;:::o;2372:110::-;2423:7;2452:24;2470:5;2452:24;:::i;:::-;2441:35;;2372:110;;;:::o;2488:150::-;2575:38;2607:5;2575:38;:::i;:::-;2568:5;2565:49;2555:77;;2628:1;2625;2618:12;2555:77;2488:150;:::o;2644:171::-;2715:5;2746:6;2740:13;2731:22;;2762:47;2803:5;2762:47;:::i;:::-;2644:171;;;;:::o;2821:379::-;2905:6;2954:2;2942:9;2933:7;2929:23;2925:32;2922:119;;;2960:79;;:::i;:::-;2922:119;3080:1;3105:78;3175:7;3166:6;3155:9;3151:22;3105:78;:::i;:::-;3095:88;;3051:142;2821:379;;;;:::o;3206:118::-;3293:24;3311:5;3293:24;:::i;:::-;3288:3;3281:37;3206:118;;:::o;3330:77::-;3367:7;3396:5;3385:16;;3330:77;;;:::o;3413:118::-;3500:24;3518:5;3500:24;:::i;:::-;3495:3;3488:37;3413:118;;:::o;3537:332::-;3658:4;3696:2;3685:9;3681:18;3673:26;;3709:71;3777:1;3766:9;3762:17;3753:6;3709:71;:::i;:::-;3790:72;3858:2;3847:9;3843:18;3834:6;3790:72;:::i;:::-;3537:332;;;;;:::o;3875:90::-;3909:7;3952:5;3945:13;3938:21;3927:32;;3875:90;;;:::o;3971:116::-;4041:21;4056:5;4041:21;:::i;:::-;4034:5;4031:32;4021:60;;4077:1;4074;4067:12;4021:60;3971:116;:::o;4093:137::-;4147:5;4178:6;4172:13;4163:22;;4194:30;4218:5;4194:30;:::i;:::-;4093:137;;;;:::o;4236:345::-;4303:6;4352:2;4340:9;4331:7;4327:23;4323:32;4320:119;;;4358:79;;:::i;:::-;4320:119;4478:1;4503:61;4556:7;4547:6;4536:9;4532:22;4503:61;:::i;:::-;4493:71;;4449:125;4236:345;;;;:::o;699:2028:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@afterBalance_1223":{"entryPoint":2161,"id":1223,"parameterSlots":0,"returnSlots":0},"@cModel_1215":{"entryPoint":2173,"id":1215,"parameterSlots":0,"returnSlots":0},"@depositToRelayer_1382":{"entryPoint":1068,"id":1382,"parameterSlots":3,"returnSlots":0},"@owner_3949":{"entryPoint":2125,"id":3949,"parameterSlots":0,"returnSlots":0},"@relayer_1213":{"entryPoint":2089,"id":1213,"parameterSlots":0,"returnSlots":0},"@state_1226":{"entryPoint":2179,"id":1226,"parameterSlots":0,"returnSlots":0},"@totalWeights_1221":{"entryPoint":2167,"id":1221,"parameterSlots":0,"returnSlots":0},"@transferOwnership_3997":{"entryPoint":2198,"id":3997,"parameterSlots":1,"returnSlots":0},"@userDeposit_1329":{"entryPoint":3230,"id":1329,"parameterSlots":1,"returnSlots":0},"@userWeights_1219":{"entryPoint":1044,"id":1219,"parameterSlots":0,"returnSlots":0},"@userWithdraw_1463":{"entryPoint":553,"id":1463,"parameterSlots":1,"returnSlots":0},"@withdrawFromRelayer_1430":{"entryPoint":2497,"id":1430,"parameterSlots":5,"returnSlots":0},"abi_decode_t_address":{"entryPoint":3820,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":5297,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":3971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":4007,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_contract$_ERC20_$4386_fromMemory":{"entryPoint":5141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":5762,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5318,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_calldata_ptr":{"entryPoint":4093,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_calldata_ptr":{"entryPoint":4585,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_contract$_ERC20_$4386_fromMemory":{"entryPoint":5162,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4721,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5492,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32_fromMemory":{"entryPoint":5783,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4311,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4353,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5586,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_contract$_IRelayer_$1204_to_t_address_fromStack":{"entryPoint":4269,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_VaultState_$1208_to_t_uint8_fromStack":{"entryPoint":4499,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528_to_t_string_memory_ptr_fromStack":{"entryPoint":5404,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d_to_t_string_memory_ptr_fromStack":{"entryPoint":4824,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3896,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4326,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":5207,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":4368,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_bytes32_t_bytes32_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5631,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_uint256_t_address_t_bytes_calldata_ptr__to_t_bytes32_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5828,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_contract$_IRelayer_$1204__to_t_address__fromStack_reversed":{"entryPoint":4284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_VaultState_$1208__to_t_uint8__fromStack_reversed":{"entryPoint":4514,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5439,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4859,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3911,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5537,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4766,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5920,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5051,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4938,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3779,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5262,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3938,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ERC20_$4386":{"entryPoint":5100,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_VaultState_$1208":{"entryPoint":4462,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3747,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3886,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":5723,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IRelayer_$1204_to_t_address":{"entryPoint":4251,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_VaultState_$1208_to_t_uint8":{"entryPoint":4481,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4233,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4199,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":5554,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":4189,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4891,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":5004,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":4395,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3997,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3992,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":4002,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3742,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3737,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5569,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528":{"entryPoint":5363,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d":{"entryPoint":4783,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_VaultState_$1208":{"entryPoint":4442,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3797,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5274,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":3948,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ERC20_$4386":{"entryPoint":5118,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4541,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":5739,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16659:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:26"},"nodeType":"YulFunctionCall","src":"670:12:26"},"nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:26"},"nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:26"},"nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:26"},"nodeType":"YulFunctionCall","src":"624:43:26"},"nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nodeType":"YulBlock","src":"748:87:26","statements":[{"nodeType":"YulAssignment","src":"758:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:26"},"nodeType":"YulFunctionCall","src":"767:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:26"},"nodeType":"YulFunctionCall","src":"796:33:26"},"nodeType":"YulExpressionStatement","src":"796:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:26","type":""}],"src":"696:139:26"},{"body":{"nodeType":"YulBlock","src":"907:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:26"},"nodeType":"YulFunctionCall","src":"955:79:26"},"nodeType":"YulExpressionStatement","src":"955:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:26"},"nodeType":"YulFunctionCall","src":"924:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:26"},"nodeType":"YulFunctionCall","src":"920:32:26"},"nodeType":"YulIf","src":"917:119:26"},{"nodeType":"YulBlock","src":"1046:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:26"},"nodeType":"YulFunctionCall","src":"1121:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:26"},"nodeType":"YulFunctionCall","src":"1100:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:26","type":""}],"src":"841:329:26"},{"body":{"nodeType":"YulBlock","src":"1221:32:26","statements":[{"nodeType":"YulAssignment","src":"1231:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1242:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1231:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1203:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1213:7:26","type":""}],"src":"1176:77:26"},{"body":{"nodeType":"YulBlock","src":"1324:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1341:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1364:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1346:17:26"},"nodeType":"YulFunctionCall","src":"1346:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:26"},"nodeType":"YulFunctionCall","src":"1334:37:26"},"nodeType":"YulExpressionStatement","src":"1334:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1319:3:26","type":""}],"src":"1259:118:26"},{"body":{"nodeType":"YulBlock","src":"1481:124:26","statements":[{"nodeType":"YulAssignment","src":"1491:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1503:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1514:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:26"},"nodeType":"YulFunctionCall","src":"1499:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1491:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1571:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1595:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:26"},"nodeType":"YulFunctionCall","src":"1580:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1527:43:26"},"nodeType":"YulFunctionCall","src":"1527:71:26"},"nodeType":"YulExpressionStatement","src":"1527:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1453:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1465:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1476:4:26","type":""}],"src":"1383:222:26"},{"body":{"nodeType":"YulBlock","src":"1656:32:26","statements":[{"nodeType":"YulAssignment","src":"1666:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1677:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1666:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1638:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1648:7:26","type":""}],"src":"1611:77:26"},{"body":{"nodeType":"YulBlock","src":"1737:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"1794:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1803:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1806:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1796:6:26"},"nodeType":"YulFunctionCall","src":"1796:12:26"},"nodeType":"YulExpressionStatement","src":"1796:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1760:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1785:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1767:17:26"},"nodeType":"YulFunctionCall","src":"1767:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1757:2:26"},"nodeType":"YulFunctionCall","src":"1757:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1750:6:26"},"nodeType":"YulFunctionCall","src":"1750:43:26"},"nodeType":"YulIf","src":"1747:63:26"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:26","type":""}],"src":"1694:122:26"},{"body":{"nodeType":"YulBlock","src":"1874:87:26","statements":[{"nodeType":"YulAssignment","src":"1884:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1906:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1893:12:26"},"nodeType":"YulFunctionCall","src":"1893:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1884:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1949:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1922:26:26"},"nodeType":"YulFunctionCall","src":"1922:33:26"},"nodeType":"YulExpressionStatement","src":"1922:33:26"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1852:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1860:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1868:5:26","type":""}],"src":"1822:139:26"},{"body":{"nodeType":"YulBlock","src":"2056:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2073:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2076:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2066:6:26"},"nodeType":"YulFunctionCall","src":"2066:12:26"},"nodeType":"YulExpressionStatement","src":"2066:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1967:117:26"},{"body":{"nodeType":"YulBlock","src":"2179:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2196:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2199:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2189:6:26"},"nodeType":"YulFunctionCall","src":"2189:12:26"},"nodeType":"YulExpressionStatement","src":"2189:12:26"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"2090:117:26"},{"body":{"nodeType":"YulBlock","src":"2302:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2319:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2322:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2312:6:26"},"nodeType":"YulFunctionCall","src":"2312:12:26"},"nodeType":"YulExpressionStatement","src":"2312:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2213:117:26"},{"body":{"nodeType":"YulBlock","src":"2423:478:26","statements":[{"body":{"nodeType":"YulBlock","src":"2472:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2474:77:26"},"nodeType":"YulFunctionCall","src":"2474:79:26"},"nodeType":"YulExpressionStatement","src":"2474:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2451:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2459:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2447:3:26"},"nodeType":"YulFunctionCall","src":"2447:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"2466:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2443:3:26"},"nodeType":"YulFunctionCall","src":"2443:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2436:6:26"},"nodeType":"YulFunctionCall","src":"2436:35:26"},"nodeType":"YulIf","src":"2433:122:26"},{"nodeType":"YulAssignment","src":"2564:30:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2587:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2574:12:26"},"nodeType":"YulFunctionCall","src":"2574:20:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2564:6:26"}]},{"body":{"nodeType":"YulBlock","src":"2637:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2639:77:26"},"nodeType":"YulFunctionCall","src":"2639:79:26"},"nodeType":"YulExpressionStatement","src":"2639:79:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2609:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2617:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2606:2:26"},"nodeType":"YulFunctionCall","src":"2606:30:26"},"nodeType":"YulIf","src":"2603:117:26"},{"nodeType":"YulAssignment","src":"2729:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2745:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2753:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2741:3:26"},"nodeType":"YulFunctionCall","src":"2741:17:26"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2729:8:26"}]},{"body":{"nodeType":"YulBlock","src":"2812:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2814:77:26"},"nodeType":"YulFunctionCall","src":"2814:79:26"},"nodeType":"YulExpressionStatement","src":"2814:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2777:8:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2791:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2799:4:26","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2787:3:26"},"nodeType":"YulFunctionCall","src":"2787:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2773:3:26"},"nodeType":"YulFunctionCall","src":"2773:32:26"},{"name":"end","nodeType":"YulIdentifier","src":"2807:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2770:2:26"},"nodeType":"YulFunctionCall","src":"2770:41:26"},"nodeType":"YulIf","src":"2767:128:26"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2390:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2398:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2406:8:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"2416:6:26","type":""}],"src":"2349:552:26"},{"body":{"nodeType":"YulBlock","src":"3009:570:26","statements":[{"body":{"nodeType":"YulBlock","src":"3055:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3057:77:26"},"nodeType":"YulFunctionCall","src":"3057:79:26"},"nodeType":"YulExpressionStatement","src":"3057:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3030:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3039:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3026:3:26"},"nodeType":"YulFunctionCall","src":"3026:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3051:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3022:3:26"},"nodeType":"YulFunctionCall","src":"3022:32:26"},"nodeType":"YulIf","src":"3019:119:26"},{"nodeType":"YulBlock","src":"3148:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3163:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3177:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3167:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3192:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3227:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3238:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3223:3:26"},"nodeType":"YulFunctionCall","src":"3223:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3247:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3202:20:26"},"nodeType":"YulFunctionCall","src":"3202:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3192:6:26"}]}]},{"nodeType":"YulBlock","src":"3275:297:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3290:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3321:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3332:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3317:3:26"},"nodeType":"YulFunctionCall","src":"3317:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3304:12:26"},"nodeType":"YulFunctionCall","src":"3304:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3294:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3383:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3385:77:26"},"nodeType":"YulFunctionCall","src":"3385:79:26"},"nodeType":"YulExpressionStatement","src":"3385:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3355:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3363:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3352:2:26"},"nodeType":"YulFunctionCall","src":"3352:30:26"},"nodeType":"YulIf","src":"3349:117:26"},{"nodeType":"YulAssignment","src":"3480:82:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3534:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3545:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:26"},"nodeType":"YulFunctionCall","src":"3530:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3554:7:26"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3498:31:26"},"nodeType":"YulFunctionCall","src":"3498:64:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3480:6:26"},{"name":"value2","nodeType":"YulIdentifier","src":"3488:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2963:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2974:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2986:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2994:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3002:6:26","type":""}],"src":"2907:672:26"},{"body":{"nodeType":"YulBlock","src":"3617:28:26","statements":[{"nodeType":"YulAssignment","src":"3627:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"3634:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3627:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3603:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3613:3:26","type":""}],"src":"3585:60:26"},{"body":{"nodeType":"YulBlock","src":"3711:82:26","statements":[{"nodeType":"YulAssignment","src":"3721:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3779:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3761:17:26"},"nodeType":"YulFunctionCall","src":"3761:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3752:8:26"},"nodeType":"YulFunctionCall","src":"3752:34:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3734:17:26"},"nodeType":"YulFunctionCall","src":"3734:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3721:9:26"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3691:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3701:9:26","type":""}],"src":"3651:142:26"},{"body":{"nodeType":"YulBlock","src":"3859:66:26","statements":[{"nodeType":"YulAssignment","src":"3869:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3913:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"3882:30:26"},"nodeType":"YulFunctionCall","src":"3882:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3869:9:26"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3839:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3849:9:26","type":""}],"src":"3799:126:26"},{"body":{"nodeType":"YulBlock","src":"4008:66:26","statements":[{"nodeType":"YulAssignment","src":"4018:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4062:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4031:30:26"},"nodeType":"YulFunctionCall","src":"4031:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4018:9:26"}]}]},"name":"convert_t_contract$_IRelayer_$1204_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3988:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3998:9:26","type":""}],"src":"3931:143:26"},{"body":{"nodeType":"YulBlock","src":"4162:83:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4179:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4232:5:26"}],"functionName":{"name":"convert_t_contract$_IRelayer_$1204_to_t_address","nodeType":"YulIdentifier","src":"4184:47:26"},"nodeType":"YulFunctionCall","src":"4184:54:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4172:6:26"},"nodeType":"YulFunctionCall","src":"4172:67:26"},"nodeType":"YulExpressionStatement","src":"4172:67:26"}]},"name":"abi_encode_t_contract$_IRelayer_$1204_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4150:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4157:3:26","type":""}],"src":"4080:165:26"},{"body":{"nodeType":"YulBlock","src":"4366:141:26","statements":[{"nodeType":"YulAssignment","src":"4376:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4388:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4399:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4384:3:26"},"nodeType":"YulFunctionCall","src":"4384:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4376:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4473:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4486:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4497:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4482:3:26"},"nodeType":"YulFunctionCall","src":"4482:17:26"}],"functionName":{"name":"abi_encode_t_contract$_IRelayer_$1204_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4412:60:26"},"nodeType":"YulFunctionCall","src":"4412:88:26"},"nodeType":"YulExpressionStatement","src":"4412:88:26"}]},"name":"abi_encode_tuple_t_contract$_IRelayer_$1204__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4338:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4350:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4361:4:26","type":""}],"src":"4251:256:26"},{"body":{"nodeType":"YulBlock","src":"4578:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4595:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4618:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4600:17:26"},"nodeType":"YulFunctionCall","src":"4600:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4588:6:26"},"nodeType":"YulFunctionCall","src":"4588:37:26"},"nodeType":"YulExpressionStatement","src":"4588:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4566:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4573:3:26","type":""}],"src":"4513:118:26"},{"body":{"nodeType":"YulBlock","src":"4735:124:26","statements":[{"nodeType":"YulAssignment","src":"4745:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4757:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4768:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4753:3:26"},"nodeType":"YulFunctionCall","src":"4753:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4745:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4825:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4838:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4849:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4834:3:26"},"nodeType":"YulFunctionCall","src":"4834:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4781:43:26"},"nodeType":"YulFunctionCall","src":"4781:71:26"},"nodeType":"YulExpressionStatement","src":"4781:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4707:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4719:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4730:4:26","type":""}],"src":"4637:222:26"},{"body":{"nodeType":"YulBlock","src":"4930:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4947:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4970:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4952:17:26"},"nodeType":"YulFunctionCall","src":"4952:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4940:6:26"},"nodeType":"YulFunctionCall","src":"4940:37:26"},"nodeType":"YulExpressionStatement","src":"4940:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4918:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4925:3:26","type":""}],"src":"4865:118:26"},{"body":{"nodeType":"YulBlock","src":"5087:124:26","statements":[{"nodeType":"YulAssignment","src":"5097:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5109:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5120:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5105:3:26"},"nodeType":"YulFunctionCall","src":"5105:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5097:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5177:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5190:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5201:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5186:3:26"},"nodeType":"YulFunctionCall","src":"5186:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5133:43:26"},"nodeType":"YulFunctionCall","src":"5133:71:26"},"nodeType":"YulExpressionStatement","src":"5133:71:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5059:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5071:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5082:4:26","type":""}],"src":"4989:222:26"},{"body":{"nodeType":"YulBlock","src":"5245:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5262:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5265:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5255:6:26"},"nodeType":"YulFunctionCall","src":"5255:88:26"},"nodeType":"YulExpressionStatement","src":"5255:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5359:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5362:4:26","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5352:6:26"},"nodeType":"YulFunctionCall","src":"5352:15:26"},"nodeType":"YulExpressionStatement","src":"5352:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5383:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5386:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5376:6:26"},"nodeType":"YulFunctionCall","src":"5376:15:26"},"nodeType":"YulExpressionStatement","src":"5376:15:26"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"5217:180:26"},{"body":{"nodeType":"YulBlock","src":"5461:62:26","statements":[{"body":{"nodeType":"YulBlock","src":"5495:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"5497:16:26"},"nodeType":"YulFunctionCall","src":"5497:18:26"},"nodeType":"YulExpressionStatement","src":"5497:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5484:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"5491:1:26","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5481:2:26"},"nodeType":"YulFunctionCall","src":"5481:12:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5474:6:26"},"nodeType":"YulFunctionCall","src":"5474:20:26"},"nodeType":"YulIf","src":"5471:46:26"}]},"name":"validator_assert_t_enum$_VaultState_$1208","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5454:5:26","type":""}],"src":"5403:120:26"},{"body":{"nodeType":"YulBlock","src":"5589:81:26","statements":[{"nodeType":"YulAssignment","src":"5599:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"5610:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5599:7:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5658:5:26"}],"functionName":{"name":"validator_assert_t_enum$_VaultState_$1208","nodeType":"YulIdentifier","src":"5616:41:26"},"nodeType":"YulFunctionCall","src":"5616:48:26"},"nodeType":"YulExpressionStatement","src":"5616:48:26"}]},"name":"cleanup_t_enum$_VaultState_$1208","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5571:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5581:7:26","type":""}],"src":"5529:141:26"},{"body":{"nodeType":"YulBlock","src":"5749:68:26","statements":[{"nodeType":"YulAssignment","src":"5759:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5805:5:26"}],"functionName":{"name":"cleanup_t_enum$_VaultState_$1208","nodeType":"YulIdentifier","src":"5772:32:26"},"nodeType":"YulFunctionCall","src":"5772:39:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5759:9:26"}]}]},"name":"convert_t_enum$_VaultState_$1208_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5729:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5739:9:26","type":""}],"src":"5676:141:26"},{"body":{"nodeType":"YulBlock","src":"5901:79:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5918:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5967:5:26"}],"functionName":{"name":"convert_t_enum$_VaultState_$1208_to_t_uint8","nodeType":"YulIdentifier","src":"5923:43:26"},"nodeType":"YulFunctionCall","src":"5923:50:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5911:6:26"},"nodeType":"YulFunctionCall","src":"5911:63:26"},"nodeType":"YulExpressionStatement","src":"5911:63:26"}]},"name":"abi_encode_t_enum$_VaultState_$1208_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5889:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5896:3:26","type":""}],"src":"5823:157:26"},{"body":{"nodeType":"YulBlock","src":"6097:137:26","statements":[{"nodeType":"YulAssignment","src":"6107:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6119:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6130:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6115:3:26"},"nodeType":"YulFunctionCall","src":"6115:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6107:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6200:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6213:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6224:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6209:3:26"},"nodeType":"YulFunctionCall","src":"6209:17:26"}],"functionName":{"name":"abi_encode_t_enum$_VaultState_$1208_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"6143:56:26"},"nodeType":"YulFunctionCall","src":"6143:84:26"},"nodeType":"YulExpressionStatement","src":"6143:84:26"}]},"name":"abi_encode_tuple_t_enum$_VaultState_$1208__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6069:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6081:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6092:4:26","type":""}],"src":"5986:248:26"},{"body":{"nodeType":"YulBlock","src":"6283:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"6340:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6349:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6352:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6342:6:26"},"nodeType":"YulFunctionCall","src":"6342:12:26"},"nodeType":"YulExpressionStatement","src":"6342:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6306:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6331:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6313:17:26"},"nodeType":"YulFunctionCall","src":"6313:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6303:2:26"},"nodeType":"YulFunctionCall","src":"6303:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6296:6:26"},"nodeType":"YulFunctionCall","src":"6296:43:26"},"nodeType":"YulIf","src":"6293:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6276:5:26","type":""}],"src":"6240:122:26"},{"body":{"nodeType":"YulBlock","src":"6420:87:26","statements":[{"nodeType":"YulAssignment","src":"6430:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6452:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6439:12:26"},"nodeType":"YulFunctionCall","src":"6439:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6430:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6495:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6468:26:26"},"nodeType":"YulFunctionCall","src":"6468:33:26"},"nodeType":"YulExpressionStatement","src":"6468:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6398:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6406:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6414:5:26","type":""}],"src":"6368:139:26"},{"body":{"nodeType":"YulBlock","src":"6649:827:26","statements":[{"body":{"nodeType":"YulBlock","src":"6696:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6698:77:26"},"nodeType":"YulFunctionCall","src":"6698:79:26"},"nodeType":"YulExpressionStatement","src":"6698:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6670:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6679:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6666:3:26"},"nodeType":"YulFunctionCall","src":"6666:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6691:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6662:3:26"},"nodeType":"YulFunctionCall","src":"6662:33:26"},"nodeType":"YulIf","src":"6659:120:26"},{"nodeType":"YulBlock","src":"6789:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6804:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6818:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6808:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6833:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6868:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6879:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6864:3:26"},"nodeType":"YulFunctionCall","src":"6864:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6888:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6843:20:26"},"nodeType":"YulFunctionCall","src":"6843:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6833:6:26"}]}]},{"nodeType":"YulBlock","src":"6916:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6931:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6945:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6935:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6961:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6996:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7007:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6992:3:26"},"nodeType":"YulFunctionCall","src":"6992:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7016:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6971:20:26"},"nodeType":"YulFunctionCall","src":"6971:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6961:6:26"}]}]},{"nodeType":"YulBlock","src":"7044:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7059:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7073:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7063:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7089:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7124:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7135:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7120:3:26"},"nodeType":"YulFunctionCall","src":"7120:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7144:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7099:20:26"},"nodeType":"YulFunctionCall","src":"7099:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7089:6:26"}]}]},{"nodeType":"YulBlock","src":"7172:297:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7187:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7218:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7229:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7214:3:26"},"nodeType":"YulFunctionCall","src":"7214:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7201:12:26"},"nodeType":"YulFunctionCall","src":"7201:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7191:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7280:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7282:77:26"},"nodeType":"YulFunctionCall","src":"7282:79:26"},"nodeType":"YulExpressionStatement","src":"7282:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7252:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7260:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7249:2:26"},"nodeType":"YulFunctionCall","src":"7249:30:26"},"nodeType":"YulIf","src":"7246:117:26"},{"nodeType":"YulAssignment","src":"7377:82:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7431:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7442:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7427:3:26"},"nodeType":"YulFunctionCall","src":"7427:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7451:7:26"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"7395:31:26"},"nodeType":"YulFunctionCall","src":"7395:64:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7377:6:26"},{"name":"value4","nodeType":"YulIdentifier","src":"7385:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6587:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6598:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6610:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6618:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6626:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6634:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6642:6:26","type":""}],"src":"6513:963:26"},{"body":{"nodeType":"YulBlock","src":"7548:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"7594:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7596:77:26"},"nodeType":"YulFunctionCall","src":"7596:79:26"},"nodeType":"YulExpressionStatement","src":"7596:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7569:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7578:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7565:3:26"},"nodeType":"YulFunctionCall","src":"7565:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"7590:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7561:3:26"},"nodeType":"YulFunctionCall","src":"7561:32:26"},"nodeType":"YulIf","src":"7558:119:26"},{"nodeType":"YulBlock","src":"7687:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7702:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7716:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7706:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7731:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7766:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7777:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7762:3:26"},"nodeType":"YulFunctionCall","src":"7762:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7786:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7741:20:26"},"nodeType":"YulFunctionCall","src":"7741:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7731:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7518:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7529:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7541:6:26","type":""}],"src":"7482:329:26"},{"body":{"nodeType":"YulBlock","src":"7913:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7930:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7935:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7923:6:26"},"nodeType":"YulFunctionCall","src":"7923:19:26"},"nodeType":"YulExpressionStatement","src":"7923:19:26"},{"nodeType":"YulAssignment","src":"7951:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7970:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7975:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7966:3:26"},"nodeType":"YulFunctionCall","src":"7966:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7951:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7885:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"7890:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7901:11:26","type":""}],"src":"7817:169:26"},{"body":{"nodeType":"YulBlock","src":"8098:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8120:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8128:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8116:3:26"},"nodeType":"YulFunctionCall","src":"8116:14:26"},{"hexValue":"496e76616c6964205661756c74207374617465","kind":"string","nodeType":"YulLiteral","src":"8132:21:26","type":"","value":"Invalid Vault state"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8109:6:26"},"nodeType":"YulFunctionCall","src":"8109:45:26"},"nodeType":"YulExpressionStatement","src":"8109:45:26"}]},"name":"store_literal_in_memory_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8090:6:26","type":""}],"src":"7992:169:26"},{"body":{"nodeType":"YulBlock","src":"8313:220:26","statements":[{"nodeType":"YulAssignment","src":"8323:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8389:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8394:2:26","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8330:58:26"},"nodeType":"YulFunctionCall","src":"8330:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8323:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8495:3:26"}],"functionName":{"name":"store_literal_in_memory_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d","nodeType":"YulIdentifier","src":"8406:88:26"},"nodeType":"YulFunctionCall","src":"8406:93:26"},"nodeType":"YulExpressionStatement","src":"8406:93:26"},{"nodeType":"YulAssignment","src":"8508:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8519:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8524:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8515:3:26"},"nodeType":"YulFunctionCall","src":"8515:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8508:3:26"}]}]},"name":"abi_encode_t_stringliteral_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8301:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8309:3:26","type":""}],"src":"8167:366:26"},{"body":{"nodeType":"YulBlock","src":"8710:248:26","statements":[{"nodeType":"YulAssignment","src":"8720:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8732:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8743:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8728:3:26"},"nodeType":"YulFunctionCall","src":"8728:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8720:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8767:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8778:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8763:3:26"},"nodeType":"YulFunctionCall","src":"8763:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8786:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"8792:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8782:3:26"},"nodeType":"YulFunctionCall","src":"8782:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8756:6:26"},"nodeType":"YulFunctionCall","src":"8756:47:26"},"nodeType":"YulExpressionStatement","src":"8756:47:26"},{"nodeType":"YulAssignment","src":"8812:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8946:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8820:124:26"},"nodeType":"YulFunctionCall","src":"8820:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8812:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8690:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8705:4:26","type":""}],"src":"8539:419:26"},{"body":{"nodeType":"YulBlock","src":"8992:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9009:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9012:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9002:6:26"},"nodeType":"YulFunctionCall","src":"9002:88:26"},"nodeType":"YulExpressionStatement","src":"9002:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9106:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9109:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9099:6:26"},"nodeType":"YulFunctionCall","src":"9099:15:26"},"nodeType":"YulExpressionStatement","src":"9099:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9130:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9133:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9123:6:26"},"nodeType":"YulFunctionCall","src":"9123:15:26"},"nodeType":"YulExpressionStatement","src":"9123:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8964:180:26"},{"body":{"nodeType":"YulBlock","src":"9198:362:26","statements":[{"nodeType":"YulAssignment","src":"9208:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9231:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9213:17:26"},"nodeType":"YulFunctionCall","src":"9213:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9208:1:26"}]},{"nodeType":"YulAssignment","src":"9242:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9265:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9247:17:26"},"nodeType":"YulFunctionCall","src":"9247:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9242:1:26"}]},{"nodeType":"YulVariableDeclaration","src":"9276:28:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9299:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"9302:1:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9295:3:26"},"nodeType":"YulFunctionCall","src":"9295:9:26"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"9280:11:26","type":""}]},{"nodeType":"YulAssignment","src":"9313:41:26","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"9342:11:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9324:17:26"},"nodeType":"YulFunctionCall","src":"9324:30:26"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"9313:7:26"}]},{"body":{"nodeType":"YulBlock","src":"9531:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9533:16:26"},"nodeType":"YulFunctionCall","src":"9533:18:26"},"nodeType":"YulExpressionStatement","src":"9533:18:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9464:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9457:6:26"},"nodeType":"YulFunctionCall","src":"9457:9:26"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9487:1:26"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"9494:7:26"},{"name":"x","nodeType":"YulIdentifier","src":"9503:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9490:3:26"},"nodeType":"YulFunctionCall","src":"9490:15:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9484:2:26"},"nodeType":"YulFunctionCall","src":"9484:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9437:2:26"},"nodeType":"YulFunctionCall","src":"9437:83:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9417:6:26"},"nodeType":"YulFunctionCall","src":"9417:113:26"},"nodeType":"YulIf","src":"9414:139:26"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9181:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"9184:1:26","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"9190:7:26","type":""}],"src":"9150:410:26"},{"body":{"nodeType":"YulBlock","src":"9594:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9611:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9614:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9604:6:26"},"nodeType":"YulFunctionCall","src":"9604:88:26"},"nodeType":"YulExpressionStatement","src":"9604:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9708:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9711:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9701:6:26"},"nodeType":"YulFunctionCall","src":"9701:15:26"},"nodeType":"YulExpressionStatement","src":"9701:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9732:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9735:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9725:6:26"},"nodeType":"YulFunctionCall","src":"9725:15:26"},"nodeType":"YulExpressionStatement","src":"9725:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"9566:180:26"},{"body":{"nodeType":"YulBlock","src":"9794:143:26","statements":[{"nodeType":"YulAssignment","src":"9804:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9827:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9809:17:26"},"nodeType":"YulFunctionCall","src":"9809:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9804:1:26"}]},{"nodeType":"YulAssignment","src":"9838:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9861:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9843:17:26"},"nodeType":"YulFunctionCall","src":"9843:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9838:1:26"}]},{"body":{"nodeType":"YulBlock","src":"9885:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"9887:16:26"},"nodeType":"YulFunctionCall","src":"9887:18:26"},"nodeType":"YulExpressionStatement","src":"9887:18:26"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9882:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9875:6:26"},"nodeType":"YulFunctionCall","src":"9875:9:26"},"nodeType":"YulIf","src":"9872:35:26"},{"nodeType":"YulAssignment","src":"9917:14:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9926:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"9929:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9922:3:26"},"nodeType":"YulFunctionCall","src":"9922:9:26"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9917:1:26"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9783:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"9786:1:26","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"9792:1:26","type":""}],"src":"9752:185:26"},{"body":{"nodeType":"YulBlock","src":"10002:51:26","statements":[{"nodeType":"YulAssignment","src":"10012:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10041:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10023:17:26"},"nodeType":"YulFunctionCall","src":"10023:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10012:7:26"}]}]},"name":"cleanup_t_contract$_ERC20_$4386","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9984:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9994:7:26","type":""}],"src":"9943:110:26"},{"body":{"nodeType":"YulBlock","src":"10116:93:26","statements":[{"body":{"nodeType":"YulBlock","src":"10187:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10196:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10199:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10189:6:26"},"nodeType":"YulFunctionCall","src":"10189:12:26"},"nodeType":"YulExpressionStatement","src":"10189:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10139:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10178:5:26"}],"functionName":{"name":"cleanup_t_contract$_ERC20_$4386","nodeType":"YulIdentifier","src":"10146:31:26"},"nodeType":"YulFunctionCall","src":"10146:38:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10136:2:26"},"nodeType":"YulFunctionCall","src":"10136:49:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10129:6:26"},"nodeType":"YulFunctionCall","src":"10129:57:26"},"nodeType":"YulIf","src":"10126:77:26"}]},"name":"validator_revert_t_contract$_ERC20_$4386","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10109:5:26","type":""}],"src":"10059:150:26"},{"body":{"nodeType":"YulBlock","src":"10292:94:26","statements":[{"nodeType":"YulAssignment","src":"10302:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10317:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10311:5:26"},"nodeType":"YulFunctionCall","src":"10311:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10302:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10374:5:26"}],"functionName":{"name":"validator_revert_t_contract$_ERC20_$4386","nodeType":"YulIdentifier","src":"10333:40:26"},"nodeType":"YulFunctionCall","src":"10333:47:26"},"nodeType":"YulExpressionStatement","src":"10333:47:26"}]},"name":"abi_decode_t_contract$_ERC20_$4386_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10270:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"10278:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10286:5:26","type":""}],"src":"10215:171:26"},{"body":{"nodeType":"YulBlock","src":"10483:288:26","statements":[{"body":{"nodeType":"YulBlock","src":"10529:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10531:77:26"},"nodeType":"YulFunctionCall","src":"10531:79:26"},"nodeType":"YulExpressionStatement","src":"10531:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10504:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10513:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10500:3:26"},"nodeType":"YulFunctionCall","src":"10500:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10525:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10496:3:26"},"nodeType":"YulFunctionCall","src":"10496:32:26"},"nodeType":"YulIf","src":"10493:119:26"},{"nodeType":"YulBlock","src":"10622:142:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10637:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10651:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10641:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10666:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10726:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10737:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10722:3:26"},"nodeType":"YulFunctionCall","src":"10722:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10746:7:26"}],"functionName":{"name":"abi_decode_t_contract$_ERC20_$4386_fromMemory","nodeType":"YulIdentifier","src":"10676:45:26"},"nodeType":"YulFunctionCall","src":"10676:78:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10666:6:26"}]}]}]},"name":"abi_decode_tuple_t_contract$_ERC20_$4386_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10453:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10464:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10476:6:26","type":""}],"src":"10392:379:26"},{"body":{"nodeType":"YulBlock","src":"10931:288:26","statements":[{"nodeType":"YulAssignment","src":"10941:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10953:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10964:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10949:3:26"},"nodeType":"YulFunctionCall","src":"10949:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10941:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11021:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11034:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11045:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11030:3:26"},"nodeType":"YulFunctionCall","src":"11030:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10977:43:26"},"nodeType":"YulFunctionCall","src":"10977:71:26"},"nodeType":"YulExpressionStatement","src":"10977:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11102:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11115:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11126:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11111:3:26"},"nodeType":"YulFunctionCall","src":"11111:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11058:43:26"},"nodeType":"YulFunctionCall","src":"11058:72:26"},"nodeType":"YulExpressionStatement","src":"11058:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11184:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11197:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11208:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11193:3:26"},"nodeType":"YulFunctionCall","src":"11193:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11140:43:26"},"nodeType":"YulFunctionCall","src":"11140:72:26"},"nodeType":"YulExpressionStatement","src":"11140:72:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10887:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10899:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10907:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10915:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10926:4:26","type":""}],"src":"10777:442:26"},{"body":{"nodeType":"YulBlock","src":"11267:48:26","statements":[{"nodeType":"YulAssignment","src":"11277:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11302:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11295:6:26"},"nodeType":"YulFunctionCall","src":"11295:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11288:6:26"},"nodeType":"YulFunctionCall","src":"11288:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11277:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11249:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11259:7:26","type":""}],"src":"11225:90:26"},{"body":{"nodeType":"YulBlock","src":"11361:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"11415:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11424:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11427:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11417:6:26"},"nodeType":"YulFunctionCall","src":"11417:12:26"},"nodeType":"YulExpressionStatement","src":"11417:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11384:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11406:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11391:14:26"},"nodeType":"YulFunctionCall","src":"11391:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11381:2:26"},"nodeType":"YulFunctionCall","src":"11381:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11374:6:26"},"nodeType":"YulFunctionCall","src":"11374:40:26"},"nodeType":"YulIf","src":"11371:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11354:5:26","type":""}],"src":"11321:116:26"},{"body":{"nodeType":"YulBlock","src":"11503:77:26","statements":[{"nodeType":"YulAssignment","src":"11513:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11528:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11522:5:26"},"nodeType":"YulFunctionCall","src":"11522:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11513:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11568:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11544:23:26"},"nodeType":"YulFunctionCall","src":"11544:30:26"},"nodeType":"YulExpressionStatement","src":"11544:30:26"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11481:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"11489:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11497:5:26","type":""}],"src":"11443:137:26"},{"body":{"nodeType":"YulBlock","src":"11660:271:26","statements":[{"body":{"nodeType":"YulBlock","src":"11706:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11708:77:26"},"nodeType":"YulFunctionCall","src":"11708:79:26"},"nodeType":"YulExpressionStatement","src":"11708:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11681:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"11690:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11677:3:26"},"nodeType":"YulFunctionCall","src":"11677:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"11702:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11673:3:26"},"nodeType":"YulFunctionCall","src":"11673:32:26"},"nodeType":"YulIf","src":"11670:119:26"},{"nodeType":"YulBlock","src":"11799:125:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11814:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11828:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11818:6:26","type":""}]},{"nodeType":"YulAssignment","src":"11843:71:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11886:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"11897:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11882:3:26"},"nodeType":"YulFunctionCall","src":"11882:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11906:7:26"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"11853:28:26"},"nodeType":"YulFunctionCall","src":"11853:61:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11843:6:26"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11630:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11641:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11653:6:26","type":""}],"src":"11586:345:26"},{"body":{"nodeType":"YulBlock","src":"12043:56:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12065:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12073:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12061:3:26"},"nodeType":"YulFunctionCall","src":"12061:14:26"},{"hexValue":"554e415554484f52495a4544","kind":"string","nodeType":"YulLiteral","src":"12077:14:26","type":"","value":"UNAUTHORIZED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12054:6:26"},"nodeType":"YulFunctionCall","src":"12054:38:26"},"nodeType":"YulExpressionStatement","src":"12054:38:26"}]},"name":"store_literal_in_memory_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12035:6:26","type":""}],"src":"11937:162:26"},{"body":{"nodeType":"YulBlock","src":"12251:220:26","statements":[{"nodeType":"YulAssignment","src":"12261:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12327:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12332:2:26","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12268:58:26"},"nodeType":"YulFunctionCall","src":"12268:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12261:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12433:3:26"}],"functionName":{"name":"store_literal_in_memory_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528","nodeType":"YulIdentifier","src":"12344:88:26"},"nodeType":"YulFunctionCall","src":"12344:93:26"},"nodeType":"YulExpressionStatement","src":"12344:93:26"},{"nodeType":"YulAssignment","src":"12446:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12457:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12462:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12453:3:26"},"nodeType":"YulFunctionCall","src":"12453:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12446:3:26"}]}]},"name":"abi_encode_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12239:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12247:3:26","type":""}],"src":"12105:366:26"},{"body":{"nodeType":"YulBlock","src":"12648:248:26","statements":[{"nodeType":"YulAssignment","src":"12658:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12670:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12681:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12666:3:26"},"nodeType":"YulFunctionCall","src":"12666:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12658:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12705:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12716:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12701:3:26"},"nodeType":"YulFunctionCall","src":"12701:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12724:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"12730:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12720:3:26"},"nodeType":"YulFunctionCall","src":"12720:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12694:6:26"},"nodeType":"YulFunctionCall","src":"12694:47:26"},"nodeType":"YulExpressionStatement","src":"12694:47:26"},{"nodeType":"YulAssignment","src":"12750:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12884:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12758:124:26"},"nodeType":"YulFunctionCall","src":"12758:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12750:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12628:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12643:4:26","type":""}],"src":"12477:419:26"},{"body":{"nodeType":"YulBlock","src":"12965:80:26","statements":[{"nodeType":"YulAssignment","src":"12975:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12990:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12984:5:26"},"nodeType":"YulFunctionCall","src":"12984:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12975:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13033:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"13006:26:26"},"nodeType":"YulFunctionCall","src":"13006:33:26"},"nodeType":"YulExpressionStatement","src":"13006:33:26"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12943:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"12951:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12959:5:26","type":""}],"src":"12902:143:26"},{"body":{"nodeType":"YulBlock","src":"13128:274:26","statements":[{"body":{"nodeType":"YulBlock","src":"13174:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13176:77:26"},"nodeType":"YulFunctionCall","src":"13176:79:26"},"nodeType":"YulExpressionStatement","src":"13176:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13149:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13158:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13145:3:26"},"nodeType":"YulFunctionCall","src":"13145:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"13170:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13141:3:26"},"nodeType":"YulFunctionCall","src":"13141:32:26"},"nodeType":"YulIf","src":"13138:119:26"},{"nodeType":"YulBlock","src":"13267:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13282:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13296:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13286:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13311:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13357:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"13368:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13353:3:26"},"nodeType":"YulFunctionCall","src":"13353:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13377:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"13321:31:26"},"nodeType":"YulFunctionCall","src":"13321:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13311:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13098:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13109:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13121:6:26","type":""}],"src":"13051:351:26"},{"body":{"nodeType":"YulBlock","src":"13503:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13520:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13525:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13513:6:26"},"nodeType":"YulFunctionCall","src":"13513:19:26"},"nodeType":"YulExpressionStatement","src":"13513:19:26"},{"nodeType":"YulAssignment","src":"13541:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13560:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13565:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13556:3:26"},"nodeType":"YulFunctionCall","src":"13556:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13541:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13475:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"13480:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13491:11:26","type":""}],"src":"13408:168:26"},{"body":{"nodeType":"YulBlock","src":"13646:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13669:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"13674:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13679:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13656:12:26"},"nodeType":"YulFunctionCall","src":"13656:30:26"},"nodeType":"YulExpressionStatement","src":"13656:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13706:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13711:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13702:3:26"},"nodeType":"YulFunctionCall","src":"13702:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"13720:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13695:6:26"},"nodeType":"YulFunctionCall","src":"13695:27:26"},"nodeType":"YulExpressionStatement","src":"13695:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13628:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13633:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"13638:6:26","type":""}],"src":"13582:146:26"},{"body":{"nodeType":"YulBlock","src":"13782:54:26","statements":[{"nodeType":"YulAssignment","src":"13792:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13810:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"13817:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13806:3:26"},"nodeType":"YulFunctionCall","src":"13806:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13826:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13822:3:26"},"nodeType":"YulFunctionCall","src":"13822:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13802:3:26"},"nodeType":"YulFunctionCall","src":"13802:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13792:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13765:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13775:6:26","type":""}],"src":"13734:102:26"},{"body":{"nodeType":"YulBlock","src":"13964:214:26","statements":[{"nodeType":"YulAssignment","src":"13974:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14039:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"14044:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13981:57:26"},"nodeType":"YulFunctionCall","src":"13981:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13974:3:26"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14098:5:26"},{"name":"pos","nodeType":"YulIdentifier","src":"14105:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"14110:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14061:36:26"},"nodeType":"YulFunctionCall","src":"14061:56:26"},"nodeType":"YulExpressionStatement","src":"14061:56:26"},{"nodeType":"YulAssignment","src":"14126:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14137:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14164:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14142:21:26"},"nodeType":"YulFunctionCall","src":"14142:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14133:3:26"},"nodeType":"YulFunctionCall","src":"14133:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14126:3:26"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"13937:5:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"13944:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13952:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13960:3:26","type":""}],"src":"13864:314:26"},{"body":{"nodeType":"YulBlock","src":"14422:533:26","statements":[{"nodeType":"YulAssignment","src":"14432:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14444:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14455:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14440:3:26"},"nodeType":"YulFunctionCall","src":"14440:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14432:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14513:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14526:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14537:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14522:3:26"},"nodeType":"YulFunctionCall","src":"14522:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"14469:43:26"},"nodeType":"YulFunctionCall","src":"14469:71:26"},"nodeType":"YulExpressionStatement","src":"14469:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14594:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14607:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14618:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14603:3:26"},"nodeType":"YulFunctionCall","src":"14603:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"14550:43:26"},"nodeType":"YulFunctionCall","src":"14550:72:26"},"nodeType":"YulExpressionStatement","src":"14550:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14676:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14689:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14700:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14685:3:26"},"nodeType":"YulFunctionCall","src":"14685:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14632:43:26"},"nodeType":"YulFunctionCall","src":"14632:72:26"},"nodeType":"YulExpressionStatement","src":"14632:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14758:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14771:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14782:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14767:3:26"},"nodeType":"YulFunctionCall","src":"14767:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14714:43:26"},"nodeType":"YulFunctionCall","src":"14714:72:26"},"nodeType":"YulExpressionStatement","src":"14714:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14807:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14818:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14803:3:26"},"nodeType":"YulFunctionCall","src":"14803:19:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14828:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14834:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14824:3:26"},"nodeType":"YulFunctionCall","src":"14824:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14796:6:26"},"nodeType":"YulFunctionCall","src":"14796:49:26"},"nodeType":"YulExpressionStatement","src":"14796:49:26"},{"nodeType":"YulAssignment","src":"14854:94:26","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14926:6:26"},{"name":"value5","nodeType":"YulIdentifier","src":"14934:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"14943:4:26"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14862:63:26"},"nodeType":"YulFunctionCall","src":"14862:86:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14854:4:26"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_bytes32_t_bytes32_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14354:9:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"14366:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14374:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14382:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14390:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14398:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14406:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14417:4:26","type":""}],"src":"14184:771:26"},{"body":{"nodeType":"YulBlock","src":"15005:49:26","statements":[{"nodeType":"YulAssignment","src":"15015:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15030:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"15037:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15026:3:26"},"nodeType":"YulFunctionCall","src":"15026:22:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"15015:7:26"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14987:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14997:7:26","type":""}],"src":"14961:93:26"},{"body":{"nodeType":"YulBlock","src":"15102:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"15158:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15167:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15170:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15160:6:26"},"nodeType":"YulFunctionCall","src":"15160:12:26"},"nodeType":"YulExpressionStatement","src":"15160:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15125:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15149:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"15132:16:26"},"nodeType":"YulFunctionCall","src":"15132:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15122:2:26"},"nodeType":"YulFunctionCall","src":"15122:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15115:6:26"},"nodeType":"YulFunctionCall","src":"15115:42:26"},"nodeType":"YulIf","src":"15112:62:26"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15095:5:26","type":""}],"src":"15060:120:26"},{"body":{"nodeType":"YulBlock","src":"15248:79:26","statements":[{"nodeType":"YulAssignment","src":"15258:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15273:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15267:5:26"},"nodeType":"YulFunctionCall","src":"15267:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15258:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15315:5:26"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"15289:25:26"},"nodeType":"YulFunctionCall","src":"15289:32:26"},"nodeType":"YulExpressionStatement","src":"15289:32:26"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15226:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"15234:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15242:5:26","type":""}],"src":"15186:141:26"},{"body":{"nodeType":"YulBlock","src":"15409:273:26","statements":[{"body":{"nodeType":"YulBlock","src":"15455:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15457:77:26"},"nodeType":"YulFunctionCall","src":"15457:79:26"},"nodeType":"YulExpressionStatement","src":"15457:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15430:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15439:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15426:3:26"},"nodeType":"YulFunctionCall","src":"15426:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"15451:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15422:3:26"},"nodeType":"YulFunctionCall","src":"15422:32:26"},"nodeType":"YulIf","src":"15419:119:26"},{"nodeType":"YulBlock","src":"15548:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15563:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"15577:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15567:6:26","type":""}]},{"nodeType":"YulAssignment","src":"15592:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15637:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"15648:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15633:3:26"},"nodeType":"YulFunctionCall","src":"15633:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15657:7:26"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"15602:30:26"},"nodeType":"YulFunctionCall","src":"15602:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15592:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15379:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15390:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15402:6:26","type":""}],"src":"15333:349:26"},{"body":{"nodeType":"YulBlock","src":"15926:533:26","statements":[{"nodeType":"YulAssignment","src":"15936:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15948:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15959:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15944:3:26"},"nodeType":"YulFunctionCall","src":"15944:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15936:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16017:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16030:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16041:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16026:3:26"},"nodeType":"YulFunctionCall","src":"16026:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15973:43:26"},"nodeType":"YulFunctionCall","src":"15973:71:26"},"nodeType":"YulExpressionStatement","src":"15973:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16098:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16111:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16122:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16107:3:26"},"nodeType":"YulFunctionCall","src":"16107:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16054:43:26"},"nodeType":"YulFunctionCall","src":"16054:72:26"},"nodeType":"YulExpressionStatement","src":"16054:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16180:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16193:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16204:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16189:3:26"},"nodeType":"YulFunctionCall","src":"16189:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16136:43:26"},"nodeType":"YulFunctionCall","src":"16136:72:26"},"nodeType":"YulExpressionStatement","src":"16136:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16262:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16275:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16286:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16271:3:26"},"nodeType":"YulFunctionCall","src":"16271:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16218:43:26"},"nodeType":"YulFunctionCall","src":"16218:72:26"},"nodeType":"YulExpressionStatement","src":"16218:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16311:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16322:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16307:3:26"},"nodeType":"YulFunctionCall","src":"16307:19:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16332:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"16338:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16328:3:26"},"nodeType":"YulFunctionCall","src":"16328:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16300:6:26"},"nodeType":"YulFunctionCall","src":"16300:49:26"},"nodeType":"YulExpressionStatement","src":"16300:49:26"},{"nodeType":"YulAssignment","src":"16358:94:26","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"16430:6:26"},{"name":"value5","nodeType":"YulIdentifier","src":"16438:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"16447:4:26"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16366:63:26"},"nodeType":"YulFunctionCall","src":"16366:86:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16358:4:26"}]}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_uint256_t_address_t_bytes_calldata_ptr__to_t_bytes32_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15858:9:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"15870:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15878:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15886:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15894:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15902:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15910:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15921:4:26","type":""}],"src":"15688:771:26"},{"body":{"nodeType":"YulBlock","src":"16509:147:26","statements":[{"nodeType":"YulAssignment","src":"16519:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16542:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16524:17:26"},"nodeType":"YulFunctionCall","src":"16524:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16519:1:26"}]},{"nodeType":"YulAssignment","src":"16553:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16576:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16558:17:26"},"nodeType":"YulFunctionCall","src":"16558:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16553:1:26"}]},{"nodeType":"YulAssignment","src":"16587:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16598:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"16601:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16594:3:26"},"nodeType":"YulFunctionCall","src":"16594:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16587:3:26"}]},{"body":{"nodeType":"YulBlock","src":"16627:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16629:16:26"},"nodeType":"YulFunctionCall","src":"16629:18:26"},"nodeType":"YulExpressionStatement","src":"16629:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16619:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"16622:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16616:2:26"},"nodeType":"YulFunctionCall","src":"16616:10:26"},"nodeType":"YulIf","src":"16613:36:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16496:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"16499:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16505:3:26","type":""}],"src":"16465:191:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IRelayer_$1204_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IRelayer_$1204_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IRelayer_$1204_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IRelayer_$1204__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IRelayer_$1204_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_VaultState_$1208(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_VaultState_$1208(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_VaultState_$1208(value)\n    }\n\n    function convert_t_enum$_VaultState_$1208_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_VaultState_$1208(value)\n    }\n\n    function abi_encode_t_enum$_VaultState_$1208_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_VaultState_$1208_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_VaultState_$1208__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_VaultState_$1208_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Vault state\")\n\n    }\n\n    function abi_encode_t_stringliteral_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b1b98b287673309c94e2dbcb002794644878f9247666a24065d7007770eecf6d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_contract$_ERC20_$4386(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$4386(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$4386(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$4386_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$4386(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$4386_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$4386_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528(memPtr) {\n\n        mstore(add(memPtr, 0), \"UNAUTHORIZED\")\n\n    }\n\n    function abi_encode_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_bytes32_t_bytes32_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value4, value5,  tail)\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_uint256_t_address_t_bytes_calldata_ptr__to_t_bytes32_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value4, value5,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1213":[{"length":32,"start":768},{"length":32,"start":1333},{"length":32,"start":1603},{"length":32,"start":1871},{"length":32,"start":2091},{"length":32,"start":2760},{"length":32,"start":2909},{"length":32,"start":3351}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x926323D5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x926323D5 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xB2B4E62F EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xF4725AF4 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xF868E766 EQ PUSH2 0x20D JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x542631B EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x556A6D8A EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x72A7FA5B EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x8406C079 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x91DAA902 EQ PUSH2 0x15D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x23E JUMPI PUSH2 0x23D PUSH2 0x112B JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x260 JUMPI PUSH2 0x25F PUSH2 0x112B JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x13BB JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF709EE8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x441 JUMPI PUSH2 0x440 PUSH2 0x112B JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x463 JUMPI PUSH2 0x462 PUSH2 0x112B JUMP JUMPDEST JUMPDEST EQ PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF709EE8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x499F712E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D2 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x727 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x61F6C033 DUP8 PUSH1 0x1 SLOAD DUP6 DUP6 DUP11 DUP11 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0x1697 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x81C JUMPI PUSH2 0x81B PUSH2 0x112B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x112B JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9F8 JUMPI PUSH2 0x9F7 PUSH2 0x112B JUMP JUMPDEST JUMPDEST EQ PUSH2 0xA38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2F SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABD SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC4B5239F DUP8 DUP8 DUP8 ADDRESS DUP9 DUP9 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB29 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF709EE8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBEC SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC65 SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0x112B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCB3 JUMPI PUSH2 0xCB2 PUSH2 0x112B JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD4 PUSH2 0x112B JUMP JUMPDEST JUMPDEST EQ PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0C SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF709EE8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA6 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE25 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST POP DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x1720 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE8E SWAP2 SWAP1 PUSH2 0x1720 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP3 PUSH2 0xEA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDE DUP2 PUSH2 0xEC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xEE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEFB DUP2 PUSH2 0xED5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH2 0xF16 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF25 DUP5 DUP3 DUP6 ADD PUSH2 0xEEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF41 DUP2 PUSH2 0xF2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF75 DUP2 PUSH2 0xF62 JUMP JUMPDEST DUP2 EQ PUSH2 0xF80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF92 DUP2 PUSH2 0xF6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xFBD JUMPI PUSH2 0xFBC PUSH2 0xF98 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDA JUMPI PUSH2 0xFD9 PUSH2 0xF9D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xFF6 JUMPI PUSH2 0xFF5 PUSH2 0xFA2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1016 JUMPI PUSH2 0x1015 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1024 DUP7 DUP3 DUP8 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0xE9E JUMP JUMPDEST JUMPDEST PUSH2 0x1051 DUP7 DUP3 DUP8 ADD PUSH2 0xFA7 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1082 PUSH2 0x107D PUSH2 0x1078 DUP5 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x105D JUMP JUMPDEST PUSH2 0xEA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1094 DUP3 PUSH2 0x1067 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A6 DUP3 PUSH2 0x1089 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B6 DUP2 PUSH2 0x109B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E0 DUP2 PUSH2 0xEC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x110A DUP2 PUSH2 0xF62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1125 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1101 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x116B JUMPI PUSH2 0x116A PUSH2 0x112B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x117C DUP3 PUSH2 0x115A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118C DUP3 PUSH2 0x116E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119C DUP2 PUSH2 0x1181 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1193 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11C6 DUP2 PUSH2 0xF2E JUMP JUMPDEST DUP2 EQ PUSH2 0x11D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E3 DUP2 PUSH2 0x11BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1205 JUMPI PUSH2 0x1204 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1213 DUP9 DUP3 DUP10 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1224 DUP9 DUP3 DUP10 ADD PUSH2 0x11D4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1235 DUP9 DUP3 DUP10 ADD PUSH2 0x11D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1256 JUMPI PUSH2 0x1255 PUSH2 0xE9E JUMP JUMPDEST JUMPDEST PUSH2 0x1262 DUP9 DUP3 DUP10 ADD PUSH2 0xFA7 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1295 DUP5 DUP3 DUP6 ADD PUSH2 0x11D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964205661756C7420737461746500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E5 PUSH1 0x13 DUP4 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP PUSH2 0x12F0 DUP3 PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1314 DUP2 PUSH2 0x12D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1355 DUP3 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1360 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x136E DUP2 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x131B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13C6 DUP3 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x13D1 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x13E1 JUMPI PUSH2 0x13E0 PUSH2 0x138C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F7 DUP3 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1407 DUP2 PUSH2 0x13EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1424 DUP2 PUSH2 0x13FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH2 0x143F PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x144E DUP5 DUP3 DUP6 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x146C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x1479 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x1486 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A3 DUP2 PUSH2 0x148E JUMP JUMPDEST DUP2 EQ PUSH2 0x14AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14C0 DUP2 PUSH2 0x149A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14DC JUMPI PUSH2 0x14DB PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14EA DUP5 DUP3 DUP6 ADD PUSH2 0x14B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1529 PUSH1 0xC DUP4 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP PUSH2 0x1534 DUP3 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1558 DUP2 PUSH2 0x151C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x156E DUP2 PUSH2 0x11BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x158A JUMPI PUSH2 0x1589 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1598 DUP5 DUP3 DUP6 ADD PUSH2 0x155F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DE DUP4 DUP6 PUSH2 0x15A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x15EB DUP4 DUP6 DUP5 PUSH2 0x15B2 JUMP JUMPDEST PUSH2 0x15F4 DUP4 PUSH2 0x15C1 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1614 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x1621 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x162E PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x163B PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xF38 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x164E DUP2 DUP5 DUP7 PUSH2 0x15D2 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0x165B JUMP JUMPDEST DUP2 EQ PUSH2 0x167F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1691 DUP2 PUSH2 0x166B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AC PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16BB DUP5 DUP3 DUP6 ADD PUSH2 0x1682 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x16D9 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x16E6 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x16F3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1700 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x10D7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1713 DUP2 DUP5 DUP7 PUSH2 0x15D2 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172B DUP3 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1736 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x174E JUMPI PUSH2 0x174D PUSH2 0x131B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xED 0xA6 LOG4 SELFBALANCE 0xB3 DUP6 SELFBALANCE 0xB4 0xCB LOG2 RETURNDATACOPY 0xDC PUSH4 0xD1A613C8 0x5E DUP9 0x5C ISZERO 0xA5 0x2A 0xBD 0xE7 0xAF SWAP15 INVALID 0xD1 DIV PUSH18 0x64736F6C6343000811003300000000000000 ","sourceMap":"699:2028:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2497:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;800:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1631:434;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;734:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;690:20:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;885:27:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;852;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;773:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;918:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1312:161:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2071:420:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1391:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2497:228;2551:19;1337:6;1328:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1320:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2589:14:::1;2639:12;;2621:11;:15;2633:2;2621:15;;;;;;;;;;;;;;;;2606:12;;:30;;;;:::i;:::-;:45;;;;:::i;:::-;2589:62;;2661:7;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;;2700:4;2707:2;2711:6;2661:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2572:153;2497:228:::0;;:::o;800:46::-;;;;;;;;;;;;;;;;;:::o;1631:434::-;1738:18;1337:6;1328:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1320:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;778:5:24::1;::::0;::::1;;;;;;;;764:19;;:10;:19;;;756:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1821:16:3::2;1840:7;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;;1876:4;1840:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1821:61;;1892:16;1911:7;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;;1947:4;1911:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1892:61;;1963:7;:15;;;1979:6;1987;;1995:8;2005;2015:6;;1963:59;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2040:18;2032:5;;:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1768:297;;1631:434:::0;;;;:::o;734:33::-;;;:::o;690:20:24:-;;;;;;;;;;;;:::o;885:27:3:-;;;;:::o;852:::-;;;;:::o;773:21::-;;;;:::o;918:23::-;;;;;;;;;;;;;:::o;1312:161:24:-;778:5;;;;;;;;;;764:19;;:10;:19;;;756:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1400:8:::1;1392:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;1457:8;1424:42;;1445:10;1424:42;;;;;;;;;;;;1312:161:::0;:::o;2071:420:3:-;2239:18;1337:6;1328:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1320:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;778:5:24::1;::::0;::::1;;;;;;;;764:19;;:10;:19;;;756:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2279:7:3::2;:16;;;2296:10;2308:9;2319;2338:4;2345:6;;2279:73;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2405:7;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;;2441:4;2405:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:12;:57;;;;2465:19;2457:5;;:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2071:420:::0;;;;;;:::o;1391:234::-;1448:18;1337:6;1328:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1320:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1478:7:::1;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;;1509:10;1529:4;1536:6;1478:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1580:6;1553:11;:23;1565:10;1553:23;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;1612:6;1596:12;;:22;;;;;;;:::i;:::-;;;;;;;;1391:234:::0;;:::o;88:117:26:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:77::-;1648:7;1677:5;1666:16;;1611:77;;;:::o;1694:122::-;1767:24;1785:5;1767:24;:::i;:::-;1760:5;1757:35;1747:63;;1806:1;1803;1796:12;1747:63;1694:122;:::o;1822:139::-;1868:5;1906:6;1893:20;1884:29;;1922:33;1949:5;1922:33;:::i;:::-;1822:139;;;;:::o;1967:117::-;2076:1;2073;2066:12;2090:117;2199:1;2196;2189:12;2213:117;2322:1;2319;2312:12;2349:552;2406:8;2416:6;2466:3;2459:4;2451:6;2447:17;2443:27;2433:122;;2474:79;;:::i;:::-;2433:122;2587:6;2574:20;2564:30;;2617:18;2609:6;2606:30;2603:117;;;2639:79;;:::i;:::-;2603:117;2753:4;2745:6;2741:17;2729:29;;2807:3;2799:4;2791:6;2787:17;2777:8;2773:32;2770:41;2767:128;;;2814:79;;:::i;:::-;2767:128;2349:552;;;;;:::o;2907:672::-;2986:6;2994;3002;3051:2;3039:9;3030:7;3026:23;3022:32;3019:119;;;3057:79;;:::i;:::-;3019:119;3177:1;3202:53;3247:7;3238:6;3227:9;3223:22;3202:53;:::i;:::-;3192:63;;3148:117;3332:2;3321:9;3317:18;3304:32;3363:18;3355:6;3352:30;3349:117;;;3385:79;;:::i;:::-;3349:117;3498:64;3554:7;3545:6;3534:9;3530:22;3498:64;:::i;:::-;3480:82;;;;3275:297;2907:672;;;;;:::o;3585:60::-;3613:3;3634:5;3627:12;;3585:60;;;:::o;3651:142::-;3701:9;3734:53;3752:34;3761:24;3779:5;3761:24;:::i;:::-;3752:34;:::i;:::-;3734:53;:::i;:::-;3721:66;;3651:142;;;:::o;3799:126::-;3849:9;3882:37;3913:5;3882:37;:::i;:::-;3869:50;;3799:126;;;:::o;3931:143::-;3998:9;4031:37;4062:5;4031:37;:::i;:::-;4018:50;;3931:143;;;:::o;4080:165::-;4184:54;4232:5;4184:54;:::i;:::-;4179:3;4172:67;4080:165;;:::o;4251:256::-;4361:4;4399:2;4388:9;4384:18;4376:26;;4412:88;4497:1;4486:9;4482:17;4473:6;4412:88;:::i;:::-;4251:256;;;;:::o;4513:118::-;4600:24;4618:5;4600:24;:::i;:::-;4595:3;4588:37;4513:118;;:::o;4637:222::-;4730:4;4768:2;4757:9;4753:18;4745:26;;4781:71;4849:1;4838:9;4834:17;4825:6;4781:71;:::i;:::-;4637:222;;;;:::o;4865:118::-;4952:24;4970:5;4952:24;:::i;:::-;4947:3;4940:37;4865:118;;:::o;4989:222::-;5082:4;5120:2;5109:9;5105:18;5097:26;;5133:71;5201:1;5190:9;5186:17;5177:6;5133:71;:::i;:::-;4989:222;;;;:::o;5217:180::-;5265:77;5262:1;5255:88;5362:4;5359:1;5352:15;5386:4;5383:1;5376:15;5403:120;5491:1;5484:5;5481:12;5471:46;;5497:18;;:::i;:::-;5471:46;5403:120;:::o;5529:141::-;5581:7;5610:5;5599:16;;5616:48;5658:5;5616:48;:::i;:::-;5529:141;;;:::o;5676:::-;5739:9;5772:39;5805:5;5772:39;:::i;:::-;5759:52;;5676:141;;;:::o;5823:157::-;5923:50;5967:5;5923:50;:::i;:::-;5918:3;5911:63;5823:157;;:::o;5986:248::-;6092:4;6130:2;6119:9;6115:18;6107:26;;6143:84;6224:1;6213:9;6209:17;6200:6;6143:84;:::i;:::-;5986:248;;;;:::o;6240:122::-;6313:24;6331:5;6313:24;:::i;:::-;6306:5;6303:35;6293:63;;6352:1;6349;6342:12;6293:63;6240:122;:::o;6368:139::-;6414:5;6452:6;6439:20;6430:29;;6468:33;6495:5;6468:33;:::i;:::-;6368:139;;;;:::o;6513:963::-;6610:6;6618;6626;6634;6642;6691:3;6679:9;6670:7;6666:23;6662:33;6659:120;;;6698:79;;:::i;:::-;6659:120;6818:1;6843:53;6888:7;6879:6;6868:9;6864:22;6843:53;:::i;:::-;6833:63;;6789:117;6945:2;6971:53;7016:7;7007:6;6996:9;6992:22;6971:53;:::i;:::-;6961:63;;6916:118;7073:2;7099:53;7144:7;7135:6;7124:9;7120:22;7099:53;:::i;:::-;7089:63;;7044:118;7229:2;7218:9;7214:18;7201:32;7260:18;7252:6;7249:30;7246:117;;;7282:79;;:::i;:::-;7246:117;7395:64;7451:7;7442:6;7431:9;7427:22;7395:64;:::i;:::-;7377:82;;;;7172:297;6513:963;;;;;;;;:::o;7482:329::-;7541:6;7590:2;7578:9;7569:7;7565:23;7561:32;7558:119;;;7596:79;;:::i;:::-;7558:119;7716:1;7741:53;7786:7;7777:6;7766:9;7762:22;7741:53;:::i;:::-;7731:63;;7687:117;7482:329;;;;:::o;7817:169::-;7901:11;7935:6;7930:3;7923:19;7975:4;7970:3;7966:14;7951:29;;7817:169;;;;:::o;7992:::-;8132:21;8128:1;8120:6;8116:14;8109:45;7992:169;:::o;8167:366::-;8309:3;8330:67;8394:2;8389:3;8330:67;:::i;:::-;8323:74;;8406:93;8495:3;8406:93;:::i;:::-;8524:2;8519:3;8515:12;8508:19;;8167:366;;;:::o;8539:419::-;8705:4;8743:2;8732:9;8728:18;8720:26;;8792:9;8786:4;8782:20;8778:1;8767:9;8763:17;8756:47;8820:131;8946:4;8820:131;:::i;:::-;8812:139;;8539:419;;;:::o;8964:180::-;9012:77;9009:1;9002:88;9109:4;9106:1;9099:15;9133:4;9130:1;9123:15;9150:410;9190:7;9213:20;9231:1;9213:20;:::i;:::-;9208:25;;9247:20;9265:1;9247:20;:::i;:::-;9242:25;;9302:1;9299;9295:9;9324:30;9342:11;9324:30;:::i;:::-;9313:41;;9503:1;9494:7;9490:15;9487:1;9484:22;9464:1;9457:9;9437:83;9414:139;;9533:18;;:::i;:::-;9414:139;9198:362;9150:410;;;;:::o;9566:180::-;9614:77;9611:1;9604:88;9711:4;9708:1;9701:15;9735:4;9732:1;9725:15;9752:185;9792:1;9809:20;9827:1;9809:20;:::i;:::-;9804:25;;9843:20;9861:1;9843:20;:::i;:::-;9838:25;;9882:1;9872:35;;9887:18;;:::i;:::-;9872:35;9929:1;9926;9922:9;9917:14;;9752:185;;;;:::o;9943:110::-;9994:7;10023:24;10041:5;10023:24;:::i;:::-;10012:35;;9943:110;;;:::o;10059:150::-;10146:38;10178:5;10146:38;:::i;:::-;10139:5;10136:49;10126:77;;10199:1;10196;10189:12;10126:77;10059:150;:::o;10215:171::-;10286:5;10317:6;10311:13;10302:22;;10333:47;10374:5;10333:47;:::i;:::-;10215:171;;;;:::o;10392:379::-;10476:6;10525:2;10513:9;10504:7;10500:23;10496:32;10493:119;;;10531:79;;:::i;:::-;10493:119;10651:1;10676:78;10746:7;10737:6;10726:9;10722:22;10676:78;:::i;:::-;10666:88;;10622:142;10392:379;;;;:::o;10777:442::-;10926:4;10964:2;10953:9;10949:18;10941:26;;10977:71;11045:1;11034:9;11030:17;11021:6;10977:71;:::i;:::-;11058:72;11126:2;11115:9;11111:18;11102:6;11058:72;:::i;:::-;11140;11208:2;11197:9;11193:18;11184:6;11140:72;:::i;:::-;10777:442;;;;;;:::o;11225:90::-;11259:7;11302:5;11295:13;11288:21;11277:32;;11225:90;;;:::o;11321:116::-;11391:21;11406:5;11391:21;:::i;:::-;11384:5;11381:32;11371:60;;11427:1;11424;11417:12;11371:60;11321:116;:::o;11443:137::-;11497:5;11528:6;11522:13;11513:22;;11544:30;11568:5;11544:30;:::i;:::-;11443:137;;;;:::o;11586:345::-;11653:6;11702:2;11690:9;11681:7;11677:23;11673:32;11670:119;;;11708:79;;:::i;:::-;11670:119;11828:1;11853:61;11906:7;11897:6;11886:9;11882:22;11853:61;:::i;:::-;11843:71;;11799:125;11586:345;;;;:::o;11937:162::-;12077:14;12073:1;12065:6;12061:14;12054:38;11937:162;:::o;12105:366::-;12247:3;12268:67;12332:2;12327:3;12268:67;:::i;:::-;12261:74;;12344:93;12433:3;12344:93;:::i;:::-;12462:2;12457:3;12453:12;12446:19;;12105:366;;;:::o;12477:419::-;12643:4;12681:2;12670:9;12666:18;12658:26;;12730:9;12724:4;12720:20;12716:1;12705:9;12701:17;12694:47;12758:131;12884:4;12758:131;:::i;:::-;12750:139;;12477:419;;;:::o;12902:143::-;12959:5;12990:6;12984:13;12975:22;;13006:33;13033:5;13006:33;:::i;:::-;12902:143;;;;:::o;13051:351::-;13121:6;13170:2;13158:9;13149:7;13145:23;13141:32;13138:119;;;13176:79;;:::i;:::-;13138:119;13296:1;13321:64;13377:7;13368:6;13357:9;13353:22;13321:64;:::i;:::-;13311:74;;13267:128;13051:351;;;;:::o;13408:168::-;13491:11;13525:6;13520:3;13513:19;13565:4;13560:3;13556:14;13541:29;;13408:168;;;;:::o;13582:146::-;13679:6;13674:3;13669;13656:30;13720:1;13711:6;13706:3;13702:16;13695:27;13582:146;;;:::o;13734:102::-;13775:6;13826:2;13822:7;13817:2;13810:5;13806:14;13802:28;13792:38;;13734:102;;;:::o;13864:314::-;13960:3;13981:70;14044:6;14039:3;13981:70;:::i;:::-;13974:77;;14061:56;14110:6;14105:3;14098:5;14061:56;:::i;:::-;14142:29;14164:6;14142:29;:::i;:::-;14137:3;14133:39;14126:46;;13864:314;;;;;:::o;14184:771::-;14417:4;14455:3;14444:9;14440:19;14432:27;;14469:71;14537:1;14526:9;14522:17;14513:6;14469:71;:::i;:::-;14550:72;14618:2;14607:9;14603:18;14594:6;14550:72;:::i;:::-;14632;14700:2;14689:9;14685:18;14676:6;14632:72;:::i;:::-;14714;14782:2;14771:9;14767:18;14758:6;14714:72;:::i;:::-;14834:9;14828:4;14824:20;14818:3;14807:9;14803:19;14796:49;14862:86;14943:4;14934:6;14926;14862:86;:::i;:::-;14854:94;;14184:771;;;;;;;;;:::o;14961:93::-;14997:7;15037:10;15030:5;15026:22;15015:33;;14961:93;;;:::o;15060:120::-;15132:23;15149:5;15132:23;:::i;:::-;15125:5;15122:34;15112:62;;15170:1;15167;15160:12;15112:62;15060:120;:::o;15186:141::-;15242:5;15273:6;15267:13;15258:22;;15289:32;15315:5;15289:32;:::i;:::-;15186:141;;;;:::o;15333:349::-;15402:6;15451:2;15439:9;15430:7;15426:23;15422:32;15419:119;;;15457:79;;:::i;:::-;15419:119;15577:1;15602:63;15657:7;15648:6;15637:9;15633:22;15602:63;:::i;:::-;15592:73;;15548:127;15333:349;;;;:::o;15688:771::-;15921:4;15959:3;15948:9;15944:19;15936:27;;15973:71;16041:1;16030:9;16026:17;16017:6;15973:71;:::i;:::-;16054:72;16122:2;16111:9;16107:18;16098:6;16054:72;:::i;:::-;16136;16204:2;16193:9;16189:18;16180:6;16136:72;:::i;:::-;16218;16286:2;16275:9;16271:18;16262:6;16218:72;:::i;:::-;16338:9;16332:4;16328:20;16322:3;16311:9;16307:19;16300:49;16366:86;16447:4;16438:6;16430;16366:86;:::i;:::-;16358:94;;15688:771;;;;;;;;;:::o;16465:191::-;16505:3;16524:20;16542:1;16524:20;:::i;:::-;16519:25;;16558:20;16576:1;16558:20;:::i;:::-;16553:25;;16601:1;16598;16594:9;16587:16;;16622:3;16619:1;16616:10;16613:36;;;16629:18;;:::i;:::-;16613:36;16465:191;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1205200","executionCost":"infinite","totalCost":"infinite"},"external":{"afterBalance()":"2540","cModel()":"2451","depositToRelayer(bytes32,bytes)":"infinite","owner()":"2600","relayer()":"infinite","state()":"2604","totalWeights()":"2429","transferOwnership(address)":"28499","userDeposit(uint256)":"infinite","userWeights(address)":"2837","userWithdraw(address)":"infinite","withdrawFromRelayer(bytes32,uint256,uint256,bytes)":"infinite"}},"methodIdentifiers":{"afterBalance()":"91daa902","cModel()":"b2b4e62f","depositToRelayer(bytes32,bytes)":"72a7fa5b","owner()":"8da5cb5b","relayer()":"8406c079","state()":"c19d93fb","totalWeights()":"926323d5","transferOwnership(address)":"f2fde38b","userDeposit(uint256)":"f868e766","userWeights(address)":"556a6d8a","userWithdraw(address)":"0542631b","withdrawFromRelayer(bytes32,uint256,uint256,bytes)":"f4725af4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRelayer\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_cModel\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"afterBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cModel\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_cNode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"depositToRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayer\",\"outputs\":[{\"internalType\":\"contract IRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum VaultState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"userDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"userWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_balanceA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_balanceB\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"withdrawFromRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault.sol\":\"Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/Vault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\nimport {ERC20} from \\\"solmate/tokens/ERC20.sol\\\";\\nimport {Owned} from \\\"solmate/auth/Owned.sol\\\";\\n\\ninterface IRelayer {\\n    function deposit(\\n        bytes32 _cNode,\\n        bytes32 _cModel,\\n        uint256 _balanceA,\\n        uint256 _balanceB,\\n        bytes calldata _proof\\n    ) external returns (uint32);\\n\\n    function withdraw(\\n        bytes32 _nullifier,\\n        uint256 _balanceA,\\n        uint256 _balanceB,\\n        address _vault,\\n        bytes calldata _proof\\n    ) external;\\n\\n    function TOKEN_A() external returns (ERC20);\\n    function TOKEN_B() external returns (ERC20);\\n}\\n\\nenum VaultState {\\n    DEPOSIT,\\n    WAITING,\\n    WITHDRAW\\n}\\n\\ncontract Vault is Owned {\\n    \\n    IRelayer immutable public relayer;\\n    bytes32 public cModel;\\n    mapping(address => uint256) public userWeights;\\n    uint256 public totalWeights;\\n    uint256 public afterBalance;\\n    VaultState public state;\\n\\n    constructor(\\n        IRelayer _relayer,\\n        address _trader,\\n        bytes32 _cModel\\n    ) Owned(_trader) {\\n        relayer = _relayer;\\n        cModel = _cModel;\\n        relayer.TOKEN_A().approve(address(relayer), type(uint256).max);\\n        relayer.TOKEN_B().approve(address(relayer), type(uint256).max);\\n    }\\n\\n    modifier requireState(VaultState _state) {\\n        require(state == _state, \\\"Invalid Vault state\\\");\\n        _;\\n    }\\n\\n    function userDeposit(uint256 amount) public requireState(VaultState.DEPOSIT) {\\n        relayer.TOKEN_A().transferFrom(msg.sender, address(this), amount);\\n        userWeights[msg.sender] += amount;\\n        totalWeights += amount;\\n    }\\n\\n    function depositToRelayer(\\n        bytes32 _cNode,\\n        bytes calldata _proof\\n    ) public requireState(VaultState.DEPOSIT) onlyOwner {\\n        // TODO swap A to B and make 50 50\\n        uint256 balanceA = relayer.TOKEN_A().balanceOf(address(this));\\n        uint256 balanceB = relayer.TOKEN_B().balanceOf(address(this));\\n        relayer.deposit(_cNode, cModel, balanceA, balanceB, _proof);\\n        state = VaultState.WAITING;\\n    }\\n\\n    function withdrawFromRelayer(\\n        bytes32 _nullifier,\\n        uint256 _balanceA,\\n        uint256 _balanceB,\\n        bytes calldata _proof\\n    ) public requireState(VaultState.WAITING) onlyOwner {\\n        relayer.withdraw(_nullifier, _balanceA, _balanceB, address(this), _proof);\\n        // TODO swap B to A\\n        afterBalance = relayer.TOKEN_A().balanceOf(address(this));\\n        state = VaultState.WITHDRAW;\\n    }\\n\\n    function userWithdraw(address to) public requireState(VaultState.WITHDRAW) {       \\n        uint256 amount = afterBalance * userWeights[to] / totalWeights;\\n        relayer.TOKEN_A().transferFrom(address(this), to, amount);\\n    }\\n}\",\"keccak256\":\"0xfc379b25c765e6687a7b5c0c357542e2789e0512c95e670516f74128334ecaac\",\"license\":\"MIT\"},\"lib/solmate/src/auth/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Simple single owner authorization mixin.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)\\nabstract contract Owned {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            OWNERSHIP STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    address public owner;\\n\\n    modifier onlyOwner() virtual {\\n        require(msg.sender == owner, \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(address _owner) {\\n        owner = _owner;\\n\\n        emit OwnershipTransferred(address(0), _owner);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             OWNERSHIP LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\"},\"lib/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3949,"contract":"contracts/Vault.sol:Vault","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":1215,"contract":"contracts/Vault.sol:Vault","label":"cModel","offset":0,"slot":"1","type":"t_bytes32"},{"astId":1219,"contract":"contracts/Vault.sol:Vault","label":"userWeights","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":1221,"contract":"contracts/Vault.sol:Vault","label":"totalWeights","offset":0,"slot":"3","type":"t_uint256"},{"astId":1223,"contract":"contracts/Vault.sol:Vault","label":"afterBalance","offset":0,"slot":"4","type":"t_uint256"},{"astId":1226,"contract":"contracts/Vault.sol:Vault","label":"state","offset":0,"slot":"5","type":"t_enum(VaultState)1208"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_enum(VaultState)1208":{"encoding":"inplace","label":"enum VaultState","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/I1nchRouter.sol":{"IAggregationExecutor":{"abi":[{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"name":"execute","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute(address)":"4b64e492"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(address)\":{\"notice\":\"propagates information about original msg.sender and executes arbitrary data \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/I1nchRouter.sol\":\"IAggregationExecutor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/interfaces/I1nchRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport {SafeERC20} from \\\"../libraries/SafeERC20.sol\\\";\\nimport {UniERC20, IERC20} from \\\"../libraries/UniERC20.sol\\\";\\n\\n\\ninterface IAggregationExecutor { \\n    /// @notice propagates information about original msg.sender and executes arbitrary data \\n    function execute(address msgSender) external payable;  // 0x4b64e492 \\n}\\n\\ninterface IGenericRouter {\\n\\n    struct SwapDescription {\\n        IERC20 srcToken;\\n        IERC20 dstToken;\\n        address payable srcReceiver;\\n        address payable dstReceiver;\\n        uint256 amount;\\n        uint256 minReturnAmount;\\n        uint256 flags;\\n    }\\n    \\n    function swap(\\n        IAggregationExecutor executor,\\n        SwapDescription calldata desc,\\n        bytes calldata permit,\\n        bytes calldata data\\n    ) external payable returns (uint256 returnAmountm, uint256 spentAmount);\\n}\",\"keccak256\":\"0x6d83bdc820b104800478ba19f1c5737f404e390f92d79947550d38ac37342e9a\",\"license\":\"MIT\"},\"contracts/interfaces/IDaiLikePermit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IDaiLikePermit {\\n    function permit(\\n        address holder,\\n        address spender,\\n        uint256 nonce,\\n        uint256 expiry,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbbb219886412a339a7f84b0850f700311dd2b3a106919ae54fa0a215d847a3b2\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20MetadataUppercase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC20MetadataUppercase {\\n    function NAME() external view returns (string memory); // solhint-disable-line func-name-mixedcase\\n\\n    function SYMBOL() external view returns (string memory); // solhint-disable-line func-name-mixedcase\\n}\\n\",\"keccak256\":\"0x42e8625b32dfa9746df2b79c66deb1cb6f085d8292a0e19f60339ce9dd7e9803\",\"license\":\"MIT\"},\"contracts/interfaces/IPermit2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IPermit2 {\\n    struct PermitDetails {\\n        // ERC20 token address\\n        address token;\\n        // the maximum amount allowed to spend\\n        uint160 amount;\\n        // timestamp at which a spender's token allowances become invalid\\n        uint48 expiration;\\n        // an incrementing value indexed per owner,token,and spender for each signature\\n        uint48 nonce;\\n    }\\n    /// @notice The permit message signed for a single token allownce\\n    struct PermitSingle {\\n        // the permit data for a single token alownce\\n        PermitDetails details;\\n        // address permissioned on the allowed tokens\\n        address spender;\\n        // deadline on the permit signature\\n        uint256 sigDeadline;\\n    }\\n    /// @notice Packed allowance\\n    struct PackedAllowance {\\n        // amount allowed\\n        uint160 amount;\\n        // permission expiry\\n        uint48 expiration;\\n        // an incrementing value indexed per owner,token,and spender for each signature\\n        uint48 nonce;\\n    }\\n\\n    function transferFrom(address user, address spender, uint160 amount, address token) external;\\n\\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\\n\\n    function allowance(address user, address token, address spender) external view returns (PackedAllowance memory);\\n}\\n\",\"keccak256\":\"0x63209a082f66ecb584b86e412b3dd0010e9675bc19bc1f80a75437311df7ec11\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    event Deposit(address indexed dst, uint wad);\\n\\n    event Withdrawal(address indexed src, uint wad);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xc8132cbe41b3dc902df69adbbdf230bbde79647c676d064c58bc6092de6077d5\",\"license\":\"MIT\"},\"contracts/libraries/RevertReasonForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Revert reason forwarder.\\nlibrary RevertReasonForwarder {\\n    /// @dev Forwards latest externall call revert.\\n    function reRevert() internal pure {\\n        // bubble up revert reason from latest external call\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n            returndatacopy(ptr, 0, returndatasize())\\n            revert(ptr, returndatasize())\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x953c4a195ae066e90aac2ccfcef3121e4c5b74f2cf7cb4add341a7df7df2d00e\",\"license\":\"MIT\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../interfaces/IDaiLikePermit.sol\\\";\\nimport \\\"../interfaces/IPermit2.sol\\\";\\nimport \\\"../interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/RevertReasonForwarder.sol\\\";\\n\\n/**\\n * @title Implements efficient safe methods for ERC20 interface.\\n * @notice Compared to the standard ERC20, this implementation offers several enhancements:\\n * 1. more gas-efficient, providing significant savings in transaction costs.\\n * 2. support for different permit implementations\\n * 3. forceApprove functionality\\n * 4. support for WETH deposit and withdraw\\n */\\nlibrary SafeERC20 {\\n    error SafeTransferFailed();\\n    error SafeTransferFromFailed();\\n    error ForceApproveFailed();\\n    error SafeIncreaseAllowanceFailed();\\n    error SafeDecreaseAllowanceFailed();\\n    error SafePermitBadLength();\\n    error Permit2TransferAmountTooHigh();\\n\\n    // Uniswap Permit2 address\\n    address private constant _PERMIT2 = 0x000000000022D473030F116dDEE9F6B43aC78BA3;\\n    bytes4 private constant _PERMIT_LENGTH_ERROR = 0x68275857;  // SafePermitBadLength.selector\\n    uint256 private constant _RAW_CALL_GAS_LIMIT = 5000;\\n\\n    /**\\n     * @notice Fetches the balance of a specific ERC20 token held by an account.\\n     * Consumes less gas then regular `ERC20.balanceOf`.\\n     * @param token The IERC20 token contract for which the balance will be fetched.\\n     * @param account The address of the account whose token balance will be fetched.\\n     * @return tokenBalance The balance of the specified ERC20 token held by the account.\\n     */\\n    function safeBalanceOf(\\n        IERC20 token,\\n        address account\\n    ) internal view returns(uint256 tokenBalance) {\\n        bytes4 selector = IERC20.balanceOf.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            mstore(0x00, selector)\\n            mstore(0x04, account)\\n            let success := staticcall(gas(), token, 0x00, 0x24, 0x00, 0x20)\\n            tokenBalance := mload(0)\\n\\n            if or(iszero(success), lt(returndatasize(), 0x20)) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another.\\n     * @dev If permit2 is true, uses the Permit2 standard; otherwise uses the standard ERC20 transferFrom. \\n     * Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     * @param permit2 If true, uses the Permit2 standard for the transfer; otherwise uses the standard ERC20 transferFrom.\\n     */\\n    function safeTransferFromUniversal(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bool permit2\\n    ) internal {\\n        if (permit2) {\\n            safeTransferFromPermit2(token, from, to, amount);\\n        } else {\\n            safeTransferFrom(token, from, to, amount);\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another using the ERC20 standard.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bytes4 selector = token.transferFrom.selector;\\n        bool success;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), from)\\n            mstore(add(data, 0x24), to)\\n            mstore(add(data, 0x44), amount)\\n            success := call(gas(), token, 0, data, 100, 0x0, 0x20)\\n            if success {\\n                switch returndatasize()\\n                case 0 {\\n                    success := gt(extcodesize(token), 0)\\n                }\\n                default {\\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\\n                }\\n            }\\n        }\\n        if (!success) revert SafeTransferFromFailed();\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another using the Permit2 standard.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFromPermit2(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        if (amount > type(uint160).max) revert Permit2TransferAmountTooHigh();\\n        bytes4 selector = IPermit2.transferFrom.selector;\\n        bool success;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), from)\\n            mstore(add(data, 0x24), to)\\n            mstore(add(data, 0x44), amount)\\n            mstore(add(data, 0x64), token)\\n            success := call(gas(), _PERMIT2, 0, data, 0x84, 0x0, 0x0)\\n            if success {\\n                success := gt(extcodesize(_PERMIT2), 0)\\n            }\\n        }\\n        if (!success) revert SafeTransferFromFailed();\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens to another address.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param value The amount of tokens to transfer.\\n     */\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        if (!_makeCall(token, token.transfer.selector, to, value)) {\\n            revert SafeTransferFailed();\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to approve a spender to spend a certain amount of tokens.\\n     * @dev If `approve(from, to, amount)` fails, it tries to set the allowance to zero, and retries the `approve` call.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function forceApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        if (!_makeCall(token, token.approve.selector, spender, value)) {\\n            if (\\n                !_makeCall(token, token.approve.selector, spender, 0) ||\\n                !_makeCall(token, token.approve.selector, spender, value)\\n            ) {\\n                revert ForceApproveFailed();\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely increases the allowance of a spender.\\n     * @dev Increases with safe math check. Checks if the increased allowance will overflow, if yes, then it reverts the transaction.\\n     * Then uses `forceApprove` to increase the allowance.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to increase the allowance by.\\n     */\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 allowance = token.allowance(address(this), spender);\\n        if (value > type(uint256).max - allowance) revert SafeIncreaseAllowanceFailed();\\n        forceApprove(token, spender, allowance + value);\\n    }\\n\\n    /**\\n     * @notice Safely decreases the allowance of a spender.\\n     * @dev Decreases with safe math check. Checks if the decreased allowance will underflow, if yes, then it reverts the transaction.\\n     * Then uses `forceApprove` to increase the allowance.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to decrease the allowance by.\\n     */\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 allowance = token.allowance(address(this), spender);\\n        if (value > allowance) revert SafeDecreaseAllowanceFailed();\\n        forceApprove(token, spender, allowance - value);\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\\n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param permit The permit data to be used in the function call.\\n     */\\n    function safePermit(IERC20 token, bytes calldata permit) internal {\\n        if (!tryPermit(token, msg.sender, address(this), permit)) RevertReasonForwarder.reRevert();\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with custom owner and spender parameters. \\n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param owner The owner of the tokens for which the permit is made.\\n     * @param spender The spender allowed to spend the tokens by the permit.\\n     * @param permit The permit data to be used in the function call.\\n     */\\n    function safePermit(IERC20 token, address owner, address spender, bytes calldata permit) internal {\\n        if (!tryPermit(token, owner, spender, permit)) RevertReasonForwarder.reRevert();\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\\n     * @dev Invokes `tryPermit` with sender as owner and contract as spender.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param permit The permit data to be used in the function call.\\n     * @return success Returns true if the permit function was successfully executed, false otherwise.\\n     */\\n    function tryPermit(IERC20 token, bytes calldata permit) internal returns(bool success) {\\n        return tryPermit(token, msg.sender, address(this), permit);\\n    }\\n\\n    /**\\n     * @notice The function attempts to call the permit function on a given ERC20 token.\\n     * @dev The function is designed to support a variety of permit functions, namely: IERC20Permit, IDaiLikePermit, and IPermit2.\\n     * It accommodates both Compact and Full formats of these permit types.\\n     * Please note, it is expected that the `expiration` parameter for the compact Permit2 and the `deadline` parameter \\n     * for the compact Permit are to be incremented by one before invoking this function. This approach is motivated by\\n     * gas efficiency considerations; as the unlimited expiration period is likely to be the most common scenario, and \\n     * zeros are cheaper to pass in terms of gas cost. Thus, callers should increment the expiration or deadline by one\\n     * before invocation for optimized performance.\\n     * @param token The address of the ERC20 token on which to call the permit function.\\n     * @param owner The owner of the tokens. This address should have signed the off-chain permit.\\n     * @param spender The address which will be approved for transfer of tokens.\\n     * @param permit The off-chain permit data, containing different fields depending on the type of permit function.\\n     * @return success A boolean indicating whether the permit call was successful.\\n     */\\n    function tryPermit(IERC20 token, address owner, address spender, bytes calldata permit) internal returns(bool success) {\\n        // load function selectors for different permit standards\\n        bytes4 permitSelector = IERC20Permit.permit.selector;\\n        bytes4 daiPermitSelector = IDaiLikePermit.permit.selector;\\n        bytes4 permit2Selector = IPermit2.permit.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n\\n            // Switch case for different permit lengths, indicating different permit standards\\n            switch permit.length\\n            // Compact IERC20Permit\\n            case 100 {\\n                mstore(ptr, permitSelector)     // store selector\\n                mstore(add(ptr, 0x04), owner)   // store owner\\n                mstore(add(ptr, 0x24), spender) // store spender\\n\\n                // Compact IERC20Permit.permit(uint256 value, uint32 deadline, uint256 r, uint256 vs)\\n                {  // stack too deep\\n                    let deadline := shr(224, calldataload(add(permit.offset, 0x20))) // loads permit.offset 0x20..0x23\\n                    let vs := calldataload(add(permit.offset, 0x44))                 // loads permit.offset 0x44..0x63\\n\\n                    calldatacopy(add(ptr, 0x44), permit.offset, 0x20)            // store value     = copy permit.offset 0x00..0x19\\n                    mstore(add(ptr, 0x64), sub(deadline, 1))                     // store deadline  = deadline - 1\\n                    mstore(add(ptr, 0x84), add(27, shr(255, vs)))                // store v         = most significant bit of vs + 27 (27 or 28)\\n                    calldatacopy(add(ptr, 0xa4), add(permit.offset, 0x24), 0x20) // store r         = copy permit.offset 0x24..0x43\\n                    mstore(add(ptr, 0xc4), shr(1, shl(1, vs)))                   // store s         = vs without most significant bit\\n                }\\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\\n            }\\n            // Compact IDaiLikePermit\\n            case 72 {\\n                mstore(ptr, daiPermitSelector)  // store selector\\n                mstore(add(ptr, 0x04), owner)   // store owner\\n                mstore(add(ptr, 0x24), spender) // store spender\\n\\n                // Compact IDaiLikePermit.permit(uint32 nonce, uint32 expiry, uint256 r, uint256 vs)\\n                {  // stack too deep\\n                    let expiry := shr(224, calldataload(add(permit.offset, 0x04))) // loads permit.offset 0x04..0x07\\n                    let vs := calldataload(add(permit.offset, 0x28))               // loads permit.offset 0x28..0x47\\n\\n                    mstore(add(ptr, 0x44), shr(224, calldataload(permit.offset))) // store nonce   = copy permit.offset 0x00..0x03\\n                    mstore(add(ptr, 0x64), sub(expiry, 1))                        // store expiry  = expiry - 1\\n                    mstore(add(ptr, 0x84), true)                                  // store allowed = true\\n                    mstore(add(ptr, 0xa4), add(27, shr(255, vs)))                 // store v       = most significant bit of vs + 27 (27 or 28)\\n                    calldatacopy(add(ptr, 0xc4), add(permit.offset, 0x08), 0x20)  // store r       = copy permit.offset 0x08..0x27\\n                    mstore(add(ptr, 0xe4), shr(1, shl(1, vs)))                    // store s       = vs without most significant bit\\n                }\\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\\n            }\\n            // IERC20Permit\\n            case 224 {\\n                mstore(ptr, permitSelector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\\n            }\\n            // IDaiLikePermit\\n            case 256 {\\n                mstore(ptr, daiPermitSelector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\\n            }\\n            // Compact IPermit2\\n            case 96 {\\n                // Compact IPermit2.permit(uint160 amount, uint32 expiration, uint32 nonce, uint32 sigDeadline, uint256 r, uint256 vs)\\n                mstore(ptr, permit2Selector)  // store selector\\n                mstore(add(ptr, 0x04), owner) // store owner\\n                mstore(add(ptr, 0x24), token) // store token\\n\\n                calldatacopy(add(ptr, 0x50), permit.offset, 0x14)             // store amount = copy permit.offset 0x00..0x13\\n                // and(0xffffffffffff, ...) - conversion to uint48 \\n                mstore(add(ptr, 0x64), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x14))), 1))) // store expiration = ((permit.offset 0x14..0x17 - 1) & 0xffffffffffff)\\n                mstore(add(ptr, 0x84), shr(224, calldataload(add(permit.offset, 0x18)))) // store nonce = copy permit.offset 0x18..0x1b\\n                mstore(add(ptr, 0xa4), spender)                               // store spender\\n                // and(0xffffffffffff, ...) - conversion to uint48\\n                mstore(add(ptr, 0xc4), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x1c))), 1))) // store sigDeadline = ((permit.offset 0x1c..0x1f - 1) & 0xffffffffffff)\\n                mstore(add(ptr, 0xe4), 0x100)                                 // store offset = 256\\n                mstore(add(ptr, 0x104), 0x40)                                 // store length = 64\\n                calldatacopy(add(ptr, 0x124), add(permit.offset, 0x20), 0x20) // store r      = copy permit.offset 0x20..0x3f\\n                calldatacopy(add(ptr, 0x144), add(permit.offset, 0x40), 0x20) // store vs     = copy permit.offset 0x40..0x5f\\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\\n            }\\n            // IPermit2\\n            case 352 {\\n                mstore(ptr, permit2Selector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\\n            }\\n            // Unknown\\n            default {\\n                mstore(ptr, _PERMIT_LENGTH_ERROR)\\n                revert(ptr, 4)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Executes a low level call to a token contract, making it resistant to reversion and erroneous boolean returns.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param selector The function signature that is to be called on the token contract.\\n     * @param to The address to which the token amount will be transferred.\\n     * @param amount The token amount to be transferred.\\n     * @return success A boolean indicating if the call was successful. Returns 'true' on success and 'false' on failure. \\n     * In case of success but no returned data, validates that the contract code exists.\\n     * In case of returned data, ensures that it's a boolean `true`.\\n     */\\n    function _makeCall(\\n        IERC20 token,\\n        bytes4 selector,\\n        address to,\\n        uint256 amount\\n    ) private returns (bool success) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), to)\\n            mstore(add(data, 0x24), amount)\\n            success := call(gas(), token, 0, data, 0x44, 0x0, 0x20)\\n            if success {\\n                switch returndatasize()\\n                case 0 {\\n                    success := gt(extcodesize(token), 0)\\n                }\\n                default {\\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely deposits a specified amount of Ether into the IWETH contract. Consumes less gas then regular `IWETH.deposit`.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of Ether to deposit into the IWETH contract.\\n     */\\n    function safeDeposit(IWETH weth, uint256 amount) internal {\\n        if (amount > 0) {\\n            bytes4 selector = IWETH.deposit.selector;\\n            assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                mstore(0, selector)\\n                if iszero(call(gas(), weth, amount, 0, 4, 0, 0)) {\\n                    returndatacopy(0, 0, returndatasize())\\n                    revert(0, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract. Consumes less gas then regular `IWETH.withdraw`.\\n     * @dev Uses inline assembly to interact with the IWETH contract.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\\n     */\\n    function safeWithdraw(IWETH weth, uint256 amount) internal {\\n        bytes4 selector = IWETH.withdraw.selector;\\n        assembly (\\\"memory-safe\\\") {  // solhint-disable-line no-inline-assembly\\n            mstore(0, selector)\\n            mstore(4, amount)\\n            if iszero(call(gas(), weth, 0, 0, 0x24, 0, 0)) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract to a specified recipient.\\n     * Consumes less gas then regular `IWETH.withdraw`.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\\n     * @param to The recipient of the withdrawn Ether.\\n     */\\n    function safeWithdrawTo(IWETH weth, uint256 amount, address to) internal {\\n        safeWithdraw(weth, amount);\\n        if (to != address(this)) {\\n            assembly (\\\"memory-safe\\\") {  // solhint-disable-line no-inline-assembly\\n                if iszero(call(_RAW_CALL_GAS_LIMIT, to, amount, 0, 0, 0, 0)) {\\n                    let ptr := mload(0x40)\\n                    returndatacopy(ptr, 0, returndatasize())\\n                    revert(ptr, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1c050d9eea8792471f3e92a8423c1900287452fe2cb8457208f8955e4ca556cc\",\"license\":\"MIT\"},\"contracts/libraries/StringUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Library with gas-efficient string operations\\nlibrary StringUtil {\\n    function toHex(uint256 value) internal pure returns (string memory) {\\n        return toHex(abi.encodePacked(value));\\n    }\\n\\n    function toHex(address value) internal pure returns (string memory) {\\n        return toHex(abi.encodePacked(value));\\n    }\\n\\n    /// @dev this is the assembly adaptation of highly optimized toHex16 code from Mikhail Vladimirov\\n    /// https://stackoverflow.com/a/69266989\\n    function toHex(bytes memory data) internal pure returns (string memory result) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            function _toHex16(input) -> output {\\n                output := or(\\n                    and(input, 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000),\\n                    shr(64, and(input, 0x0000000000000000FFFFFFFFFFFFFFFF00000000000000000000000000000000))\\n                )\\n                output := or(\\n                    and(output, 0xFFFFFFFF000000000000000000000000FFFFFFFF000000000000000000000000),\\n                    shr(32, and(output, 0x00000000FFFFFFFF000000000000000000000000FFFFFFFF0000000000000000))\\n                )\\n                output := or(\\n                    and(output, 0xFFFF000000000000FFFF000000000000FFFF000000000000FFFF000000000000),\\n                    shr(16, and(output, 0x0000FFFF000000000000FFFF000000000000FFFF000000000000FFFF00000000))\\n                )\\n                output := or(\\n                    and(output, 0xFF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000),\\n                    shr(8, and(output, 0x00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000))\\n                )\\n                output := or(\\n                    shr(4, and(output, 0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000)),\\n                    shr(8, and(output, 0x0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00))\\n                )\\n                output := add(\\n                    add(0x3030303030303030303030303030303030303030303030303030303030303030, output),\\n                    mul(\\n                        and(\\n                            shr(4, add(output, 0x0606060606060606060606060606060606060606060606060606060606060606)),\\n                            0x0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F\\n                        ),\\n                        7 // Change 7 to 39 for lower case output\\n                    )\\n                )\\n            }\\n\\n            result := mload(0x40)\\n            let length := mload(data)\\n            let resultLength := shl(1, length)\\n            let toPtr := add(result, 0x22) // 32 bytes for length + 2 bytes for '0x'\\n            mstore(0x40, add(toPtr, resultLength)) // move free memory pointer\\n            mstore(add(result, 2), 0x3078) // 0x3078 is right aligned so we write to `result + 2`\\n            // to store the last 2 bytes in the beginning of the string\\n            mstore(result, add(resultLength, 2)) // extra 2 bytes for '0x'\\n\\n            for {\\n                let fromPtr := add(data, 0x20)\\n                let endPtr := add(fromPtr, length)\\n            } lt(fromPtr, endPtr) {\\n                fromPtr := add(fromPtr, 0x20)\\n            } {\\n                let rawData := mload(fromPtr)\\n                let hexData := _toHex16(rawData)\\n                mstore(toPtr, hexData)\\n                toPtr := add(toPtr, 0x20)\\n                hexData := _toHex16(shl(128, rawData))\\n                mstore(toPtr, hexData)\\n                toPtr := add(toPtr, 0x20)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x47867f007afaefa24c40fe487b968f553f4551c941dfa53afe8cc29e1fb68f38\",\"license\":\"MIT\"},\"contracts/libraries/UniERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../interfaces/IERC20MetadataUppercase.sol\\\";\\nimport \\\"./SafeERC20.sol\\\";\\nimport \\\"./StringUtil.sol\\\";\\n\\n/// @title Library, which allows usage of ETH as ERC20 and ERC20 itself. Uses SafeERC20 library for ERC20 interface.\\nlibrary UniERC20 {\\n    using SafeERC20 for IERC20;\\n\\n    error InsufficientBalance();\\n    error ApproveCalledOnETH();\\n    error NotEnoughValue();\\n    error FromIsNotSender();\\n    error ToIsNotThis();\\n    error ETHTransferFailed();\\n\\n    uint256 private constant _RAW_CALL_GAS_LIMIT = 5000;\\n    IERC20 private constant _ETH_ADDRESS = IERC20(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\\n    IERC20 private constant _ZERO_ADDRESS = IERC20(address(0));\\n\\n    /// @dev Returns true if `token` is ETH.\\n    function isETH(IERC20 token) internal pure returns (bool) {\\n        return (token == _ZERO_ADDRESS || token == _ETH_ADDRESS);\\n    }\\n\\n    /// @dev Returns `account` ERC20 `token` balance.\\n    function uniBalanceOf(IERC20 token, address account) internal view returns (uint256) {\\n        if (isETH(token)) {\\n            return account.balance;\\n        } else {\\n            return token.balanceOf(account);\\n        }\\n    }\\n\\n    /// @dev `token` transfer `to` `amount`.\\n    /// Note that this function does nothing in case of zero amount.\\n    function uniTransfer(\\n        IERC20 token,\\n        address payable to,\\n        uint256 amount\\n    ) internal {\\n        if (amount > 0) {\\n            if (isETH(token)) {\\n                if (address(this).balance < amount) revert InsufficientBalance();\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = to.call{value: amount, gas: _RAW_CALL_GAS_LIMIT}(\\\"\\\");\\n                if (!success) revert ETHTransferFailed();\\n            } else {\\n                token.safeTransfer(to, amount);\\n            }\\n        }\\n    }\\n\\n    /// @dev `token` transfer `from` `to` `amount`.\\n    /// Note that this function does nothing in case of zero amount.\\n    function uniTransferFrom(\\n        IERC20 token,\\n        address payable from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        if (amount > 0) {\\n            if (isETH(token)) {\\n                if (msg.value < amount) revert NotEnoughValue();\\n                if (from != msg.sender) revert FromIsNotSender();\\n                if (to != address(this)) revert ToIsNotThis();\\n                if (msg.value > amount) {\\n                    // Return remainder if exist\\n                    unchecked {\\n                        // solhint-disable-next-line avoid-low-level-calls\\n                        (bool success, ) = from.call{value: msg.value - amount, gas: _RAW_CALL_GAS_LIMIT}(\\\"\\\");\\n                        if (!success) revert ETHTransferFailed();\\n                    }\\n                }\\n            } else {\\n                token.safeTransferFrom(from, to, amount);\\n            }\\n        }\\n    }\\n\\n    /// @dev Returns `token` symbol from ERC20 metadata.\\n    function uniSymbol(IERC20 token) internal view returns (string memory) {\\n        return _uniDecode(token, IERC20Metadata.symbol.selector, IERC20MetadataUppercase.SYMBOL.selector);\\n    }\\n\\n    /// @dev Returns `token` name from ERC20 metadata.\\n    function uniName(IERC20 token) internal view returns (string memory) {\\n        return _uniDecode(token, IERC20Metadata.name.selector, IERC20MetadataUppercase.NAME.selector);\\n    }\\n\\n    /// @dev Reverts if `token` is ETH, otherwise performs ERC20 forceApprove.\\n    function uniApprove(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        if (isETH(token)) revert ApproveCalledOnETH();\\n\\n        token.forceApprove(to, amount);\\n    }\\n\\n    /// @dev 20K gas is provided to account for possible implementations of name/symbol\\n    /// (token implementation might be behind proxy or store the value in storage)\\n    function _uniDecode(\\n        IERC20 token,\\n        bytes4 lowerCaseSelector,\\n        bytes4 upperCaseSelector\\n    ) private view returns (string memory result) {\\n        if (isETH(token)) {\\n            return \\\"ETH\\\";\\n        }\\n\\n        (bool success, bytes memory data) = address(token).staticcall{gas: 20000}(\\n            abi.encodeWithSelector(lowerCaseSelector)\\n        );\\n        if (!success) {\\n            (success, data) = address(token).staticcall{gas: 20000}(abi.encodeWithSelector(upperCaseSelector));\\n        }\\n\\n        if (success && data.length >= 0x40) {\\n            (uint256 offset, uint256 len) = abi.decode(data, (uint256, uint256));\\n            /*\\n                return data is padded up to 32 bytes with ABI encoder also sometimes\\n                there is extra 32 bytes of zeros padded in the end:\\n                https://github.com/ethereum/solidity/issues/10170\\n                because of that we can't check for equality and instead check\\n                that overall data length is greater or equal than string length + extra 64 bytes\\n            */\\n            if (offset == 0x20 && data.length >= 0x40 + len) {\\n                assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                    result := add(data, 0x40)\\n                }\\n                return result;\\n            }\\n        }\\n        if (success && data.length == 32) {\\n            uint256 len = 0;\\n            while (len < data.length && data[len] >= 0x20 && data[len] <= 0x7E) {\\n                unchecked {\\n                    len++;\\n                }\\n            }\\n\\n            if (len > 0) {\\n                assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                    mstore(data, len)\\n                }\\n                return string(data);\\n            }\\n        }\\n\\n        return StringUtil.toHex(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x17a81163027008404f1446b8db47970855cae660a18d1d0d908faaef641cc97b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// EIP-2612 is Final as of 2022-11-01. This file is deprecated.\\n\\nimport \\\"./IERC20Permit.sol\\\";\\n\",\"keccak256\":\"0xc7134e0f63b0adcee02bf4b15efb2d0d4b1c03ae0d127dc90d846da4cab23a76\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"execute(address)":{"notice":"propagates information about original msg.sender and executes arbitrary data "}},"version":1}},"IGenericRouter":{"abi":[{"inputs":[{"internalType":"contract IAggregationExecutor","name":"executor","type":"address"},{"components":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"contract IERC20","name":"dstToken","type":"address"},{"internalType":"address payable","name":"srcReceiver","type":"address"},{"internalType":"address payable","name":"dstReceiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minReturnAmount","type":"uint256"},{"internalType":"uint256","name":"flags","type":"uint256"}],"internalType":"struct IGenericRouter.SwapDescription","name":"desc","type":"tuple"},{"internalType":"bytes","name":"permit","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"uint256","name":"returnAmountm","type":"uint256"},{"internalType":"uint256","name":"spentAmount","type":"uint256"}],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"swap(address,(address,address,address,address,uint256,uint256,uint256),bytes,bytes)":"12aa3caf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IAggregationExecutor\",\"name\":\"executor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"srcReceiver\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"dstReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"}],\"internalType\":\"struct IGenericRouter.SwapDescription\",\"name\":\"desc\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmountm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spentAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/I1nchRouter.sol\":\"IGenericRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/interfaces/I1nchRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport {SafeERC20} from \\\"../libraries/SafeERC20.sol\\\";\\nimport {UniERC20, IERC20} from \\\"../libraries/UniERC20.sol\\\";\\n\\n\\ninterface IAggregationExecutor { \\n    /// @notice propagates information about original msg.sender and executes arbitrary data \\n    function execute(address msgSender) external payable;  // 0x4b64e492 \\n}\\n\\ninterface IGenericRouter {\\n\\n    struct SwapDescription {\\n        IERC20 srcToken;\\n        IERC20 dstToken;\\n        address payable srcReceiver;\\n        address payable dstReceiver;\\n        uint256 amount;\\n        uint256 minReturnAmount;\\n        uint256 flags;\\n    }\\n    \\n    function swap(\\n        IAggregationExecutor executor,\\n        SwapDescription calldata desc,\\n        bytes calldata permit,\\n        bytes calldata data\\n    ) external payable returns (uint256 returnAmountm, uint256 spentAmount);\\n}\",\"keccak256\":\"0x6d83bdc820b104800478ba19f1c5737f404e390f92d79947550d38ac37342e9a\",\"license\":\"MIT\"},\"contracts/interfaces/IDaiLikePermit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IDaiLikePermit {\\n    function permit(\\n        address holder,\\n        address spender,\\n        uint256 nonce,\\n        uint256 expiry,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbbb219886412a339a7f84b0850f700311dd2b3a106919ae54fa0a215d847a3b2\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20MetadataUppercase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC20MetadataUppercase {\\n    function NAME() external view returns (string memory); // solhint-disable-line func-name-mixedcase\\n\\n    function SYMBOL() external view returns (string memory); // solhint-disable-line func-name-mixedcase\\n}\\n\",\"keccak256\":\"0x42e8625b32dfa9746df2b79c66deb1cb6f085d8292a0e19f60339ce9dd7e9803\",\"license\":\"MIT\"},\"contracts/interfaces/IPermit2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IPermit2 {\\n    struct PermitDetails {\\n        // ERC20 token address\\n        address token;\\n        // the maximum amount allowed to spend\\n        uint160 amount;\\n        // timestamp at which a spender's token allowances become invalid\\n        uint48 expiration;\\n        // an incrementing value indexed per owner,token,and spender for each signature\\n        uint48 nonce;\\n    }\\n    /// @notice The permit message signed for a single token allownce\\n    struct PermitSingle {\\n        // the permit data for a single token alownce\\n        PermitDetails details;\\n        // address permissioned on the allowed tokens\\n        address spender;\\n        // deadline on the permit signature\\n        uint256 sigDeadline;\\n    }\\n    /// @notice Packed allowance\\n    struct PackedAllowance {\\n        // amount allowed\\n        uint160 amount;\\n        // permission expiry\\n        uint48 expiration;\\n        // an incrementing value indexed per owner,token,and spender for each signature\\n        uint48 nonce;\\n    }\\n\\n    function transferFrom(address user, address spender, uint160 amount, address token) external;\\n\\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\\n\\n    function allowance(address user, address token, address spender) external view returns (PackedAllowance memory);\\n}\\n\",\"keccak256\":\"0x63209a082f66ecb584b86e412b3dd0010e9675bc19bc1f80a75437311df7ec11\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    event Deposit(address indexed dst, uint wad);\\n\\n    event Withdrawal(address indexed src, uint wad);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xc8132cbe41b3dc902df69adbbdf230bbde79647c676d064c58bc6092de6077d5\",\"license\":\"MIT\"},\"contracts/libraries/RevertReasonForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Revert reason forwarder.\\nlibrary RevertReasonForwarder {\\n    /// @dev Forwards latest externall call revert.\\n    function reRevert() internal pure {\\n        // bubble up revert reason from latest external call\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n            returndatacopy(ptr, 0, returndatasize())\\n            revert(ptr, returndatasize())\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x953c4a195ae066e90aac2ccfcef3121e4c5b74f2cf7cb4add341a7df7df2d00e\",\"license\":\"MIT\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../interfaces/IDaiLikePermit.sol\\\";\\nimport \\\"../interfaces/IPermit2.sol\\\";\\nimport \\\"../interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/RevertReasonForwarder.sol\\\";\\n\\n/**\\n * @title Implements efficient safe methods for ERC20 interface.\\n * @notice Compared to the standard ERC20, this implementation offers several enhancements:\\n * 1. more gas-efficient, providing significant savings in transaction costs.\\n * 2. support for different permit implementations\\n * 3. forceApprove functionality\\n * 4. support for WETH deposit and withdraw\\n */\\nlibrary SafeERC20 {\\n    error SafeTransferFailed();\\n    error SafeTransferFromFailed();\\n    error ForceApproveFailed();\\n    error SafeIncreaseAllowanceFailed();\\n    error SafeDecreaseAllowanceFailed();\\n    error SafePermitBadLength();\\n    error Permit2TransferAmountTooHigh();\\n\\n    // Uniswap Permit2 address\\n    address private constant _PERMIT2 = 0x000000000022D473030F116dDEE9F6B43aC78BA3;\\n    bytes4 private constant _PERMIT_LENGTH_ERROR = 0x68275857;  // SafePermitBadLength.selector\\n    uint256 private constant _RAW_CALL_GAS_LIMIT = 5000;\\n\\n    /**\\n     * @notice Fetches the balance of a specific ERC20 token held by an account.\\n     * Consumes less gas then regular `ERC20.balanceOf`.\\n     * @param token The IERC20 token contract for which the balance will be fetched.\\n     * @param account The address of the account whose token balance will be fetched.\\n     * @return tokenBalance The balance of the specified ERC20 token held by the account.\\n     */\\n    function safeBalanceOf(\\n        IERC20 token,\\n        address account\\n    ) internal view returns(uint256 tokenBalance) {\\n        bytes4 selector = IERC20.balanceOf.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            mstore(0x00, selector)\\n            mstore(0x04, account)\\n            let success := staticcall(gas(), token, 0x00, 0x24, 0x00, 0x20)\\n            tokenBalance := mload(0)\\n\\n            if or(iszero(success), lt(returndatasize(), 0x20)) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another.\\n     * @dev If permit2 is true, uses the Permit2 standard; otherwise uses the standard ERC20 transferFrom. \\n     * Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     * @param permit2 If true, uses the Permit2 standard for the transfer; otherwise uses the standard ERC20 transferFrom.\\n     */\\n    function safeTransferFromUniversal(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bool permit2\\n    ) internal {\\n        if (permit2) {\\n            safeTransferFromPermit2(token, from, to, amount);\\n        } else {\\n            safeTransferFrom(token, from, to, amount);\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another using the ERC20 standard.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bytes4 selector = token.transferFrom.selector;\\n        bool success;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), from)\\n            mstore(add(data, 0x24), to)\\n            mstore(add(data, 0x44), amount)\\n            success := call(gas(), token, 0, data, 100, 0x0, 0x20)\\n            if success {\\n                switch returndatasize()\\n                case 0 {\\n                    success := gt(extcodesize(token), 0)\\n                }\\n                default {\\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\\n                }\\n            }\\n        }\\n        if (!success) revert SafeTransferFromFailed();\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another using the Permit2 standard.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFromPermit2(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        if (amount > type(uint160).max) revert Permit2TransferAmountTooHigh();\\n        bytes4 selector = IPermit2.transferFrom.selector;\\n        bool success;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), from)\\n            mstore(add(data, 0x24), to)\\n            mstore(add(data, 0x44), amount)\\n            mstore(add(data, 0x64), token)\\n            success := call(gas(), _PERMIT2, 0, data, 0x84, 0x0, 0x0)\\n            if success {\\n                success := gt(extcodesize(_PERMIT2), 0)\\n            }\\n        }\\n        if (!success) revert SafeTransferFromFailed();\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens to another address.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param value The amount of tokens to transfer.\\n     */\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        if (!_makeCall(token, token.transfer.selector, to, value)) {\\n            revert SafeTransferFailed();\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to approve a spender to spend a certain amount of tokens.\\n     * @dev If `approve(from, to, amount)` fails, it tries to set the allowance to zero, and retries the `approve` call.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function forceApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        if (!_makeCall(token, token.approve.selector, spender, value)) {\\n            if (\\n                !_makeCall(token, token.approve.selector, spender, 0) ||\\n                !_makeCall(token, token.approve.selector, spender, value)\\n            ) {\\n                revert ForceApproveFailed();\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely increases the allowance of a spender.\\n     * @dev Increases with safe math check. Checks if the increased allowance will overflow, if yes, then it reverts the transaction.\\n     * Then uses `forceApprove` to increase the allowance.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to increase the allowance by.\\n     */\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 allowance = token.allowance(address(this), spender);\\n        if (value > type(uint256).max - allowance) revert SafeIncreaseAllowanceFailed();\\n        forceApprove(token, spender, allowance + value);\\n    }\\n\\n    /**\\n     * @notice Safely decreases the allowance of a spender.\\n     * @dev Decreases with safe math check. Checks if the decreased allowance will underflow, if yes, then it reverts the transaction.\\n     * Then uses `forceApprove` to increase the allowance.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to decrease the allowance by.\\n     */\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 allowance = token.allowance(address(this), spender);\\n        if (value > allowance) revert SafeDecreaseAllowanceFailed();\\n        forceApprove(token, spender, allowance - value);\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\\n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param permit The permit data to be used in the function call.\\n     */\\n    function safePermit(IERC20 token, bytes calldata permit) internal {\\n        if (!tryPermit(token, msg.sender, address(this), permit)) RevertReasonForwarder.reRevert();\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with custom owner and spender parameters. \\n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param owner The owner of the tokens for which the permit is made.\\n     * @param spender The spender allowed to spend the tokens by the permit.\\n     * @param permit The permit data to be used in the function call.\\n     */\\n    function safePermit(IERC20 token, address owner, address spender, bytes calldata permit) internal {\\n        if (!tryPermit(token, owner, spender, permit)) RevertReasonForwarder.reRevert();\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\\n     * @dev Invokes `tryPermit` with sender as owner and contract as spender.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param permit The permit data to be used in the function call.\\n     * @return success Returns true if the permit function was successfully executed, false otherwise.\\n     */\\n    function tryPermit(IERC20 token, bytes calldata permit) internal returns(bool success) {\\n        return tryPermit(token, msg.sender, address(this), permit);\\n    }\\n\\n    /**\\n     * @notice The function attempts to call the permit function on a given ERC20 token.\\n     * @dev The function is designed to support a variety of permit functions, namely: IERC20Permit, IDaiLikePermit, and IPermit2.\\n     * It accommodates both Compact and Full formats of these permit types.\\n     * Please note, it is expected that the `expiration` parameter for the compact Permit2 and the `deadline` parameter \\n     * for the compact Permit are to be incremented by one before invoking this function. This approach is motivated by\\n     * gas efficiency considerations; as the unlimited expiration period is likely to be the most common scenario, and \\n     * zeros are cheaper to pass in terms of gas cost. Thus, callers should increment the expiration or deadline by one\\n     * before invocation for optimized performance.\\n     * @param token The address of the ERC20 token on which to call the permit function.\\n     * @param owner The owner of the tokens. This address should have signed the off-chain permit.\\n     * @param spender The address which will be approved for transfer of tokens.\\n     * @param permit The off-chain permit data, containing different fields depending on the type of permit function.\\n     * @return success A boolean indicating whether the permit call was successful.\\n     */\\n    function tryPermit(IERC20 token, address owner, address spender, bytes calldata permit) internal returns(bool success) {\\n        // load function selectors for different permit standards\\n        bytes4 permitSelector = IERC20Permit.permit.selector;\\n        bytes4 daiPermitSelector = IDaiLikePermit.permit.selector;\\n        bytes4 permit2Selector = IPermit2.permit.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n\\n            // Switch case for different permit lengths, indicating different permit standards\\n            switch permit.length\\n            // Compact IERC20Permit\\n            case 100 {\\n                mstore(ptr, permitSelector)     // store selector\\n                mstore(add(ptr, 0x04), owner)   // store owner\\n                mstore(add(ptr, 0x24), spender) // store spender\\n\\n                // Compact IERC20Permit.permit(uint256 value, uint32 deadline, uint256 r, uint256 vs)\\n                {  // stack too deep\\n                    let deadline := shr(224, calldataload(add(permit.offset, 0x20))) // loads permit.offset 0x20..0x23\\n                    let vs := calldataload(add(permit.offset, 0x44))                 // loads permit.offset 0x44..0x63\\n\\n                    calldatacopy(add(ptr, 0x44), permit.offset, 0x20)            // store value     = copy permit.offset 0x00..0x19\\n                    mstore(add(ptr, 0x64), sub(deadline, 1))                     // store deadline  = deadline - 1\\n                    mstore(add(ptr, 0x84), add(27, shr(255, vs)))                // store v         = most significant bit of vs + 27 (27 or 28)\\n                    calldatacopy(add(ptr, 0xa4), add(permit.offset, 0x24), 0x20) // store r         = copy permit.offset 0x24..0x43\\n                    mstore(add(ptr, 0xc4), shr(1, shl(1, vs)))                   // store s         = vs without most significant bit\\n                }\\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\\n            }\\n            // Compact IDaiLikePermit\\n            case 72 {\\n                mstore(ptr, daiPermitSelector)  // store selector\\n                mstore(add(ptr, 0x04), owner)   // store owner\\n                mstore(add(ptr, 0x24), spender) // store spender\\n\\n                // Compact IDaiLikePermit.permit(uint32 nonce, uint32 expiry, uint256 r, uint256 vs)\\n                {  // stack too deep\\n                    let expiry := shr(224, calldataload(add(permit.offset, 0x04))) // loads permit.offset 0x04..0x07\\n                    let vs := calldataload(add(permit.offset, 0x28))               // loads permit.offset 0x28..0x47\\n\\n                    mstore(add(ptr, 0x44), shr(224, calldataload(permit.offset))) // store nonce   = copy permit.offset 0x00..0x03\\n                    mstore(add(ptr, 0x64), sub(expiry, 1))                        // store expiry  = expiry - 1\\n                    mstore(add(ptr, 0x84), true)                                  // store allowed = true\\n                    mstore(add(ptr, 0xa4), add(27, shr(255, vs)))                 // store v       = most significant bit of vs + 27 (27 or 28)\\n                    calldatacopy(add(ptr, 0xc4), add(permit.offset, 0x08), 0x20)  // store r       = copy permit.offset 0x08..0x27\\n                    mstore(add(ptr, 0xe4), shr(1, shl(1, vs)))                    // store s       = vs without most significant bit\\n                }\\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\\n            }\\n            // IERC20Permit\\n            case 224 {\\n                mstore(ptr, permitSelector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\\n            }\\n            // IDaiLikePermit\\n            case 256 {\\n                mstore(ptr, daiPermitSelector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\\n            }\\n            // Compact IPermit2\\n            case 96 {\\n                // Compact IPermit2.permit(uint160 amount, uint32 expiration, uint32 nonce, uint32 sigDeadline, uint256 r, uint256 vs)\\n                mstore(ptr, permit2Selector)  // store selector\\n                mstore(add(ptr, 0x04), owner) // store owner\\n                mstore(add(ptr, 0x24), token) // store token\\n\\n                calldatacopy(add(ptr, 0x50), permit.offset, 0x14)             // store amount = copy permit.offset 0x00..0x13\\n                // and(0xffffffffffff, ...) - conversion to uint48 \\n                mstore(add(ptr, 0x64), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x14))), 1))) // store expiration = ((permit.offset 0x14..0x17 - 1) & 0xffffffffffff)\\n                mstore(add(ptr, 0x84), shr(224, calldataload(add(permit.offset, 0x18)))) // store nonce = copy permit.offset 0x18..0x1b\\n                mstore(add(ptr, 0xa4), spender)                               // store spender\\n                // and(0xffffffffffff, ...) - conversion to uint48\\n                mstore(add(ptr, 0xc4), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x1c))), 1))) // store sigDeadline = ((permit.offset 0x1c..0x1f - 1) & 0xffffffffffff)\\n                mstore(add(ptr, 0xe4), 0x100)                                 // store offset = 256\\n                mstore(add(ptr, 0x104), 0x40)                                 // store length = 64\\n                calldatacopy(add(ptr, 0x124), add(permit.offset, 0x20), 0x20) // store r      = copy permit.offset 0x20..0x3f\\n                calldatacopy(add(ptr, 0x144), add(permit.offset, 0x40), 0x20) // store vs     = copy permit.offset 0x40..0x5f\\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\\n            }\\n            // IPermit2\\n            case 352 {\\n                mstore(ptr, permit2Selector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\\n            }\\n            // Unknown\\n            default {\\n                mstore(ptr, _PERMIT_LENGTH_ERROR)\\n                revert(ptr, 4)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Executes a low level call to a token contract, making it resistant to reversion and erroneous boolean returns.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param selector The function signature that is to be called on the token contract.\\n     * @param to The address to which the token amount will be transferred.\\n     * @param amount The token amount to be transferred.\\n     * @return success A boolean indicating if the call was successful. Returns 'true' on success and 'false' on failure. \\n     * In case of success but no returned data, validates that the contract code exists.\\n     * In case of returned data, ensures that it's a boolean `true`.\\n     */\\n    function _makeCall(\\n        IERC20 token,\\n        bytes4 selector,\\n        address to,\\n        uint256 amount\\n    ) private returns (bool success) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), to)\\n            mstore(add(data, 0x24), amount)\\n            success := call(gas(), token, 0, data, 0x44, 0x0, 0x20)\\n            if success {\\n                switch returndatasize()\\n                case 0 {\\n                    success := gt(extcodesize(token), 0)\\n                }\\n                default {\\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely deposits a specified amount of Ether into the IWETH contract. Consumes less gas then regular `IWETH.deposit`.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of Ether to deposit into the IWETH contract.\\n     */\\n    function safeDeposit(IWETH weth, uint256 amount) internal {\\n        if (amount > 0) {\\n            bytes4 selector = IWETH.deposit.selector;\\n            assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                mstore(0, selector)\\n                if iszero(call(gas(), weth, amount, 0, 4, 0, 0)) {\\n                    returndatacopy(0, 0, returndatasize())\\n                    revert(0, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract. Consumes less gas then regular `IWETH.withdraw`.\\n     * @dev Uses inline assembly to interact with the IWETH contract.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\\n     */\\n    function safeWithdraw(IWETH weth, uint256 amount) internal {\\n        bytes4 selector = IWETH.withdraw.selector;\\n        assembly (\\\"memory-safe\\\") {  // solhint-disable-line no-inline-assembly\\n            mstore(0, selector)\\n            mstore(4, amount)\\n            if iszero(call(gas(), weth, 0, 0, 0x24, 0, 0)) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract to a specified recipient.\\n     * Consumes less gas then regular `IWETH.withdraw`.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\\n     * @param to The recipient of the withdrawn Ether.\\n     */\\n    function safeWithdrawTo(IWETH weth, uint256 amount, address to) internal {\\n        safeWithdraw(weth, amount);\\n        if (to != address(this)) {\\n            assembly (\\\"memory-safe\\\") {  // solhint-disable-line no-inline-assembly\\n                if iszero(call(_RAW_CALL_GAS_LIMIT, to, amount, 0, 0, 0, 0)) {\\n                    let ptr := mload(0x40)\\n                    returndatacopy(ptr, 0, returndatasize())\\n                    revert(ptr, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1c050d9eea8792471f3e92a8423c1900287452fe2cb8457208f8955e4ca556cc\",\"license\":\"MIT\"},\"contracts/libraries/StringUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Library with gas-efficient string operations\\nlibrary StringUtil {\\n    function toHex(uint256 value) internal pure returns (string memory) {\\n        return toHex(abi.encodePacked(value));\\n    }\\n\\n    function toHex(address value) internal pure returns (string memory) {\\n        return toHex(abi.encodePacked(value));\\n    }\\n\\n    /// @dev this is the assembly adaptation of highly optimized toHex16 code from Mikhail Vladimirov\\n    /// https://stackoverflow.com/a/69266989\\n    function toHex(bytes memory data) internal pure returns (string memory result) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            function _toHex16(input) -> output {\\n                output := or(\\n                    and(input, 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000),\\n                    shr(64, and(input, 0x0000000000000000FFFFFFFFFFFFFFFF00000000000000000000000000000000))\\n                )\\n                output := or(\\n                    and(output, 0xFFFFFFFF000000000000000000000000FFFFFFFF000000000000000000000000),\\n                    shr(32, and(output, 0x00000000FFFFFFFF000000000000000000000000FFFFFFFF0000000000000000))\\n                )\\n                output := or(\\n                    and(output, 0xFFFF000000000000FFFF000000000000FFFF000000000000FFFF000000000000),\\n                    shr(16, and(output, 0x0000FFFF000000000000FFFF000000000000FFFF000000000000FFFF00000000))\\n                )\\n                output := or(\\n                    and(output, 0xFF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000),\\n                    shr(8, and(output, 0x00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000))\\n                )\\n                output := or(\\n                    shr(4, and(output, 0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000)),\\n                    shr(8, and(output, 0x0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00))\\n                )\\n                output := add(\\n                    add(0x3030303030303030303030303030303030303030303030303030303030303030, output),\\n                    mul(\\n                        and(\\n                            shr(4, add(output, 0x0606060606060606060606060606060606060606060606060606060606060606)),\\n                            0x0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F\\n                        ),\\n                        7 // Change 7 to 39 for lower case output\\n                    )\\n                )\\n            }\\n\\n            result := mload(0x40)\\n            let length := mload(data)\\n            let resultLength := shl(1, length)\\n            let toPtr := add(result, 0x22) // 32 bytes for length + 2 bytes for '0x'\\n            mstore(0x40, add(toPtr, resultLength)) // move free memory pointer\\n            mstore(add(result, 2), 0x3078) // 0x3078 is right aligned so we write to `result + 2`\\n            // to store the last 2 bytes in the beginning of the string\\n            mstore(result, add(resultLength, 2)) // extra 2 bytes for '0x'\\n\\n            for {\\n                let fromPtr := add(data, 0x20)\\n                let endPtr := add(fromPtr, length)\\n            } lt(fromPtr, endPtr) {\\n                fromPtr := add(fromPtr, 0x20)\\n            } {\\n                let rawData := mload(fromPtr)\\n                let hexData := _toHex16(rawData)\\n                mstore(toPtr, hexData)\\n                toPtr := add(toPtr, 0x20)\\n                hexData := _toHex16(shl(128, rawData))\\n                mstore(toPtr, hexData)\\n                toPtr := add(toPtr, 0x20)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x47867f007afaefa24c40fe487b968f553f4551c941dfa53afe8cc29e1fb68f38\",\"license\":\"MIT\"},\"contracts/libraries/UniERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../interfaces/IERC20MetadataUppercase.sol\\\";\\nimport \\\"./SafeERC20.sol\\\";\\nimport \\\"./StringUtil.sol\\\";\\n\\n/// @title Library, which allows usage of ETH as ERC20 and ERC20 itself. Uses SafeERC20 library for ERC20 interface.\\nlibrary UniERC20 {\\n    using SafeERC20 for IERC20;\\n\\n    error InsufficientBalance();\\n    error ApproveCalledOnETH();\\n    error NotEnoughValue();\\n    error FromIsNotSender();\\n    error ToIsNotThis();\\n    error ETHTransferFailed();\\n\\n    uint256 private constant _RAW_CALL_GAS_LIMIT = 5000;\\n    IERC20 private constant _ETH_ADDRESS = IERC20(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\\n    IERC20 private constant _ZERO_ADDRESS = IERC20(address(0));\\n\\n    /// @dev Returns true if `token` is ETH.\\n    function isETH(IERC20 token) internal pure returns (bool) {\\n        return (token == _ZERO_ADDRESS || token == _ETH_ADDRESS);\\n    }\\n\\n    /// @dev Returns `account` ERC20 `token` balance.\\n    function uniBalanceOf(IERC20 token, address account) internal view returns (uint256) {\\n        if (isETH(token)) {\\n            return account.balance;\\n        } else {\\n            return token.balanceOf(account);\\n        }\\n    }\\n\\n    /// @dev `token` transfer `to` `amount`.\\n    /// Note that this function does nothing in case of zero amount.\\n    function uniTransfer(\\n        IERC20 token,\\n        address payable to,\\n        uint256 amount\\n    ) internal {\\n        if (amount > 0) {\\n            if (isETH(token)) {\\n                if (address(this).balance < amount) revert InsufficientBalance();\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = to.call{value: amount, gas: _RAW_CALL_GAS_LIMIT}(\\\"\\\");\\n                if (!success) revert ETHTransferFailed();\\n            } else {\\n                token.safeTransfer(to, amount);\\n            }\\n        }\\n    }\\n\\n    /// @dev `token` transfer `from` `to` `amount`.\\n    /// Note that this function does nothing in case of zero amount.\\n    function uniTransferFrom(\\n        IERC20 token,\\n        address payable from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        if (amount > 0) {\\n            if (isETH(token)) {\\n                if (msg.value < amount) revert NotEnoughValue();\\n                if (from != msg.sender) revert FromIsNotSender();\\n                if (to != address(this)) revert ToIsNotThis();\\n                if (msg.value > amount) {\\n                    // Return remainder if exist\\n                    unchecked {\\n                        // solhint-disable-next-line avoid-low-level-calls\\n                        (bool success, ) = from.call{value: msg.value - amount, gas: _RAW_CALL_GAS_LIMIT}(\\\"\\\");\\n                        if (!success) revert ETHTransferFailed();\\n                    }\\n                }\\n            } else {\\n                token.safeTransferFrom(from, to, amount);\\n            }\\n        }\\n    }\\n\\n    /// @dev Returns `token` symbol from ERC20 metadata.\\n    function uniSymbol(IERC20 token) internal view returns (string memory) {\\n        return _uniDecode(token, IERC20Metadata.symbol.selector, IERC20MetadataUppercase.SYMBOL.selector);\\n    }\\n\\n    /// @dev Returns `token` name from ERC20 metadata.\\n    function uniName(IERC20 token) internal view returns (string memory) {\\n        return _uniDecode(token, IERC20Metadata.name.selector, IERC20MetadataUppercase.NAME.selector);\\n    }\\n\\n    /// @dev Reverts if `token` is ETH, otherwise performs ERC20 forceApprove.\\n    function uniApprove(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        if (isETH(token)) revert ApproveCalledOnETH();\\n\\n        token.forceApprove(to, amount);\\n    }\\n\\n    /// @dev 20K gas is provided to account for possible implementations of name/symbol\\n    /// (token implementation might be behind proxy or store the value in storage)\\n    function _uniDecode(\\n        IERC20 token,\\n        bytes4 lowerCaseSelector,\\n        bytes4 upperCaseSelector\\n    ) private view returns (string memory result) {\\n        if (isETH(token)) {\\n            return \\\"ETH\\\";\\n        }\\n\\n        (bool success, bytes memory data) = address(token).staticcall{gas: 20000}(\\n            abi.encodeWithSelector(lowerCaseSelector)\\n        );\\n        if (!success) {\\n            (success, data) = address(token).staticcall{gas: 20000}(abi.encodeWithSelector(upperCaseSelector));\\n        }\\n\\n        if (success && data.length >= 0x40) {\\n            (uint256 offset, uint256 len) = abi.decode(data, (uint256, uint256));\\n            /*\\n                return data is padded up to 32 bytes with ABI encoder also sometimes\\n                there is extra 32 bytes of zeros padded in the end:\\n                https://github.com/ethereum/solidity/issues/10170\\n                because of that we can't check for equality and instead check\\n                that overall data length is greater or equal than string length + extra 64 bytes\\n            */\\n            if (offset == 0x20 && data.length >= 0x40 + len) {\\n                assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                    result := add(data, 0x40)\\n                }\\n                return result;\\n            }\\n        }\\n        if (success && data.length == 32) {\\n            uint256 len = 0;\\n            while (len < data.length && data[len] >= 0x20 && data[len] <= 0x7E) {\\n                unchecked {\\n                    len++;\\n                }\\n            }\\n\\n            if (len > 0) {\\n                assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                    mstore(data, len)\\n                }\\n                return string(data);\\n            }\\n        }\\n\\n        return StringUtil.toHex(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x17a81163027008404f1446b8db47970855cae660a18d1d0d908faaef641cc97b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// EIP-2612 is Final as of 2022-11-01. This file is deprecated.\\n\\nimport \\\"./IERC20Permit.sol\\\";\\n\",\"keccak256\":\"0xc7134e0f63b0adcee02bf4b15efb2d0d4b1c03ae0d127dc90d846da4cab23a76\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ICreate3Deployer.sol":{"ICreate3Deployer":{"abi":[{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"addressOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"code","type":"bytes"}],"name":"deploy","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addressOf(bytes32)":"bb34534c","deploy(bytes32,bytes)":"cdcb760a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"addressOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICreate3Deployer.sol\":\"ICreate3Deployer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/interfaces/ICreate3Deployer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface ICreate3Deployer {\\n    function deploy(bytes32 salt, bytes calldata code) external returns (address);\\n    function addressOf(bytes32 salt) external view returns (address);\\n}\\n\",\"keccak256\":\"0xf6586c414d0d1db8852e804246fc7978174ddf5b67bf9290666bb6ca97a8d0c0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDaiLikePermit.sol":{"IDaiLikePermit":{"abi":[{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bool","name":"allowed","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)":"8fcbaf0c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDaiLikePermit.sol\":\"IDaiLikePermit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/interfaces/IDaiLikePermit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IDaiLikePermit {\\n    function permit(\\n        address holder,\\n        address spender,\\n        uint256 nonce,\\n        uint256 expiry,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbbb219886412a339a7f84b0850f700311dd2b3a106919ae54fa0a215d847a3b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IERC20MetadataUppercase.sol":{"IERC20MetadataUppercase":{"abi":[{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SYMBOL","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"NAME()":"a3f4df7e","SYMBOL()":"f76f8d78"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20MetadataUppercase.sol\":\"IERC20MetadataUppercase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/interfaces/IERC20MetadataUppercase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC20MetadataUppercase {\\n    function NAME() external view returns (string memory); // solhint-disable-line func-name-mixedcase\\n\\n    function SYMBOL() external view returns (string memory); // solhint-disable-line func-name-mixedcase\\n}\\n\",\"keccak256\":\"0x42e8625b32dfa9746df2b79c66deb1cb6f085d8292a0e19f60339ce9dd7e9803\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IPermit2.sol":{"IPermit2":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"components":[{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IPermit2.PackedAllowance","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IPermit2.PermitDetails","name":"details","type":"tuple"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IPermit2.PermitSingle","name":"permitSingle","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address,address)":"927da105","permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)":"2b67b570","transferFrom(address,address,uint160,address)":"36c78516"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IPermit2.PackedAllowance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IPermit2.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IPermit2.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPermit2.sol\":\"IPermit2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/interfaces/IPermit2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IPermit2 {\\n    struct PermitDetails {\\n        // ERC20 token address\\n        address token;\\n        // the maximum amount allowed to spend\\n        uint160 amount;\\n        // timestamp at which a spender's token allowances become invalid\\n        uint48 expiration;\\n        // an incrementing value indexed per owner,token,and spender for each signature\\n        uint48 nonce;\\n    }\\n    /// @notice The permit message signed for a single token allownce\\n    struct PermitSingle {\\n        // the permit data for a single token alownce\\n        PermitDetails details;\\n        // address permissioned on the allowed tokens\\n        address spender;\\n        // deadline on the permit signature\\n        uint256 sigDeadline;\\n    }\\n    /// @notice Packed allowance\\n    struct PackedAllowance {\\n        // amount allowed\\n        uint160 amount;\\n        // permission expiry\\n        uint48 expiration;\\n        // an incrementing value indexed per owner,token,and spender for each signature\\n        uint48 nonce;\\n    }\\n\\n    function transferFrom(address user, address spender, uint160 amount, address token) external;\\n\\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\\n\\n    function allowance(address user, address token, address spender) external view returns (PackedAllowance memory);\\n}\\n\",\"keccak256\":\"0x63209a082f66ecb584b86e412b3dd0010e9675bc19bc1f80a75437311df7ec11\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IWETH.sol":{"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    event Deposit(address indexed dst, uint wad);\\n\\n    event Withdrawal(address indexed src, uint wad);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xc8132cbe41b3dc902df69adbbdf230bbde79647c676d064c58bc6092de6077d5\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/AddressArray.sol":{"AddressArray":{"abi":[{"inputs":[],"name":"IndexOutOfBounds","type":"error"},{"inputs":[],"name":"OutputArrayTooSmall","type":"error"},{"inputs":[],"name":"PopFromEmptyArray","type":"error"}],"devdoc":{"kind":"dev","methods":{},"title":"Library that implements address array on mapping, stores array length at 0 index.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ed96d58648cd17d390747931aa65cb1cc25d9e6e3fde015777018339f8d69d264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xD9 PUSH14 0x58648CD17D390747931AA65CB1CC 0x25 0xD9 0xE6 0xE3 REVERT 0xE0 ISZERO PUSH24 0x7018339F8D69D264736F6C63430008110033000000000000 ","sourceMap":"151:3081:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ed96d58648cd17d390747931aa65cb1cc25d9e6e3fde015777018339f8d69d264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xD9 PUSH14 0x58648CD17D390747931AA65CB1CC 0x25 0xD9 0xE6 0xE3 REVERT 0xE0 ISZERO PUSH24 0x7018339F8D69D264736F6C63430008110033000000000000 ","sourceMap":"151:3081:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_get(struct AddressArray.Data storage pointer,address[] memory,uint256)":"infinite","at(struct AddressArray.Data storage pointer,uint256)":"infinite","get(struct AddressArray.Data storage pointer)":"infinite","get(struct AddressArray.Data storage pointer,address[] memory)":"infinite","length(struct AddressArray.Data storage pointer)":"infinite","pop(struct AddressArray.Data storage pointer)":"infinite","push(struct AddressArray.Data storage pointer,address)":"infinite","set(struct AddressArray.Data storage pointer,uint256,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutputArrayTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PopFromEmptyArray\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library that implements address array on mapping, stores array length at 0 index.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/AddressArray.sol\":\"AddressArray\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/libraries/AddressArray.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Library that implements address array on mapping, stores array length at 0 index.\\nlibrary AddressArray {\\n    error IndexOutOfBounds();\\n    error PopFromEmptyArray();\\n    error OutputArrayTooSmall();\\n\\n    /// @dev Data struct containing raw mapping.\\n    struct Data {\\n        mapping(uint256 => uint256) _raw;\\n    }\\n\\n    /// @dev Length of array.\\n    function length(Data storage self) internal view returns (uint256) {\\n        return self._raw[0] >> 160;\\n    }\\n\\n    /// @dev Returns data item from `self` storage at `i`.\\n    function at(Data storage self, uint256 i) internal view returns (address) {\\n        return address(uint160(self._raw[i]));\\n    }\\n\\n    /// @dev Returns list of addresses from storage `self`.\\n    function get(Data storage self) internal view returns (address[] memory arr) {\\n        uint256 lengthAndFirst = self._raw[0];\\n        arr = new address[](lengthAndFirst >> 160);\\n        _get(self, arr, lengthAndFirst);\\n    }\\n\\n    /// @dev Puts list of addresses from `self` storage into `output` array.\\n    function get(Data storage self, address[] memory output) internal view returns (address[] memory) {\\n        return _get(self, output, self._raw[0]);\\n    }\\n\\n    function _get(\\n        Data storage self,\\n        address[] memory output,\\n        uint256 lengthAndFirst\\n    ) private view returns (address[] memory) {\\n        uint256 len = lengthAndFirst >> 160;\\n        if (len > output.length) revert OutputArrayTooSmall();\\n        if (len > 0) {\\n            output[0] = address(uint160(lengthAndFirst));\\n            unchecked {\\n                for (uint256 i = 1; i < len; i++) {\\n                    output[i] = address(uint160(self._raw[i]));\\n                }\\n            }\\n        }\\n        return output;\\n    }\\n\\n    /// @dev Array push back `account` operation on storage `self`.\\n    function push(Data storage self, address account) internal returns (uint256) {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) {\\n                self._raw[0] = (1 << 160) + uint160(account);\\n            } else {\\n                self._raw[0] = lengthAndFirst + (1 << 160);\\n                self._raw[len] = uint160(account);\\n            }\\n            return len + 1;\\n        }\\n    }\\n\\n    /// @dev Array pop back operation for storage `self`.\\n    function pop(Data storage self) internal {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) revert PopFromEmptyArray();\\n            self._raw[len - 1] = 0;\\n            if (len > 1) {\\n                self._raw[0] = lengthAndFirst - (1 << 160);\\n            }\\n        }\\n    }\\n\\n    /// @dev Set element for storage `self` at `index` to `account`.\\n    function set(\\n        Data storage self,\\n        uint256 index,\\n        address account\\n    ) internal {\\n        uint256 len = length(self);\\n        if (index >= len) revert IndexOutOfBounds();\\n\\n        if (index == 0) {\\n            self._raw[0] = (len << 160) | uint160(account);\\n        } else {\\n            self._raw[index] = uint160(account);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5a40948d30b475081eedecc42f33027a5d5cb03021dba7608595c0414252ec0c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/AddressLib.sol":{"AddressLib":{"abi":[],"devdoc":{"details":"Library for working with addresses encoded as uint256 values, which can include flags in the highest bits.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f91844dc756160036d2a326a359621bc7d6f90c0e2131eb1979a8f51b87332564736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x91844DC756160036D2A326A359621BC7 0xD6 0xF9 0xC 0xE 0x21 BALANCE 0xEB NOT PUSH26 0xA8F51B87332564736F6C63430008110033000000000000000000 ","sourceMap":"205:1771:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f91844dc756160036d2a326a359621bc7d6f90c0e2131eb1979a8f51b87332564736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x91844DC756160036D2A326A359621BC7 0xD6 0xF9 0xC 0xE 0x21 BALANCE 0xEB NOT PUSH26 0xA8F51B87332564736F6C63430008110033000000000000000000 ","sourceMap":"205:1771:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"get(Address)":"infinite","getFlag(Address,uint256)":"infinite","getUint32(Address,uint256)":"infinite","getUint64(Address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for working with addresses encoded as uint256 values, which can include flags in the highest bits.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/AddressLib.sol\":\"AddressLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/libraries/AddressLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ntype Address is uint256;\\n\\n/**\\n* @dev Library for working with addresses encoded as uint256 values, which can include flags in the highest bits.\\n*/\\nlibrary AddressLib {\\n    uint256 private constant _LOW_160_BIT_MASK = (1 << 160) - 1;\\n\\n    /**\\n    * @notice Returns the address representation of a uint256.\\n    * @param a The uint256 value to convert to an address.\\n    * @return The address representation of the provided uint256 value.\\n    */\\n    function get(Address a) internal pure returns (address) {\\n        return address(uint160(Address.unwrap(a) & _LOW_160_BIT_MASK));\\n    }\\n\\n    /**\\n    * @notice Checks if a given flag is set for the provided address.\\n    * @param a The address to check for the flag.\\n    * @param flag The flag to check for in the provided address.\\n    * @return True if the provided flag is set in the address, false otherwise.\\n    */\\n    function getFlag(Address a, uint256 flag) internal pure returns (bool) {\\n        return (Address.unwrap(a) & flag) != 0;\\n    }\\n\\n    /**\\n    * @notice Returns a uint32 value stored at a specific bit offset in the provided address.\\n    * @param a The address containing the uint32 value.\\n    * @param offset The bit offset at which the uint32 value is stored.\\n    * @return The uint32 value stored in the address at the specified bit offset.\\n    */\\n    function getUint32(Address a, uint256 offset) internal pure returns (uint32) {\\n        return uint32(Address.unwrap(a) >> offset);\\n    }\\n\\n    /**\\n    * @notice Returns a uint64 value stored at a specific bit offset in the provided address.\\n    * @param a The address containing the uint64 value.\\n    * @param offset The bit offset at which the uint64 value is stored.\\n    * @return The uint64 value stored in the address at the specified bit offset.\\n    */\\n    function getUint64(Address a, uint256 offset) internal pure returns (uint64) {\\n        return uint64(Address.unwrap(a) >> offset);\\n    }\\n}\\n\",\"keccak256\":\"0x45c4340cbefe825cb4be111058427351cb4d5f95260e630a453eae0430ba29bd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/AddressSet.sol":{"AddressSet":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Library that is using AddressArray library for AddressArray.Data and allows Set operations on address storage data: 1. add 2. remove 3. contains","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122075acefa7b372d83d571e7e73b365a0918c96ce34a2aa48c005e5a523d86da3fc64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xACEFA7B372D83D571E7E73B365A0918C96CE34A2AA48 0xC0 SDIV 0xE5 0xA5 0x23 0xD8 PUSH14 0xA3FC64736F6C6343000811003300 ","sourceMap":"260:1676:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122075acefa7b372d83d571e7e73b365a0918c96ce34a2aa48c005e5a523d86da3fc64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xACEFA7B372D83D571E7E73B365A0918C96CE34A2AA48 0xC0 SDIV 0xE5 0xA5 0x23 0xD8 PUSH14 0xA3FC64736F6C6343000811003300 ","sourceMap":"260:1676:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(struct AddressSet.Data storage pointer,address)":"infinite","at(struct AddressSet.Data storage pointer,uint256)":"infinite","contains(struct AddressSet.Data storage pointer,address)":"infinite","length(struct AddressSet.Data storage pointer)":"infinite","remove(struct AddressSet.Data storage pointer,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library that is using AddressArray library for AddressArray.Data and allows Set operations on address storage data: 1. add 2. remove 3. contains\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/AddressSet.sol\":\"AddressSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/libraries/AddressArray.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Library that implements address array on mapping, stores array length at 0 index.\\nlibrary AddressArray {\\n    error IndexOutOfBounds();\\n    error PopFromEmptyArray();\\n    error OutputArrayTooSmall();\\n\\n    /// @dev Data struct containing raw mapping.\\n    struct Data {\\n        mapping(uint256 => uint256) _raw;\\n    }\\n\\n    /// @dev Length of array.\\n    function length(Data storage self) internal view returns (uint256) {\\n        return self._raw[0] >> 160;\\n    }\\n\\n    /// @dev Returns data item from `self` storage at `i`.\\n    function at(Data storage self, uint256 i) internal view returns (address) {\\n        return address(uint160(self._raw[i]));\\n    }\\n\\n    /// @dev Returns list of addresses from storage `self`.\\n    function get(Data storage self) internal view returns (address[] memory arr) {\\n        uint256 lengthAndFirst = self._raw[0];\\n        arr = new address[](lengthAndFirst >> 160);\\n        _get(self, arr, lengthAndFirst);\\n    }\\n\\n    /// @dev Puts list of addresses from `self` storage into `output` array.\\n    function get(Data storage self, address[] memory output) internal view returns (address[] memory) {\\n        return _get(self, output, self._raw[0]);\\n    }\\n\\n    function _get(\\n        Data storage self,\\n        address[] memory output,\\n        uint256 lengthAndFirst\\n    ) private view returns (address[] memory) {\\n        uint256 len = lengthAndFirst >> 160;\\n        if (len > output.length) revert OutputArrayTooSmall();\\n        if (len > 0) {\\n            output[0] = address(uint160(lengthAndFirst));\\n            unchecked {\\n                for (uint256 i = 1; i < len; i++) {\\n                    output[i] = address(uint160(self._raw[i]));\\n                }\\n            }\\n        }\\n        return output;\\n    }\\n\\n    /// @dev Array push back `account` operation on storage `self`.\\n    function push(Data storage self, address account) internal returns (uint256) {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) {\\n                self._raw[0] = (1 << 160) + uint160(account);\\n            } else {\\n                self._raw[0] = lengthAndFirst + (1 << 160);\\n                self._raw[len] = uint160(account);\\n            }\\n            return len + 1;\\n        }\\n    }\\n\\n    /// @dev Array pop back operation for storage `self`.\\n    function pop(Data storage self) internal {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) revert PopFromEmptyArray();\\n            self._raw[len - 1] = 0;\\n            if (len > 1) {\\n                self._raw[0] = lengthAndFirst - (1 << 160);\\n            }\\n        }\\n    }\\n\\n    /// @dev Set element for storage `self` at `index` to `account`.\\n    function set(\\n        Data storage self,\\n        uint256 index,\\n        address account\\n    ) internal {\\n        uint256 len = length(self);\\n        if (index >= len) revert IndexOutOfBounds();\\n\\n        if (index == 0) {\\n            self._raw[0] = (len << 160) | uint160(account);\\n        } else {\\n            self._raw[index] = uint160(account);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5a40948d30b475081eedecc42f33027a5d5cb03021dba7608595c0414252ec0c\",\"license\":\"MIT\"},\"contracts/libraries/AddressSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AddressArray.sol\\\";\\n\\n/** @title Library that is using AddressArray library for AddressArray.Data\\n * and allows Set operations on address storage data:\\n * 1. add\\n * 2. remove\\n * 3. contains\\n */\\nlibrary AddressSet {\\n    using AddressArray for AddressArray.Data;\\n\\n    /** @dev Data struct from AddressArray.Data items\\n     * and lookup mapping address => index in data array.\\n     */\\n    struct Data {\\n        AddressArray.Data items;\\n        mapping(address => uint256) lookup;\\n    }\\n\\n    /// @dev Length of data storage.\\n    function length(Data storage s) internal view returns (uint256) {\\n        return s.items.length();\\n    }\\n\\n    /// @dev Returns data item from `s` storage at `index`.\\n    function at(Data storage s, uint256 index) internal view returns (address) {\\n        return s.items.at(index);\\n    }\\n\\n    /// @dev Returns true if storage `s` has `item`.\\n    function contains(Data storage s, address item) internal view returns (bool) {\\n        return s.lookup[item] != 0;\\n    }\\n\\n    /// @dev Adds `item` into storage `s` and returns true if successful.\\n    function add(Data storage s, address item) internal returns (bool) {\\n        if (s.lookup[item] > 0) {\\n            return false;\\n        }\\n        s.lookup[item] = s.items.push(item);\\n        return true;\\n    }\\n\\n    /// @dev Removes `item` from storage `s` and returns true if successful.\\n    function remove(Data storage s, address item) internal returns (bool) {\\n        uint256 index = s.lookup[item];\\n        if (index == 0) {\\n            return false;\\n        }\\n        if (index < s.items.length()) {\\n            unchecked {\\n                address lastItem = s.items.at(s.items.length() - 1);\\n                s.items.set(index - 1, lastItem);\\n                s.lookup[lastItem] = index;\\n            }\\n        }\\n        s.items.pop();\\n        delete s.lookup[item];\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x1156b03a2cbd95e0bbf21f22ad8d630a73ec3679b70020dc6d7005bff62c06fd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/ECDSA.sol":{"ECDSA":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cbd42ff85cd1c6132bccaaa3c2342391f4bc160cf73b457a5d616b73ee855c4a64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xD4 0x2F 0xF8 0x5C 0xD1 0xC6 SGT 0x2B 0xCC 0xAA LOG3 0xC2 CALLVALUE 0x23 SWAP2 DELEGATECALL 0xBC AND 0xC 0xF7 EXTCODESIZE GASLIMIT PUSH27 0x5D616B73EE855C4A64736F6C634300081100330000000000000000 ","sourceMap":"117:11025:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cbd42ff85cd1c6132bccaaa3c2342391f4bc160cf73b457a5d616b73ee855c4a64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xD4 0x2F 0xF8 0x5C 0xD1 0xC6 SGT 0x2B 0xCC 0xAA LOG3 0xC2 CALLVALUE 0x23 SWAP2 DELEGATECALL 0xBC AND 0xC 0xF7 EXTCODESIZE GASLIMIT PUSH27 0x5D616B73EE855C4A64736F6C634300081100330000000000000000 ","sourceMap":"117:11025:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"isValidSignature(address,bytes32,bytes calldata)":"infinite","isValidSignature(address,bytes32,bytes32,bytes32)":"infinite","isValidSignature(address,bytes32,uint8,bytes32,bytes32)":"infinite","isValidSignature65(address,bytes32,bytes32,bytes32)":"infinite","recover(bytes32,bytes calldata)":"infinite","recover(bytes32,bytes32,bytes32)":"infinite","recover(bytes32,uint8,bytes32,bytes32)":"infinite","recoverOrIsValidSignature(address,bytes32,bytes calldata)":"infinite","recoverOrIsValidSignature(address,bytes32,bytes32,bytes32)":"infinite","recoverOrIsValidSignature(address,bytes32,uint8,bytes32,bytes32)":"infinite","recoverOrIsValidSignature65(address,bytes32,bytes32,bytes32)":"infinite","toEthSignedMessageHash(bytes32)":"infinite","toTypedDataHash(bytes32,bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/libraries/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC1271.sol\\\";\\n\\nlibrary ECDSA {\\n    // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n    // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n    // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n    // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n    //\\n    // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n    // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n    // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n    // these malleable signatures as well.\\n    uint256 private constant _S_BOUNDARY = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 + 1;\\n    uint256 private constant _COMPACT_S_MASK = 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n    uint256 private constant _COMPACT_V_SHIFT = 255;\\n\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal view returns (address signer) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            if lt(s, _S_BOUNDARY) {\\n                let ptr := mload(0x40)\\n\\n                mstore(ptr, hash)\\n                mstore(add(ptr, 0x20), v)\\n                mstore(add(ptr, 0x40), r)\\n                mstore(add(ptr, 0x60), s)\\n                mstore(0, 0)\\n                pop(staticcall(gas(), 0x1, ptr, 0x80, 0, 0x20))\\n                signer := mload(0)\\n            }\\n        }\\n    }\\n\\n    function recover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal view returns (address signer) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let s := and(vs, _COMPACT_S_MASK)\\n            if lt(s, _S_BOUNDARY) {\\n                let ptr := mload(0x40)\\n\\n                mstore(ptr, hash)\\n                mstore(add(ptr, 0x20), add(27, shr(_COMPACT_V_SHIFT, vs)))\\n                mstore(add(ptr, 0x40), r)\\n                mstore(add(ptr, 0x60), s)\\n                mstore(0, 0)\\n                pop(staticcall(gas(), 0x1, ptr, 0x80, 0, 0x20))\\n                signer := mload(0)\\n            }\\n        }\\n    }\\n\\n    /// @dev WARNING!!!\\n    /// There is a known signature malleability issue with two representations of signatures!\\n    /// Even though this function is able to verify both standard 65-byte and compact 64-byte EIP-2098 signatures\\n    /// one should never use raw signatures for any kind of invalidation logic in their code.\\n    /// As the standard and compact representations are interchangeable any invalidation logic that relies on\\n    /// signature uniqueness will get rekt.\\n    /// More info: https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-4h98-2769-gh6h\\n    function recover(bytes32 hash, bytes calldata signature) internal view returns (address signer) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n\\n            // memory[ptr:ptr+0x80] = (hash, v, r, s)\\n            switch signature.length\\n            case 65 {\\n                // memory[ptr+0x20:ptr+0x80] = (v, r, s)\\n                mstore(add(ptr, 0x20), byte(0, calldataload(add(signature.offset, 0x40))))\\n                calldatacopy(add(ptr, 0x40), signature.offset, 0x40)\\n            }\\n            case 64 {\\n                // memory[ptr+0x20:ptr+0x80] = (v, r, s)\\n                let vs := calldataload(add(signature.offset, 0x20))\\n                mstore(add(ptr, 0x20), add(27, shr(_COMPACT_V_SHIFT, vs)))\\n                calldatacopy(add(ptr, 0x40), signature.offset, 0x20)\\n                mstore(add(ptr, 0x60), and(vs, _COMPACT_S_MASK))\\n            }\\n            default {\\n                ptr := 0\\n            }\\n\\n            if ptr {\\n                if lt(mload(add(ptr, 0x60)), _S_BOUNDARY) {\\n                    // memory[ptr:ptr+0x20] = (hash)\\n                    mstore(ptr, hash)\\n\\n                    mstore(0, 0)\\n                    pop(staticcall(gas(), 0x1, ptr, 0x80, 0, 0x20))\\n                    signer := mload(0)\\n                }\\n            }\\n        }\\n    }\\n\\n    function recoverOrIsValidSignature(\\n        address signer,\\n        bytes32 hash,\\n        bytes calldata signature\\n    ) internal view returns (bool success) {\\n        if (signer == address(0)) return false;\\n        if ((signature.length == 64 || signature.length == 65) && recover(hash, signature) == signer) {\\n            return true;\\n        }\\n        return isValidSignature(signer, hash, signature);\\n    }\\n\\n    function recoverOrIsValidSignature(\\n        address signer,\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal view returns (bool success) {\\n        if (signer == address(0)) return false;\\n        if (recover(hash, v, r, s) == signer) {\\n            return true;\\n        }\\n        return isValidSignature(signer, hash, v, r, s);\\n    }\\n\\n    function recoverOrIsValidSignature(\\n        address signer,\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal view returns (bool success) {\\n        if (signer == address(0)) return false;\\n        if (recover(hash, r, vs) == signer) {\\n            return true;\\n        }\\n        return isValidSignature(signer, hash, r, vs);\\n    }\\n\\n    function recoverOrIsValidSignature65(\\n        address signer,\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal view returns (bool success) {\\n        if (signer == address(0)) return false;\\n        if (recover(hash, r, vs) == signer) {\\n            return true;\\n        }\\n        return isValidSignature65(signer, hash, r, vs);\\n    }\\n\\n    function isValidSignature(\\n        address signer,\\n        bytes32 hash,\\n        bytes calldata signature\\n    ) internal view returns (bool success) {\\n        // (bool success, bytes memory data) = signer.staticcall(abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, signature));\\n        // return success && data.length >= 4 && abi.decode(data, (bytes4)) == IERC1271.isValidSignature.selector;\\n        bytes4 selector = IERC1271.isValidSignature.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n\\n            mstore(ptr, selector)\\n            mstore(add(ptr, 0x04), hash)\\n            mstore(add(ptr, 0x24), 0x40)\\n            mstore(add(ptr, 0x44), signature.length)\\n            calldatacopy(add(ptr, 0x64), signature.offset, signature.length)\\n            if staticcall(gas(), signer, ptr, add(0x64, signature.length), 0, 0x20) {\\n                success := and(eq(selector, mload(0)), eq(returndatasize(), 0x20))\\n            }\\n        }\\n    }\\n\\n    function isValidSignature(\\n        address signer,\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal view returns (bool success) {\\n        bytes4 selector = IERC1271.isValidSignature.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n\\n            mstore(ptr, selector)\\n            mstore(add(ptr, 0x04), hash)\\n            mstore(add(ptr, 0x24), 0x40)\\n            mstore(add(ptr, 0x44), 65)\\n            mstore(add(ptr, 0x64), r)\\n            mstore(add(ptr, 0x84), s)\\n            mstore8(add(ptr, 0xa4), v)\\n            if staticcall(gas(), signer, ptr, 0xa5, 0, 0x20) {\\n                success := and(eq(selector, mload(0)), eq(returndatasize(), 0x20))\\n            }\\n        }\\n    }\\n\\n    function isValidSignature(\\n        address signer,\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal view returns (bool success) {\\n        // (bool success, bytes memory data) = signer.staticcall(abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, abi.encodePacked(r, vs)));\\n        // return success && data.length >= 4 && abi.decode(data, (bytes4)) == IERC1271.isValidSignature.selector;\\n        bytes4 selector = IERC1271.isValidSignature.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n\\n            mstore(ptr, selector)\\n            mstore(add(ptr, 0x04), hash)\\n            mstore(add(ptr, 0x24), 0x40)\\n            mstore(add(ptr, 0x44), 64)\\n            mstore(add(ptr, 0x64), r)\\n            mstore(add(ptr, 0x84), vs)\\n            if staticcall(gas(), signer, ptr, 0xa4, 0, 0x20) {\\n                success := and(eq(selector, mload(0)), eq(returndatasize(), 0x20))\\n            }\\n        }\\n    }\\n\\n    function isValidSignature65(\\n        address signer,\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal view returns (bool success) {\\n        // (bool success, bytes memory data) = signer.staticcall(abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, abi.encodePacked(r, vs & ~uint256(1 << 255), uint8(vs >> 255))));\\n        // return success && data.length >= 4 && abi.decode(data, (bytes4)) == IERC1271.isValidSignature.selector;\\n        bytes4 selector = IERC1271.isValidSignature.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n\\n            mstore(ptr, selector)\\n            mstore(add(ptr, 0x04), hash)\\n            mstore(add(ptr, 0x24), 0x40)\\n            mstore(add(ptr, 0x44), 65)\\n            mstore(add(ptr, 0x64), r)\\n            mstore(add(ptr, 0x84), and(vs, _COMPACT_S_MASK))\\n            mstore8(add(ptr, 0xa4), add(27, shr(_COMPACT_V_SHIFT, vs)))\\n            if staticcall(gas(), signer, ptr, 0xa5, 0, 0x20) {\\n                success := and(eq(selector, mload(0)), eq(returndatasize(), 0x20))\\n            }\\n        }\\n    }\\n\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 res) {\\n        // 32 is the length in bytes of hash, enforced by the type signature above\\n        // return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            mstore(0, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000) // \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\"\\n            mstore(28, hash)\\n            res := keccak256(0, 60)\\n        }\\n    }\\n\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 res) {\\n        // return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x1901000000000000000000000000000000000000000000000000000000000000) // \\\"\\\\x19\\\\x01\\\"\\n            mstore(add(ptr, 0x02), domainSeparator)\\n            mstore(add(ptr, 0x22), structHash)\\n            res := keccak256(ptr, 66)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd80027f75ce74daa539245dd77f4be87d0db4b3db72c459b6f326656fe87ae86\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC1271 standard signature validation method for\\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC1271 {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param hash      Hash of the data to be signed\\n     * @param signature Signature byte array associated with _data\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/RevertReasonForwarder.sol":{"RevertReasonForwarder":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Revert reason forwarder.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206355962605b67ef308b730029b0d9307b414aa6587cbeb2452dd40a5745ce1b864736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x55962605 0xB6 PUSH31 0xF308B730029B0D9307B414AA6587CBEB2452DD40A5745CE1B864736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"94:410:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206355962605b67ef308b730029b0d9307b414aa6587cbeb2452dd40a5745ce1b864736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x55962605 0xB6 PUSH31 0xF308B730029B0D9307B414AA6587CBEB2452DD40A5745CE1B864736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"94:410:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"reRevert()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Revert reason forwarder.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/RevertReasonForwarder.sol\":\"RevertReasonForwarder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/libraries/RevertReasonForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Revert reason forwarder.\\nlibrary RevertReasonForwarder {\\n    /// @dev Forwards latest externall call revert.\\n    function reRevert() internal pure {\\n        // bubble up revert reason from latest external call\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n            returndatacopy(ptr, 0, returndatasize())\\n            revert(ptr, returndatasize())\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x953c4a195ae066e90aac2ccfcef3121e4c5b74f2cf7cb4add341a7df7df2d00e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/RevertReasonParser.sol":{"RevertReasonParser":{"abi":[{"inputs":[],"name":"InvalidRevertReason","type":"error"}],"devdoc":{"kind":"dev","methods":{},"title":"Library that allows to parse unsuccessful arbitrary calls revert reasons. See https://solidity.readthedocs.io/en/latest/control-structures.html#revert for details. Note that we assume revert reason being abi-encoded as Error(string) so it may fail to parse reason if structured reverts appear in the future. All unsuccessful parsings get encoded as Unknown(data) string","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c6e7840f6b32c56c54317657a9fd5fb24fb491fc49a09c752e5729348862c4564736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC PUSH15 0x7840F6B32C56C54317657A9FD5FB24 0xFB 0x49 0x1F 0xC4 SWAP11 MULMOD 0xC7 MSTORE 0xE5 PUSH19 0x9348862C4564736F6C63430008110033000000 ","sourceMap":"486:2318:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c6e7840f6b32c56c54317657a9fd5fb24fb491fc49a09c752e5729348862c4564736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC PUSH15 0x7840F6B32C56C54317657A9FD5FB24 0xFB 0x49 0x1F 0xC4 SWAP11 MULMOD 0xC7 MSTORE 0xE5 PUSH19 0x9348862C4564736F6C63430008110033000000 ","sourceMap":"486:2318:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"parse(bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidRevertReason\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library that allows to parse unsuccessful arbitrary calls revert reasons. See https://solidity.readthedocs.io/en/latest/control-structures.html#revert for details. Note that we assume revert reason being abi-encoded as Error(string) so it may fail to parse reason if structured reverts appear in the future. All unsuccessful parsings get encoded as Unknown(data) string\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/RevertReasonParser.sol\":\"RevertReasonParser\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/libraries/RevertReasonParser.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./StringUtil.sol\\\";\\n\\n/** @title Library that allows to parse unsuccessful arbitrary calls revert reasons.\\n * See https://solidity.readthedocs.io/en/latest/control-structures.html#revert for details.\\n * Note that we assume revert reason being abi-encoded as Error(string) so it may fail to parse reason\\n * if structured reverts appear in the future.\\n *\\n * All unsuccessful parsings get encoded as Unknown(data) string\\n */\\nlibrary RevertReasonParser {\\n    using StringUtil for uint256;\\n    using StringUtil for bytes;\\n\\n    error InvalidRevertReason();\\n\\n    bytes4 private constant _ERROR_SELECTOR = bytes4(keccak256(\\\"Error(string)\\\"));\\n    bytes4 private constant _PANIC_SELECTOR = bytes4(keccak256(\\\"Panic(uint256)\\\"));\\n\\n    /// @dev Parses error `data` and returns actual with `prefix`.\\n    function parse(bytes memory data, string memory prefix) internal pure returns (string memory) {\\n        // https://solidity.readthedocs.io/en/latest/control-structures.html#revert\\n        // We assume that revert reason is abi-encoded as Error(string)\\n        bytes4 selector;\\n        if (data.length >= 4) {\\n            assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                selector := mload(add(data, 0x20))\\n            }\\n        }\\n\\n        // 68 = 4-byte selector + 32 bytes offset + 32 bytes length\\n        if (selector == _ERROR_SELECTOR && data.length >= 68) {\\n            string memory reason;\\n            assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                // 68 = 32 bytes data length + 4-byte selector + 32 bytes offset\\n                reason := add(data, 68)\\n            }\\n            /*\\n                revert reason is padded up to 32 bytes with ABI encoder: Error(string)\\n                also sometimes there is extra 32 bytes of zeros padded in the end:\\n                https://github.com/ethereum/solidity/issues/10170\\n                because of that we can't check for equality and instead check\\n                that string length + extra 68 bytes is equal or greater than overall data length\\n            */\\n            if (data.length >= 68 + bytes(reason).length) {\\n                return string.concat(prefix, \\\"Error(\\\", reason, \\\")\\\");\\n            }\\n        }\\n        // 36 = 4-byte selector + 32 bytes integer\\n        else if (selector == _PANIC_SELECTOR && data.length == 36) {\\n            uint256 code;\\n            assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                // 36 = 32 bytes data length + 4-byte selector\\n                code := mload(add(data, 36))\\n            }\\n            return string.concat(prefix, \\\"Panic(\\\", code.toHex(), \\\")\\\");\\n        }\\n        return string.concat(prefix, \\\"Unknown(\\\", data.toHex(), \\\")\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x1caccbf0a0cf2f9819f5ddb8fb4a35b2d4f908a9803639df9025796719045174\",\"license\":\"MIT\"},\"contracts/libraries/StringUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Library with gas-efficient string operations\\nlibrary StringUtil {\\n    function toHex(uint256 value) internal pure returns (string memory) {\\n        return toHex(abi.encodePacked(value));\\n    }\\n\\n    function toHex(address value) internal pure returns (string memory) {\\n        return toHex(abi.encodePacked(value));\\n    }\\n\\n    /// @dev this is the assembly adaptation of highly optimized toHex16 code from Mikhail Vladimirov\\n    /// https://stackoverflow.com/a/69266989\\n    function toHex(bytes memory data) internal pure returns (string memory result) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            function _toHex16(input) -> output {\\n                output := or(\\n                    and(input, 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000),\\n                    shr(64, and(input, 0x0000000000000000FFFFFFFFFFFFFFFF00000000000000000000000000000000))\\n                )\\n                output := or(\\n                    and(output, 0xFFFFFFFF000000000000000000000000FFFFFFFF000000000000000000000000),\\n                    shr(32, and(output, 0x00000000FFFFFFFF000000000000000000000000FFFFFFFF0000000000000000))\\n                )\\n                output := or(\\n                    and(output, 0xFFFF000000000000FFFF000000000000FFFF000000000000FFFF000000000000),\\n                    shr(16, and(output, 0x0000FFFF000000000000FFFF000000000000FFFF000000000000FFFF00000000))\\n                )\\n                output := or(\\n                    and(output, 0xFF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000),\\n                    shr(8, and(output, 0x00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000))\\n                )\\n                output := or(\\n                    shr(4, and(output, 0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000)),\\n                    shr(8, and(output, 0x0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00))\\n                )\\n                output := add(\\n                    add(0x3030303030303030303030303030303030303030303030303030303030303030, output),\\n                    mul(\\n                        and(\\n                            shr(4, add(output, 0x0606060606060606060606060606060606060606060606060606060606060606)),\\n                            0x0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F\\n                        ),\\n                        7 // Change 7 to 39 for lower case output\\n                    )\\n                )\\n            }\\n\\n            result := mload(0x40)\\n            let length := mload(data)\\n            let resultLength := shl(1, length)\\n            let toPtr := add(result, 0x22) // 32 bytes for length + 2 bytes for '0x'\\n            mstore(0x40, add(toPtr, resultLength)) // move free memory pointer\\n            mstore(add(result, 2), 0x3078) // 0x3078 is right aligned so we write to `result + 2`\\n            // to store the last 2 bytes in the beginning of the string\\n            mstore(result, add(resultLength, 2)) // extra 2 bytes for '0x'\\n\\n            for {\\n                let fromPtr := add(data, 0x20)\\n                let endPtr := add(fromPtr, length)\\n            } lt(fromPtr, endPtr) {\\n                fromPtr := add(fromPtr, 0x20)\\n            } {\\n                let rawData := mload(fromPtr)\\n                let hexData := _toHex16(rawData)\\n                mstore(toPtr, hexData)\\n                toPtr := add(toPtr, 0x20)\\n                hexData := _toHex16(shl(128, rawData))\\n                mstore(toPtr, hexData)\\n                toPtr := add(toPtr, 0x20)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x47867f007afaefa24c40fe487b968f553f4551c941dfa53afe8cc29e1fb68f38\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[],"name":"ForceApproveFailed","type":"error"},{"inputs":[],"name":"Permit2TransferAmountTooHigh","type":"error"},{"inputs":[],"name":"SafeDecreaseAllowanceFailed","type":"error"},{"inputs":[],"name":"SafeIncreaseAllowanceFailed","type":"error"},{"inputs":[],"name":"SafePermitBadLength","type":"error"},{"inputs":[],"name":"SafeTransferFailed","type":"error"},{"inputs":[],"name":"SafeTransferFromFailed","type":"error"}],"devdoc":{"kind":"dev","methods":{},"title":"Implements efficient safe methods for ERC20 interface.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a453bd4bcf9c18cccd6349d4c0a4682e4349130f27b767b033ef86a129f08e6764736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 MSTORE8 0xBD 0x4B 0xCF SWAP13 XOR 0xCC 0xCD PUSH4 0x49D4C0A4 PUSH9 0x2E4349130F27B767B0 CALLER 0xEF DUP7 LOG1 0x29 CREATE DUP15 PUSH8 0x64736F6C63430008 GT STOP CALLER ","sourceMap":"730:23152:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a453bd4bcf9c18cccd6349d4c0a4682e4349130f27b767b033ef86a129f08e6764736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 MSTORE8 0xBD 0x4B 0xCF SWAP13 XOR 0xCC 0xCD PUSH4 0x49D4C0A4 PUSH9 0x2E4349130F27B767B0 CALLER 0xEF DUP7 LOG1 0x29 CREATE DUP15 PUSH8 0x64736F6C63430008 GT STOP CALLER ","sourceMap":"730:23152:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_makeCall(contract IERC20,bytes4,address,uint256)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeBalanceOf(contract IERC20,address)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeDeposit(contract IWETH,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20,address,address,bytes calldata)":"infinite","safePermit(contract IERC20,bytes calldata)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite","safeTransferFromPermit2(contract IERC20,address,address,uint256)":"infinite","safeTransferFromUniversal(contract IERC20,address,address,uint256,bool)":"infinite","safeWithdraw(contract IWETH,uint256)":"infinite","safeWithdrawTo(contract IWETH,uint256,address)":"infinite","tryPermit(contract IERC20,address,address,bytes calldata)":"infinite","tryPermit(contract IERC20,bytes calldata)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ForceApproveFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permit2TransferAmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeDecreaseAllowanceFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeIncreaseAllowanceFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafePermitBadLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFromFailed\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Implements efficient safe methods for ERC20 interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Compared to the standard ERC20, this implementation offers several enhancements: 1. more gas-efficient, providing significant savings in transaction costs. 2. support for different permit implementations 3. forceApprove functionality 4. support for WETH deposit and withdraw\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/interfaces/IDaiLikePermit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IDaiLikePermit {\\n    function permit(\\n        address holder,\\n        address spender,\\n        uint256 nonce,\\n        uint256 expiry,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbbb219886412a339a7f84b0850f700311dd2b3a106919ae54fa0a215d847a3b2\",\"license\":\"MIT\"},\"contracts/interfaces/IPermit2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IPermit2 {\\n    struct PermitDetails {\\n        // ERC20 token address\\n        address token;\\n        // the maximum amount allowed to spend\\n        uint160 amount;\\n        // timestamp at which a spender's token allowances become invalid\\n        uint48 expiration;\\n        // an incrementing value indexed per owner,token,and spender for each signature\\n        uint48 nonce;\\n    }\\n    /// @notice The permit message signed for a single token allownce\\n    struct PermitSingle {\\n        // the permit data for a single token alownce\\n        PermitDetails details;\\n        // address permissioned on the allowed tokens\\n        address spender;\\n        // deadline on the permit signature\\n        uint256 sigDeadline;\\n    }\\n    /// @notice Packed allowance\\n    struct PackedAllowance {\\n        // amount allowed\\n        uint160 amount;\\n        // permission expiry\\n        uint48 expiration;\\n        // an incrementing value indexed per owner,token,and spender for each signature\\n        uint48 nonce;\\n    }\\n\\n    function transferFrom(address user, address spender, uint160 amount, address token) external;\\n\\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\\n\\n    function allowance(address user, address token, address spender) external view returns (PackedAllowance memory);\\n}\\n\",\"keccak256\":\"0x63209a082f66ecb584b86e412b3dd0010e9675bc19bc1f80a75437311df7ec11\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    event Deposit(address indexed dst, uint wad);\\n\\n    event Withdrawal(address indexed src, uint wad);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xc8132cbe41b3dc902df69adbbdf230bbde79647c676d064c58bc6092de6077d5\",\"license\":\"MIT\"},\"contracts/libraries/RevertReasonForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Revert reason forwarder.\\nlibrary RevertReasonForwarder {\\n    /// @dev Forwards latest externall call revert.\\n    function reRevert() internal pure {\\n        // bubble up revert reason from latest external call\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n            returndatacopy(ptr, 0, returndatasize())\\n            revert(ptr, returndatasize())\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x953c4a195ae066e90aac2ccfcef3121e4c5b74f2cf7cb4add341a7df7df2d00e\",\"license\":\"MIT\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../interfaces/IDaiLikePermit.sol\\\";\\nimport \\\"../interfaces/IPermit2.sol\\\";\\nimport \\\"../interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/RevertReasonForwarder.sol\\\";\\n\\n/**\\n * @title Implements efficient safe methods for ERC20 interface.\\n * @notice Compared to the standard ERC20, this implementation offers several enhancements:\\n * 1. more gas-efficient, providing significant savings in transaction costs.\\n * 2. support for different permit implementations\\n * 3. forceApprove functionality\\n * 4. support for WETH deposit and withdraw\\n */\\nlibrary SafeERC20 {\\n    error SafeTransferFailed();\\n    error SafeTransferFromFailed();\\n    error ForceApproveFailed();\\n    error SafeIncreaseAllowanceFailed();\\n    error SafeDecreaseAllowanceFailed();\\n    error SafePermitBadLength();\\n    error Permit2TransferAmountTooHigh();\\n\\n    // Uniswap Permit2 address\\n    address private constant _PERMIT2 = 0x000000000022D473030F116dDEE9F6B43aC78BA3;\\n    bytes4 private constant _PERMIT_LENGTH_ERROR = 0x68275857;  // SafePermitBadLength.selector\\n    uint256 private constant _RAW_CALL_GAS_LIMIT = 5000;\\n\\n    /**\\n     * @notice Fetches the balance of a specific ERC20 token held by an account.\\n     * Consumes less gas then regular `ERC20.balanceOf`.\\n     * @param token The IERC20 token contract for which the balance will be fetched.\\n     * @param account The address of the account whose token balance will be fetched.\\n     * @return tokenBalance The balance of the specified ERC20 token held by the account.\\n     */\\n    function safeBalanceOf(\\n        IERC20 token,\\n        address account\\n    ) internal view returns(uint256 tokenBalance) {\\n        bytes4 selector = IERC20.balanceOf.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            mstore(0x00, selector)\\n            mstore(0x04, account)\\n            let success := staticcall(gas(), token, 0x00, 0x24, 0x00, 0x20)\\n            tokenBalance := mload(0)\\n\\n            if or(iszero(success), lt(returndatasize(), 0x20)) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another.\\n     * @dev If permit2 is true, uses the Permit2 standard; otherwise uses the standard ERC20 transferFrom. \\n     * Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     * @param permit2 If true, uses the Permit2 standard for the transfer; otherwise uses the standard ERC20 transferFrom.\\n     */\\n    function safeTransferFromUniversal(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bool permit2\\n    ) internal {\\n        if (permit2) {\\n            safeTransferFromPermit2(token, from, to, amount);\\n        } else {\\n            safeTransferFrom(token, from, to, amount);\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another using the ERC20 standard.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bytes4 selector = token.transferFrom.selector;\\n        bool success;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), from)\\n            mstore(add(data, 0x24), to)\\n            mstore(add(data, 0x44), amount)\\n            success := call(gas(), token, 0, data, 100, 0x0, 0x20)\\n            if success {\\n                switch returndatasize()\\n                case 0 {\\n                    success := gt(extcodesize(token), 0)\\n                }\\n                default {\\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\\n                }\\n            }\\n        }\\n        if (!success) revert SafeTransferFromFailed();\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another using the Permit2 standard.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFromPermit2(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        if (amount > type(uint160).max) revert Permit2TransferAmountTooHigh();\\n        bytes4 selector = IPermit2.transferFrom.selector;\\n        bool success;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), from)\\n            mstore(add(data, 0x24), to)\\n            mstore(add(data, 0x44), amount)\\n            mstore(add(data, 0x64), token)\\n            success := call(gas(), _PERMIT2, 0, data, 0x84, 0x0, 0x0)\\n            if success {\\n                success := gt(extcodesize(_PERMIT2), 0)\\n            }\\n        }\\n        if (!success) revert SafeTransferFromFailed();\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens to another address.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param value The amount of tokens to transfer.\\n     */\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        if (!_makeCall(token, token.transfer.selector, to, value)) {\\n            revert SafeTransferFailed();\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to approve a spender to spend a certain amount of tokens.\\n     * @dev If `approve(from, to, amount)` fails, it tries to set the allowance to zero, and retries the `approve` call.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function forceApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        if (!_makeCall(token, token.approve.selector, spender, value)) {\\n            if (\\n                !_makeCall(token, token.approve.selector, spender, 0) ||\\n                !_makeCall(token, token.approve.selector, spender, value)\\n            ) {\\n                revert ForceApproveFailed();\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely increases the allowance of a spender.\\n     * @dev Increases with safe math check. Checks if the increased allowance will overflow, if yes, then it reverts the transaction.\\n     * Then uses `forceApprove` to increase the allowance.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to increase the allowance by.\\n     */\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 allowance = token.allowance(address(this), spender);\\n        if (value > type(uint256).max - allowance) revert SafeIncreaseAllowanceFailed();\\n        forceApprove(token, spender, allowance + value);\\n    }\\n\\n    /**\\n     * @notice Safely decreases the allowance of a spender.\\n     * @dev Decreases with safe math check. Checks if the decreased allowance will underflow, if yes, then it reverts the transaction.\\n     * Then uses `forceApprove` to increase the allowance.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to decrease the allowance by.\\n     */\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 allowance = token.allowance(address(this), spender);\\n        if (value > allowance) revert SafeDecreaseAllowanceFailed();\\n        forceApprove(token, spender, allowance - value);\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\\n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param permit The permit data to be used in the function call.\\n     */\\n    function safePermit(IERC20 token, bytes calldata permit) internal {\\n        if (!tryPermit(token, msg.sender, address(this), permit)) RevertReasonForwarder.reRevert();\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with custom owner and spender parameters. \\n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param owner The owner of the tokens for which the permit is made.\\n     * @param spender The spender allowed to spend the tokens by the permit.\\n     * @param permit The permit data to be used in the function call.\\n     */\\n    function safePermit(IERC20 token, address owner, address spender, bytes calldata permit) internal {\\n        if (!tryPermit(token, owner, spender, permit)) RevertReasonForwarder.reRevert();\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\\n     * @dev Invokes `tryPermit` with sender as owner and contract as spender.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param permit The permit data to be used in the function call.\\n     * @return success Returns true if the permit function was successfully executed, false otherwise.\\n     */\\n    function tryPermit(IERC20 token, bytes calldata permit) internal returns(bool success) {\\n        return tryPermit(token, msg.sender, address(this), permit);\\n    }\\n\\n    /**\\n     * @notice The function attempts to call the permit function on a given ERC20 token.\\n     * @dev The function is designed to support a variety of permit functions, namely: IERC20Permit, IDaiLikePermit, and IPermit2.\\n     * It accommodates both Compact and Full formats of these permit types.\\n     * Please note, it is expected that the `expiration` parameter for the compact Permit2 and the `deadline` parameter \\n     * for the compact Permit are to be incremented by one before invoking this function. This approach is motivated by\\n     * gas efficiency considerations; as the unlimited expiration period is likely to be the most common scenario, and \\n     * zeros are cheaper to pass in terms of gas cost. Thus, callers should increment the expiration or deadline by one\\n     * before invocation for optimized performance.\\n     * @param token The address of the ERC20 token on which to call the permit function.\\n     * @param owner The owner of the tokens. This address should have signed the off-chain permit.\\n     * @param spender The address which will be approved for transfer of tokens.\\n     * @param permit The off-chain permit data, containing different fields depending on the type of permit function.\\n     * @return success A boolean indicating whether the permit call was successful.\\n     */\\n    function tryPermit(IERC20 token, address owner, address spender, bytes calldata permit) internal returns(bool success) {\\n        // load function selectors for different permit standards\\n        bytes4 permitSelector = IERC20Permit.permit.selector;\\n        bytes4 daiPermitSelector = IDaiLikePermit.permit.selector;\\n        bytes4 permit2Selector = IPermit2.permit.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n\\n            // Switch case for different permit lengths, indicating different permit standards\\n            switch permit.length\\n            // Compact IERC20Permit\\n            case 100 {\\n                mstore(ptr, permitSelector)     // store selector\\n                mstore(add(ptr, 0x04), owner)   // store owner\\n                mstore(add(ptr, 0x24), spender) // store spender\\n\\n                // Compact IERC20Permit.permit(uint256 value, uint32 deadline, uint256 r, uint256 vs)\\n                {  // stack too deep\\n                    let deadline := shr(224, calldataload(add(permit.offset, 0x20))) // loads permit.offset 0x20..0x23\\n                    let vs := calldataload(add(permit.offset, 0x44))                 // loads permit.offset 0x44..0x63\\n\\n                    calldatacopy(add(ptr, 0x44), permit.offset, 0x20)            // store value     = copy permit.offset 0x00..0x19\\n                    mstore(add(ptr, 0x64), sub(deadline, 1))                     // store deadline  = deadline - 1\\n                    mstore(add(ptr, 0x84), add(27, shr(255, vs)))                // store v         = most significant bit of vs + 27 (27 or 28)\\n                    calldatacopy(add(ptr, 0xa4), add(permit.offset, 0x24), 0x20) // store r         = copy permit.offset 0x24..0x43\\n                    mstore(add(ptr, 0xc4), shr(1, shl(1, vs)))                   // store s         = vs without most significant bit\\n                }\\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\\n            }\\n            // Compact IDaiLikePermit\\n            case 72 {\\n                mstore(ptr, daiPermitSelector)  // store selector\\n                mstore(add(ptr, 0x04), owner)   // store owner\\n                mstore(add(ptr, 0x24), spender) // store spender\\n\\n                // Compact IDaiLikePermit.permit(uint32 nonce, uint32 expiry, uint256 r, uint256 vs)\\n                {  // stack too deep\\n                    let expiry := shr(224, calldataload(add(permit.offset, 0x04))) // loads permit.offset 0x04..0x07\\n                    let vs := calldataload(add(permit.offset, 0x28))               // loads permit.offset 0x28..0x47\\n\\n                    mstore(add(ptr, 0x44), shr(224, calldataload(permit.offset))) // store nonce   = copy permit.offset 0x00..0x03\\n                    mstore(add(ptr, 0x64), sub(expiry, 1))                        // store expiry  = expiry - 1\\n                    mstore(add(ptr, 0x84), true)                                  // store allowed = true\\n                    mstore(add(ptr, 0xa4), add(27, shr(255, vs)))                 // store v       = most significant bit of vs + 27 (27 or 28)\\n                    calldatacopy(add(ptr, 0xc4), add(permit.offset, 0x08), 0x20)  // store r       = copy permit.offset 0x08..0x27\\n                    mstore(add(ptr, 0xe4), shr(1, shl(1, vs)))                    // store s       = vs without most significant bit\\n                }\\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\\n            }\\n            // IERC20Permit\\n            case 224 {\\n                mstore(ptr, permitSelector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\\n            }\\n            // IDaiLikePermit\\n            case 256 {\\n                mstore(ptr, daiPermitSelector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\\n            }\\n            // Compact IPermit2\\n            case 96 {\\n                // Compact IPermit2.permit(uint160 amount, uint32 expiration, uint32 nonce, uint32 sigDeadline, uint256 r, uint256 vs)\\n                mstore(ptr, permit2Selector)  // store selector\\n                mstore(add(ptr, 0x04), owner) // store owner\\n                mstore(add(ptr, 0x24), token) // store token\\n\\n                calldatacopy(add(ptr, 0x50), permit.offset, 0x14)             // store amount = copy permit.offset 0x00..0x13\\n                // and(0xffffffffffff, ...) - conversion to uint48 \\n                mstore(add(ptr, 0x64), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x14))), 1))) // store expiration = ((permit.offset 0x14..0x17 - 1) & 0xffffffffffff)\\n                mstore(add(ptr, 0x84), shr(224, calldataload(add(permit.offset, 0x18)))) // store nonce = copy permit.offset 0x18..0x1b\\n                mstore(add(ptr, 0xa4), spender)                               // store spender\\n                // and(0xffffffffffff, ...) - conversion to uint48\\n                mstore(add(ptr, 0xc4), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x1c))), 1))) // store sigDeadline = ((permit.offset 0x1c..0x1f - 1) & 0xffffffffffff)\\n                mstore(add(ptr, 0xe4), 0x100)                                 // store offset = 256\\n                mstore(add(ptr, 0x104), 0x40)                                 // store length = 64\\n                calldatacopy(add(ptr, 0x124), add(permit.offset, 0x20), 0x20) // store r      = copy permit.offset 0x20..0x3f\\n                calldatacopy(add(ptr, 0x144), add(permit.offset, 0x40), 0x20) // store vs     = copy permit.offset 0x40..0x5f\\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\\n            }\\n            // IPermit2\\n            case 352 {\\n                mstore(ptr, permit2Selector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\\n            }\\n            // Unknown\\n            default {\\n                mstore(ptr, _PERMIT_LENGTH_ERROR)\\n                revert(ptr, 4)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Executes a low level call to a token contract, making it resistant to reversion and erroneous boolean returns.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param selector The function signature that is to be called on the token contract.\\n     * @param to The address to which the token amount will be transferred.\\n     * @param amount The token amount to be transferred.\\n     * @return success A boolean indicating if the call was successful. Returns 'true' on success and 'false' on failure. \\n     * In case of success but no returned data, validates that the contract code exists.\\n     * In case of returned data, ensures that it's a boolean `true`.\\n     */\\n    function _makeCall(\\n        IERC20 token,\\n        bytes4 selector,\\n        address to,\\n        uint256 amount\\n    ) private returns (bool success) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), to)\\n            mstore(add(data, 0x24), amount)\\n            success := call(gas(), token, 0, data, 0x44, 0x0, 0x20)\\n            if success {\\n                switch returndatasize()\\n                case 0 {\\n                    success := gt(extcodesize(token), 0)\\n                }\\n                default {\\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely deposits a specified amount of Ether into the IWETH contract. Consumes less gas then regular `IWETH.deposit`.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of Ether to deposit into the IWETH contract.\\n     */\\n    function safeDeposit(IWETH weth, uint256 amount) internal {\\n        if (amount > 0) {\\n            bytes4 selector = IWETH.deposit.selector;\\n            assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                mstore(0, selector)\\n                if iszero(call(gas(), weth, amount, 0, 4, 0, 0)) {\\n                    returndatacopy(0, 0, returndatasize())\\n                    revert(0, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract. Consumes less gas then regular `IWETH.withdraw`.\\n     * @dev Uses inline assembly to interact with the IWETH contract.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\\n     */\\n    function safeWithdraw(IWETH weth, uint256 amount) internal {\\n        bytes4 selector = IWETH.withdraw.selector;\\n        assembly (\\\"memory-safe\\\") {  // solhint-disable-line no-inline-assembly\\n            mstore(0, selector)\\n            mstore(4, amount)\\n            if iszero(call(gas(), weth, 0, 0, 0x24, 0, 0)) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract to a specified recipient.\\n     * Consumes less gas then regular `IWETH.withdraw`.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\\n     * @param to The recipient of the withdrawn Ether.\\n     */\\n    function safeWithdrawTo(IWETH weth, uint256 amount, address to) internal {\\n        safeWithdraw(weth, amount);\\n        if (to != address(this)) {\\n            assembly (\\\"memory-safe\\\") {  // solhint-disable-line no-inline-assembly\\n                if iszero(call(_RAW_CALL_GAS_LIMIT, to, amount, 0, 0, 0, 0)) {\\n                    let ptr := mload(0x40)\\n                    returndatacopy(ptr, 0, returndatasize())\\n                    revert(ptr, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1c050d9eea8792471f3e92a8423c1900287452fe2cb8457208f8955e4ca556cc\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// EIP-2612 is Final as of 2022-11-01. This file is deprecated.\\n\\nimport \\\"./IERC20Permit.sol\\\";\\n\",\"keccak256\":\"0xc7134e0f63b0adcee02bf4b15efb2d0d4b1c03ae0d127dc90d846da4cab23a76\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Compared to the standard ERC20, this implementation offers several enhancements: 1. more gas-efficient, providing significant savings in transaction costs. 2. support for different permit implementations 3. forceApprove functionality 4. support for WETH deposit and withdraw","version":1}}},"contracts/libraries/StringUtil.sol":{"StringUtil":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Library with gas-efficient string operations","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc2a0562f2791bedee4e15eaef23ea862a68e6c27e45b0b3aa068d8913efab9364736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0x2A SDIV PUSH3 0xF2791B 0xED 0xEE 0x4E ISZERO 0xEA 0xEF 0x23 0xEA DUP7 0x2A PUSH9 0xE6C27E45B0B3AA068D DUP10 SGT 0xEF 0xAB SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"114:3562:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc2a0562f2791bedee4e15eaef23ea862a68e6c27e45b0b3aa068d8913efab9364736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0x2A SDIV PUSH3 0xF2791B 0xED 0xEE 0x4E ISZERO 0xEA 0xEF 0x23 0xEA DUP7 0x2A PUSH9 0xE6C27E45B0B3AA068D DUP10 SGT 0xEF 0xAB SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"114:3562:17:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHex(address)":"infinite","toHex(bytes memory)":"infinite","toHex(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library with gas-efficient string operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/StringUtil.sol\":\"StringUtil\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/libraries/StringUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Library with gas-efficient string operations\\nlibrary StringUtil {\\n    function toHex(uint256 value) internal pure returns (string memory) {\\n        return toHex(abi.encodePacked(value));\\n    }\\n\\n    function toHex(address value) internal pure returns (string memory) {\\n        return toHex(abi.encodePacked(value));\\n    }\\n\\n    /// @dev this is the assembly adaptation of highly optimized toHex16 code from Mikhail Vladimirov\\n    /// https://stackoverflow.com/a/69266989\\n    function toHex(bytes memory data) internal pure returns (string memory result) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            function _toHex16(input) -> output {\\n                output := or(\\n                    and(input, 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000),\\n                    shr(64, and(input, 0x0000000000000000FFFFFFFFFFFFFFFF00000000000000000000000000000000))\\n                )\\n                output := or(\\n                    and(output, 0xFFFFFFFF000000000000000000000000FFFFFFFF000000000000000000000000),\\n                    shr(32, and(output, 0x00000000FFFFFFFF000000000000000000000000FFFFFFFF0000000000000000))\\n                )\\n                output := or(\\n                    and(output, 0xFFFF000000000000FFFF000000000000FFFF000000000000FFFF000000000000),\\n                    shr(16, and(output, 0x0000FFFF000000000000FFFF000000000000FFFF000000000000FFFF00000000))\\n                )\\n                output := or(\\n                    and(output, 0xFF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000),\\n                    shr(8, and(output, 0x00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000))\\n                )\\n                output := or(\\n                    shr(4, and(output, 0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000)),\\n                    shr(8, and(output, 0x0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00))\\n                )\\n                output := add(\\n                    add(0x3030303030303030303030303030303030303030303030303030303030303030, output),\\n                    mul(\\n                        and(\\n                            shr(4, add(output, 0x0606060606060606060606060606060606060606060606060606060606060606)),\\n                            0x0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F\\n                        ),\\n                        7 // Change 7 to 39 for lower case output\\n                    )\\n                )\\n            }\\n\\n            result := mload(0x40)\\n            let length := mload(data)\\n            let resultLength := shl(1, length)\\n            let toPtr := add(result, 0x22) // 32 bytes for length + 2 bytes for '0x'\\n            mstore(0x40, add(toPtr, resultLength)) // move free memory pointer\\n            mstore(add(result, 2), 0x3078) // 0x3078 is right aligned so we write to `result + 2`\\n            // to store the last 2 bytes in the beginning of the string\\n            mstore(result, add(resultLength, 2)) // extra 2 bytes for '0x'\\n\\n            for {\\n                let fromPtr := add(data, 0x20)\\n                let endPtr := add(fromPtr, length)\\n            } lt(fromPtr, endPtr) {\\n                fromPtr := add(fromPtr, 0x20)\\n            } {\\n                let rawData := mload(fromPtr)\\n                let hexData := _toHex16(rawData)\\n                mstore(toPtr, hexData)\\n                toPtr := add(toPtr, 0x20)\\n                hexData := _toHex16(shl(128, rawData))\\n                mstore(toPtr, hexData)\\n                toPtr := add(toPtr, 0x20)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x47867f007afaefa24c40fe487b968f553f4551c941dfa53afe8cc29e1fb68f38\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/UniERC20.sol":{"UniERC20":{"abi":[{"inputs":[],"name":"ApproveCalledOnETH","type":"error"},{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"FromIsNotSender","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"NotEnoughValue","type":"error"},{"inputs":[],"name":"ToIsNotThis","type":"error"}],"devdoc":{"kind":"dev","methods":{},"title":"Library, which allows usage of ETH as ERC20 and ERC20 itself. Uses SafeERC20 library for ERC20 interface.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064f74b75af4baf0df85a72a81e9ba8d36e787919dab3a1b54e79849f58368cf064736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xF74B75AF4B 0xAF 0xD 0xF8 GAS PUSH19 0xA81E9BA8D36E787919DAB3A1B54E79849F5836 DUP13 CREATE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"414:5466:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064f74b75af4baf0df85a72a81e9ba8d36e787919dab3a1b54e79849f58368cf064736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xF74B75AF4B 0xAF 0xD 0xF8 GAS PUSH19 0xA81E9BA8D36E787919DAB3A1B54E79849F5836 DUP13 CREATE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"414:5466:18:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_uniDecode(contract IERC20,bytes4,bytes4)":"infinite","isETH(contract IERC20)":"infinite","uniApprove(contract IERC20,address,uint256)":"infinite","uniBalanceOf(contract IERC20,address)":"infinite","uniName(contract IERC20)":"infinite","uniSymbol(contract IERC20)":"infinite","uniTransfer(contract IERC20,address payable,uint256)":"infinite","uniTransferFrom(contract IERC20,address payable,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApproveCalledOnETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FromIsNotSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ToIsNotThis\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library, which allows usage of ETH as ERC20 and ERC20 itself. Uses SafeERC20 library for ERC20 interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UniERC20.sol\":\"UniERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"contracts/interfaces/IDaiLikePermit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IDaiLikePermit {\\n    function permit(\\n        address holder,\\n        address spender,\\n        uint256 nonce,\\n        uint256 expiry,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbbb219886412a339a7f84b0850f700311dd2b3a106919ae54fa0a215d847a3b2\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20MetadataUppercase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC20MetadataUppercase {\\n    function NAME() external view returns (string memory); // solhint-disable-line func-name-mixedcase\\n\\n    function SYMBOL() external view returns (string memory); // solhint-disable-line func-name-mixedcase\\n}\\n\",\"keccak256\":\"0x42e8625b32dfa9746df2b79c66deb1cb6f085d8292a0e19f60339ce9dd7e9803\",\"license\":\"MIT\"},\"contracts/interfaces/IPermit2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IPermit2 {\\n    struct PermitDetails {\\n        // ERC20 token address\\n        address token;\\n        // the maximum amount allowed to spend\\n        uint160 amount;\\n        // timestamp at which a spender's token allowances become invalid\\n        uint48 expiration;\\n        // an incrementing value indexed per owner,token,and spender for each signature\\n        uint48 nonce;\\n    }\\n    /// @notice The permit message signed for a single token allownce\\n    struct PermitSingle {\\n        // the permit data for a single token alownce\\n        PermitDetails details;\\n        // address permissioned on the allowed tokens\\n        address spender;\\n        // deadline on the permit signature\\n        uint256 sigDeadline;\\n    }\\n    /// @notice Packed allowance\\n    struct PackedAllowance {\\n        // amount allowed\\n        uint160 amount;\\n        // permission expiry\\n        uint48 expiration;\\n        // an incrementing value indexed per owner,token,and spender for each signature\\n        uint48 nonce;\\n    }\\n\\n    function transferFrom(address user, address spender, uint160 amount, address token) external;\\n\\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\\n\\n    function allowance(address user, address token, address spender) external view returns (PackedAllowance memory);\\n}\\n\",\"keccak256\":\"0x63209a082f66ecb584b86e412b3dd0010e9675bc19bc1f80a75437311df7ec11\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    event Deposit(address indexed dst, uint wad);\\n\\n    event Withdrawal(address indexed src, uint wad);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xc8132cbe41b3dc902df69adbbdf230bbde79647c676d064c58bc6092de6077d5\",\"license\":\"MIT\"},\"contracts/libraries/RevertReasonForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Revert reason forwarder.\\nlibrary RevertReasonForwarder {\\n    /// @dev Forwards latest externall call revert.\\n    function reRevert() internal pure {\\n        // bubble up revert reason from latest external call\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n            returndatacopy(ptr, 0, returndatasize())\\n            revert(ptr, returndatasize())\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x953c4a195ae066e90aac2ccfcef3121e4c5b74f2cf7cb4add341a7df7df2d00e\",\"license\":\"MIT\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../interfaces/IDaiLikePermit.sol\\\";\\nimport \\\"../interfaces/IPermit2.sol\\\";\\nimport \\\"../interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/RevertReasonForwarder.sol\\\";\\n\\n/**\\n * @title Implements efficient safe methods for ERC20 interface.\\n * @notice Compared to the standard ERC20, this implementation offers several enhancements:\\n * 1. more gas-efficient, providing significant savings in transaction costs.\\n * 2. support for different permit implementations\\n * 3. forceApprove functionality\\n * 4. support for WETH deposit and withdraw\\n */\\nlibrary SafeERC20 {\\n    error SafeTransferFailed();\\n    error SafeTransferFromFailed();\\n    error ForceApproveFailed();\\n    error SafeIncreaseAllowanceFailed();\\n    error SafeDecreaseAllowanceFailed();\\n    error SafePermitBadLength();\\n    error Permit2TransferAmountTooHigh();\\n\\n    // Uniswap Permit2 address\\n    address private constant _PERMIT2 = 0x000000000022D473030F116dDEE9F6B43aC78BA3;\\n    bytes4 private constant _PERMIT_LENGTH_ERROR = 0x68275857;  // SafePermitBadLength.selector\\n    uint256 private constant _RAW_CALL_GAS_LIMIT = 5000;\\n\\n    /**\\n     * @notice Fetches the balance of a specific ERC20 token held by an account.\\n     * Consumes less gas then regular `ERC20.balanceOf`.\\n     * @param token The IERC20 token contract for which the balance will be fetched.\\n     * @param account The address of the account whose token balance will be fetched.\\n     * @return tokenBalance The balance of the specified ERC20 token held by the account.\\n     */\\n    function safeBalanceOf(\\n        IERC20 token,\\n        address account\\n    ) internal view returns(uint256 tokenBalance) {\\n        bytes4 selector = IERC20.balanceOf.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            mstore(0x00, selector)\\n            mstore(0x04, account)\\n            let success := staticcall(gas(), token, 0x00, 0x24, 0x00, 0x20)\\n            tokenBalance := mload(0)\\n\\n            if or(iszero(success), lt(returndatasize(), 0x20)) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another.\\n     * @dev If permit2 is true, uses the Permit2 standard; otherwise uses the standard ERC20 transferFrom. \\n     * Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     * @param permit2 If true, uses the Permit2 standard for the transfer; otherwise uses the standard ERC20 transferFrom.\\n     */\\n    function safeTransferFromUniversal(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bool permit2\\n    ) internal {\\n        if (permit2) {\\n            safeTransferFromPermit2(token, from, to, amount);\\n        } else {\\n            safeTransferFrom(token, from, to, amount);\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another using the ERC20 standard.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bytes4 selector = token.transferFrom.selector;\\n        bool success;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), from)\\n            mstore(add(data, 0x24), to)\\n            mstore(add(data, 0x44), amount)\\n            success := call(gas(), token, 0, data, 100, 0x0, 0x20)\\n            if success {\\n                switch returndatasize()\\n                case 0 {\\n                    success := gt(extcodesize(token), 0)\\n                }\\n                default {\\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\\n                }\\n            }\\n        }\\n        if (!success) revert SafeTransferFromFailed();\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens from one address to another using the Permit2 standard.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param from The address from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFromPermit2(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        if (amount > type(uint160).max) revert Permit2TransferAmountTooHigh();\\n        bytes4 selector = IPermit2.transferFrom.selector;\\n        bool success;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), from)\\n            mstore(add(data, 0x24), to)\\n            mstore(add(data, 0x44), amount)\\n            mstore(add(data, 0x64), token)\\n            success := call(gas(), _PERMIT2, 0, data, 0x84, 0x0, 0x0)\\n            if success {\\n                success := gt(extcodesize(_PERMIT2), 0)\\n            }\\n        }\\n        if (!success) revert SafeTransferFromFailed();\\n    }\\n\\n    /**\\n     * @notice Attempts to safely transfer tokens to another address.\\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\\n     * @param token The IERC20 token contract from which the tokens will be transferred.\\n     * @param to The address to which the tokens will be transferred.\\n     * @param value The amount of tokens to transfer.\\n     */\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        if (!_makeCall(token, token.transfer.selector, to, value)) {\\n            revert SafeTransferFailed();\\n        }\\n    }\\n\\n    /**\\n     * @notice Attempts to approve a spender to spend a certain amount of tokens.\\n     * @dev If `approve(from, to, amount)` fails, it tries to set the allowance to zero, and retries the `approve` call.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function forceApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        if (!_makeCall(token, token.approve.selector, spender, value)) {\\n            if (\\n                !_makeCall(token, token.approve.selector, spender, 0) ||\\n                !_makeCall(token, token.approve.selector, spender, value)\\n            ) {\\n                revert ForceApproveFailed();\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely increases the allowance of a spender.\\n     * @dev Increases with safe math check. Checks if the increased allowance will overflow, if yes, then it reverts the transaction.\\n     * Then uses `forceApprove` to increase the allowance.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to increase the allowance by.\\n     */\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 allowance = token.allowance(address(this), spender);\\n        if (value > type(uint256).max - allowance) revert SafeIncreaseAllowanceFailed();\\n        forceApprove(token, spender, allowance + value);\\n    }\\n\\n    /**\\n     * @notice Safely decreases the allowance of a spender.\\n     * @dev Decreases with safe math check. Checks if the decreased allowance will underflow, if yes, then it reverts the transaction.\\n     * Then uses `forceApprove` to increase the allowance.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to decrease the allowance by.\\n     */\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 allowance = token.allowance(address(this), spender);\\n        if (value > allowance) revert SafeDecreaseAllowanceFailed();\\n        forceApprove(token, spender, allowance - value);\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\\n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param permit The permit data to be used in the function call.\\n     */\\n    function safePermit(IERC20 token, bytes calldata permit) internal {\\n        if (!tryPermit(token, msg.sender, address(this), permit)) RevertReasonForwarder.reRevert();\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with custom owner and spender parameters. \\n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param owner The owner of the tokens for which the permit is made.\\n     * @param spender The spender allowed to spend the tokens by the permit.\\n     * @param permit The permit data to be used in the function call.\\n     */\\n    function safePermit(IERC20 token, address owner, address spender, bytes calldata permit) internal {\\n        if (!tryPermit(token, owner, spender, permit)) RevertReasonForwarder.reRevert();\\n    }\\n\\n    /**\\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\\n     * @dev Invokes `tryPermit` with sender as owner and contract as spender.\\n     * @param token The IERC20 token to execute the permit function on.\\n     * @param permit The permit data to be used in the function call.\\n     * @return success Returns true if the permit function was successfully executed, false otherwise.\\n     */\\n    function tryPermit(IERC20 token, bytes calldata permit) internal returns(bool success) {\\n        return tryPermit(token, msg.sender, address(this), permit);\\n    }\\n\\n    /**\\n     * @notice The function attempts to call the permit function on a given ERC20 token.\\n     * @dev The function is designed to support a variety of permit functions, namely: IERC20Permit, IDaiLikePermit, and IPermit2.\\n     * It accommodates both Compact and Full formats of these permit types.\\n     * Please note, it is expected that the `expiration` parameter for the compact Permit2 and the `deadline` parameter \\n     * for the compact Permit are to be incremented by one before invoking this function. This approach is motivated by\\n     * gas efficiency considerations; as the unlimited expiration period is likely to be the most common scenario, and \\n     * zeros are cheaper to pass in terms of gas cost. Thus, callers should increment the expiration or deadline by one\\n     * before invocation for optimized performance.\\n     * @param token The address of the ERC20 token on which to call the permit function.\\n     * @param owner The owner of the tokens. This address should have signed the off-chain permit.\\n     * @param spender The address which will be approved for transfer of tokens.\\n     * @param permit The off-chain permit data, containing different fields depending on the type of permit function.\\n     * @return success A boolean indicating whether the permit call was successful.\\n     */\\n    function tryPermit(IERC20 token, address owner, address spender, bytes calldata permit) internal returns(bool success) {\\n        // load function selectors for different permit standards\\n        bytes4 permitSelector = IERC20Permit.permit.selector;\\n        bytes4 daiPermitSelector = IDaiLikePermit.permit.selector;\\n        bytes4 permit2Selector = IPermit2.permit.selector;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n\\n            // Switch case for different permit lengths, indicating different permit standards\\n            switch permit.length\\n            // Compact IERC20Permit\\n            case 100 {\\n                mstore(ptr, permitSelector)     // store selector\\n                mstore(add(ptr, 0x04), owner)   // store owner\\n                mstore(add(ptr, 0x24), spender) // store spender\\n\\n                // Compact IERC20Permit.permit(uint256 value, uint32 deadline, uint256 r, uint256 vs)\\n                {  // stack too deep\\n                    let deadline := shr(224, calldataload(add(permit.offset, 0x20))) // loads permit.offset 0x20..0x23\\n                    let vs := calldataload(add(permit.offset, 0x44))                 // loads permit.offset 0x44..0x63\\n\\n                    calldatacopy(add(ptr, 0x44), permit.offset, 0x20)            // store value     = copy permit.offset 0x00..0x19\\n                    mstore(add(ptr, 0x64), sub(deadline, 1))                     // store deadline  = deadline - 1\\n                    mstore(add(ptr, 0x84), add(27, shr(255, vs)))                // store v         = most significant bit of vs + 27 (27 or 28)\\n                    calldatacopy(add(ptr, 0xa4), add(permit.offset, 0x24), 0x20) // store r         = copy permit.offset 0x24..0x43\\n                    mstore(add(ptr, 0xc4), shr(1, shl(1, vs)))                   // store s         = vs without most significant bit\\n                }\\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\\n            }\\n            // Compact IDaiLikePermit\\n            case 72 {\\n                mstore(ptr, daiPermitSelector)  // store selector\\n                mstore(add(ptr, 0x04), owner)   // store owner\\n                mstore(add(ptr, 0x24), spender) // store spender\\n\\n                // Compact IDaiLikePermit.permit(uint32 nonce, uint32 expiry, uint256 r, uint256 vs)\\n                {  // stack too deep\\n                    let expiry := shr(224, calldataload(add(permit.offset, 0x04))) // loads permit.offset 0x04..0x07\\n                    let vs := calldataload(add(permit.offset, 0x28))               // loads permit.offset 0x28..0x47\\n\\n                    mstore(add(ptr, 0x44), shr(224, calldataload(permit.offset))) // store nonce   = copy permit.offset 0x00..0x03\\n                    mstore(add(ptr, 0x64), sub(expiry, 1))                        // store expiry  = expiry - 1\\n                    mstore(add(ptr, 0x84), true)                                  // store allowed = true\\n                    mstore(add(ptr, 0xa4), add(27, shr(255, vs)))                 // store v       = most significant bit of vs + 27 (27 or 28)\\n                    calldatacopy(add(ptr, 0xc4), add(permit.offset, 0x08), 0x20)  // store r       = copy permit.offset 0x08..0x27\\n                    mstore(add(ptr, 0xe4), shr(1, shl(1, vs)))                    // store s       = vs without most significant bit\\n                }\\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\\n            }\\n            // IERC20Permit\\n            case 224 {\\n                mstore(ptr, permitSelector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\\n            }\\n            // IDaiLikePermit\\n            case 256 {\\n                mstore(ptr, daiPermitSelector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\\n            }\\n            // Compact IPermit2\\n            case 96 {\\n                // Compact IPermit2.permit(uint160 amount, uint32 expiration, uint32 nonce, uint32 sigDeadline, uint256 r, uint256 vs)\\n                mstore(ptr, permit2Selector)  // store selector\\n                mstore(add(ptr, 0x04), owner) // store owner\\n                mstore(add(ptr, 0x24), token) // store token\\n\\n                calldatacopy(add(ptr, 0x50), permit.offset, 0x14)             // store amount = copy permit.offset 0x00..0x13\\n                // and(0xffffffffffff, ...) - conversion to uint48 \\n                mstore(add(ptr, 0x64), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x14))), 1))) // store expiration = ((permit.offset 0x14..0x17 - 1) & 0xffffffffffff)\\n                mstore(add(ptr, 0x84), shr(224, calldataload(add(permit.offset, 0x18)))) // store nonce = copy permit.offset 0x18..0x1b\\n                mstore(add(ptr, 0xa4), spender)                               // store spender\\n                // and(0xffffffffffff, ...) - conversion to uint48\\n                mstore(add(ptr, 0xc4), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x1c))), 1))) // store sigDeadline = ((permit.offset 0x1c..0x1f - 1) & 0xffffffffffff)\\n                mstore(add(ptr, 0xe4), 0x100)                                 // store offset = 256\\n                mstore(add(ptr, 0x104), 0x40)                                 // store length = 64\\n                calldatacopy(add(ptr, 0x124), add(permit.offset, 0x20), 0x20) // store r      = copy permit.offset 0x20..0x3f\\n                calldatacopy(add(ptr, 0x144), add(permit.offset, 0x40), 0x20) // store vs     = copy permit.offset 0x40..0x5f\\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\\n            }\\n            // IPermit2\\n            case 352 {\\n                mstore(ptr, permit2Selector)\\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\\n            }\\n            // Unknown\\n            default {\\n                mstore(ptr, _PERMIT_LENGTH_ERROR)\\n                revert(ptr, 4)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Executes a low level call to a token contract, making it resistant to reversion and erroneous boolean returns.\\n     * @param token The IERC20 token contract on which the call will be made.\\n     * @param selector The function signature that is to be called on the token contract.\\n     * @param to The address to which the token amount will be transferred.\\n     * @param amount The token amount to be transferred.\\n     * @return success A boolean indicating if the call was successful. Returns 'true' on success and 'false' on failure. \\n     * In case of success but no returned data, validates that the contract code exists.\\n     * In case of returned data, ensures that it's a boolean `true`.\\n     */\\n    function _makeCall(\\n        IERC20 token,\\n        bytes4 selector,\\n        address to,\\n        uint256 amount\\n    ) private returns (bool success) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let data := mload(0x40)\\n\\n            mstore(data, selector)\\n            mstore(add(data, 0x04), to)\\n            mstore(add(data, 0x24), amount)\\n            success := call(gas(), token, 0, data, 0x44, 0x0, 0x20)\\n            if success {\\n                switch returndatasize()\\n                case 0 {\\n                    success := gt(extcodesize(token), 0)\\n                }\\n                default {\\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely deposits a specified amount of Ether into the IWETH contract. Consumes less gas then regular `IWETH.deposit`.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of Ether to deposit into the IWETH contract.\\n     */\\n    function safeDeposit(IWETH weth, uint256 amount) internal {\\n        if (amount > 0) {\\n            bytes4 selector = IWETH.deposit.selector;\\n            assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                mstore(0, selector)\\n                if iszero(call(gas(), weth, amount, 0, 4, 0, 0)) {\\n                    returndatacopy(0, 0, returndatasize())\\n                    revert(0, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract. Consumes less gas then regular `IWETH.withdraw`.\\n     * @dev Uses inline assembly to interact with the IWETH contract.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\\n     */\\n    function safeWithdraw(IWETH weth, uint256 amount) internal {\\n        bytes4 selector = IWETH.withdraw.selector;\\n        assembly (\\\"memory-safe\\\") {  // solhint-disable-line no-inline-assembly\\n            mstore(0, selector)\\n            mstore(4, amount)\\n            if iszero(call(gas(), weth, 0, 0, 0x24, 0, 0)) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract to a specified recipient.\\n     * Consumes less gas then regular `IWETH.withdraw`.\\n     * @param weth The IWETH token contract.\\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\\n     * @param to The recipient of the withdrawn Ether.\\n     */\\n    function safeWithdrawTo(IWETH weth, uint256 amount, address to) internal {\\n        safeWithdraw(weth, amount);\\n        if (to != address(this)) {\\n            assembly (\\\"memory-safe\\\") {  // solhint-disable-line no-inline-assembly\\n                if iszero(call(_RAW_CALL_GAS_LIMIT, to, amount, 0, 0, 0, 0)) {\\n                    let ptr := mload(0x40)\\n                    returndatacopy(ptr, 0, returndatasize())\\n                    revert(ptr, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1c050d9eea8792471f3e92a8423c1900287452fe2cb8457208f8955e4ca556cc\",\"license\":\"MIT\"},\"contracts/libraries/StringUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Library with gas-efficient string operations\\nlibrary StringUtil {\\n    function toHex(uint256 value) internal pure returns (string memory) {\\n        return toHex(abi.encodePacked(value));\\n    }\\n\\n    function toHex(address value) internal pure returns (string memory) {\\n        return toHex(abi.encodePacked(value));\\n    }\\n\\n    /// @dev this is the assembly adaptation of highly optimized toHex16 code from Mikhail Vladimirov\\n    /// https://stackoverflow.com/a/69266989\\n    function toHex(bytes memory data) internal pure returns (string memory result) {\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            function _toHex16(input) -> output {\\n                output := or(\\n                    and(input, 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000),\\n                    shr(64, and(input, 0x0000000000000000FFFFFFFFFFFFFFFF00000000000000000000000000000000))\\n                )\\n                output := or(\\n                    and(output, 0xFFFFFFFF000000000000000000000000FFFFFFFF000000000000000000000000),\\n                    shr(32, and(output, 0x00000000FFFFFFFF000000000000000000000000FFFFFFFF0000000000000000))\\n                )\\n                output := or(\\n                    and(output, 0xFFFF000000000000FFFF000000000000FFFF000000000000FFFF000000000000),\\n                    shr(16, and(output, 0x0000FFFF000000000000FFFF000000000000FFFF000000000000FFFF00000000))\\n                )\\n                output := or(\\n                    and(output, 0xFF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000),\\n                    shr(8, and(output, 0x00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000))\\n                )\\n                output := or(\\n                    shr(4, and(output, 0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000)),\\n                    shr(8, and(output, 0x0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00))\\n                )\\n                output := add(\\n                    add(0x3030303030303030303030303030303030303030303030303030303030303030, output),\\n                    mul(\\n                        and(\\n                            shr(4, add(output, 0x0606060606060606060606060606060606060606060606060606060606060606)),\\n                            0x0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F\\n                        ),\\n                        7 // Change 7 to 39 for lower case output\\n                    )\\n                )\\n            }\\n\\n            result := mload(0x40)\\n            let length := mload(data)\\n            let resultLength := shl(1, length)\\n            let toPtr := add(result, 0x22) // 32 bytes for length + 2 bytes for '0x'\\n            mstore(0x40, add(toPtr, resultLength)) // move free memory pointer\\n            mstore(add(result, 2), 0x3078) // 0x3078 is right aligned so we write to `result + 2`\\n            // to store the last 2 bytes in the beginning of the string\\n            mstore(result, add(resultLength, 2)) // extra 2 bytes for '0x'\\n\\n            for {\\n                let fromPtr := add(data, 0x20)\\n                let endPtr := add(fromPtr, length)\\n            } lt(fromPtr, endPtr) {\\n                fromPtr := add(fromPtr, 0x20)\\n            } {\\n                let rawData := mload(fromPtr)\\n                let hexData := _toHex16(rawData)\\n                mstore(toPtr, hexData)\\n                toPtr := add(toPtr, 0x20)\\n                hexData := _toHex16(shl(128, rawData))\\n                mstore(toPtr, hexData)\\n                toPtr := add(toPtr, 0x20)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x47867f007afaefa24c40fe487b968f553f4551c941dfa53afe8cc29e1fb68f38\",\"license\":\"MIT\"},\"contracts/libraries/UniERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../interfaces/IERC20MetadataUppercase.sol\\\";\\nimport \\\"./SafeERC20.sol\\\";\\nimport \\\"./StringUtil.sol\\\";\\n\\n/// @title Library, which allows usage of ETH as ERC20 and ERC20 itself. Uses SafeERC20 library for ERC20 interface.\\nlibrary UniERC20 {\\n    using SafeERC20 for IERC20;\\n\\n    error InsufficientBalance();\\n    error ApproveCalledOnETH();\\n    error NotEnoughValue();\\n    error FromIsNotSender();\\n    error ToIsNotThis();\\n    error ETHTransferFailed();\\n\\n    uint256 private constant _RAW_CALL_GAS_LIMIT = 5000;\\n    IERC20 private constant _ETH_ADDRESS = IERC20(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\\n    IERC20 private constant _ZERO_ADDRESS = IERC20(address(0));\\n\\n    /// @dev Returns true if `token` is ETH.\\n    function isETH(IERC20 token) internal pure returns (bool) {\\n        return (token == _ZERO_ADDRESS || token == _ETH_ADDRESS);\\n    }\\n\\n    /// @dev Returns `account` ERC20 `token` balance.\\n    function uniBalanceOf(IERC20 token, address account) internal view returns (uint256) {\\n        if (isETH(token)) {\\n            return account.balance;\\n        } else {\\n            return token.balanceOf(account);\\n        }\\n    }\\n\\n    /// @dev `token` transfer `to` `amount`.\\n    /// Note that this function does nothing in case of zero amount.\\n    function uniTransfer(\\n        IERC20 token,\\n        address payable to,\\n        uint256 amount\\n    ) internal {\\n        if (amount > 0) {\\n            if (isETH(token)) {\\n                if (address(this).balance < amount) revert InsufficientBalance();\\n                // solhint-disable-next-line avoid-low-level-calls\\n                (bool success, ) = to.call{value: amount, gas: _RAW_CALL_GAS_LIMIT}(\\\"\\\");\\n                if (!success) revert ETHTransferFailed();\\n            } else {\\n                token.safeTransfer(to, amount);\\n            }\\n        }\\n    }\\n\\n    /// @dev `token` transfer `from` `to` `amount`.\\n    /// Note that this function does nothing in case of zero amount.\\n    function uniTransferFrom(\\n        IERC20 token,\\n        address payable from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        if (amount > 0) {\\n            if (isETH(token)) {\\n                if (msg.value < amount) revert NotEnoughValue();\\n                if (from != msg.sender) revert FromIsNotSender();\\n                if (to != address(this)) revert ToIsNotThis();\\n                if (msg.value > amount) {\\n                    // Return remainder if exist\\n                    unchecked {\\n                        // solhint-disable-next-line avoid-low-level-calls\\n                        (bool success, ) = from.call{value: msg.value - amount, gas: _RAW_CALL_GAS_LIMIT}(\\\"\\\");\\n                        if (!success) revert ETHTransferFailed();\\n                    }\\n                }\\n            } else {\\n                token.safeTransferFrom(from, to, amount);\\n            }\\n        }\\n    }\\n\\n    /// @dev Returns `token` symbol from ERC20 metadata.\\n    function uniSymbol(IERC20 token) internal view returns (string memory) {\\n        return _uniDecode(token, IERC20Metadata.symbol.selector, IERC20MetadataUppercase.SYMBOL.selector);\\n    }\\n\\n    /// @dev Returns `token` name from ERC20 metadata.\\n    function uniName(IERC20 token) internal view returns (string memory) {\\n        return _uniDecode(token, IERC20Metadata.name.selector, IERC20MetadataUppercase.NAME.selector);\\n    }\\n\\n    /// @dev Reverts if `token` is ETH, otherwise performs ERC20 forceApprove.\\n    function uniApprove(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        if (isETH(token)) revert ApproveCalledOnETH();\\n\\n        token.forceApprove(to, amount);\\n    }\\n\\n    /// @dev 20K gas is provided to account for possible implementations of name/symbol\\n    /// (token implementation might be behind proxy or store the value in storage)\\n    function _uniDecode(\\n        IERC20 token,\\n        bytes4 lowerCaseSelector,\\n        bytes4 upperCaseSelector\\n    ) private view returns (string memory result) {\\n        if (isETH(token)) {\\n            return \\\"ETH\\\";\\n        }\\n\\n        (bool success, bytes memory data) = address(token).staticcall{gas: 20000}(\\n            abi.encodeWithSelector(lowerCaseSelector)\\n        );\\n        if (!success) {\\n            (success, data) = address(token).staticcall{gas: 20000}(abi.encodeWithSelector(upperCaseSelector));\\n        }\\n\\n        if (success && data.length >= 0x40) {\\n            (uint256 offset, uint256 len) = abi.decode(data, (uint256, uint256));\\n            /*\\n                return data is padded up to 32 bytes with ABI encoder also sometimes\\n                there is extra 32 bytes of zeros padded in the end:\\n                https://github.com/ethereum/solidity/issues/10170\\n                because of that we can't check for equality and instead check\\n                that overall data length is greater or equal than string length + extra 64 bytes\\n            */\\n            if (offset == 0x20 && data.length >= 0x40 + len) {\\n                assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                    result := add(data, 0x40)\\n                }\\n                return result;\\n            }\\n        }\\n        if (success && data.length == 32) {\\n            uint256 len = 0;\\n            while (len < data.length && data[len] >= 0x20 && data[len] <= 0x7E) {\\n                unchecked {\\n                    len++;\\n                }\\n            }\\n\\n            if (len > 0) {\\n                assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n                    mstore(data, len)\\n                }\\n                return string(data);\\n            }\\n        }\\n\\n        return StringUtil.toHex(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x17a81163027008404f1446b8db47970855cae660a18d1d0d908faaef641cc97b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// EIP-2612 is Final as of 2022-11-01. This file is deprecated.\\n\\nimport \\\"./IERC20Permit.sol\\\";\\n\",\"keccak256\":\"0xc7134e0f63b0adcee02bf4b15efb2d0d4b1c03ae0d127dc90d846da4cab23a76\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._","kind":"dev","methods":{"isValidSignature(bytes32,bytes)":{"details":"Should return whether the signature provided is valid for the provided data","params":{"hash":"Hash of the data to be signed","signature":"Signature byte array associated with _data"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC1271 standard signature validation method for\\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC1271 {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param hash      Hash of the data to be signed\\n     * @param signature Signature byte array associated with _data\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/solmate/src/auth/Owned.sol":{"Owned":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple single owner authorization mixin.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solmate/src/auth/Owned.sol\":\"Owned\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"lib/solmate/src/auth/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Simple single owner authorization mixin.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)\\nabstract contract Owned {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            OWNERSHIP STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    address public owner;\\n\\n    modifier onlyOwner() virtual {\\n        require(msg.sender == owner, \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(address _owner) {\\n        owner = _owner;\\n\\n        emit OwnershipTransferred(address(0), _owner);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             OWNERSHIP LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3949,"contract":"lib/solmate/src/auth/Owned.sol:Owned","label":"owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"notice":"Simple single owner authorization mixin.","version":1}}},"lib/solmate/src/tokens/ERC20.sol":{"ERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)","details":"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\",\"details\":\"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern and gas efficient ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solmate/src/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/weird-erc20/src/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4019,"contract":"lib/solmate/src/tokens/ERC20.sol:ERC20","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":4021,"contract":"lib/solmate/src/tokens/ERC20.sol:ERC20","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":4025,"contract":"lib/solmate/src/tokens/ERC20.sol:ERC20","label":"totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":4029,"contract":"lib/solmate/src/tokens/ERC20.sol:ERC20","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":4035,"contract":"lib/solmate/src/tokens/ERC20.sol:ERC20","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":4043,"contract":"lib/solmate/src/tokens/ERC20.sol:ERC20","label":"nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"notice":"Modern and gas efficient ERC20 + EIP-2612 implementation.","version":1}}}}}}